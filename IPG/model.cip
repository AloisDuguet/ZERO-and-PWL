STATISTICS
  Problem name     : SCIP_BR
  Variables        : 20 (9 binary, 0 integer, 0 implicit integer, 11 continuous)
  Constraints      : 0 initial, 39 maximal
OBJECTIVE
  Sense            : maximize
VARIABLES
  [binary] <b10>: obj=0, original bounds=[0,1]
  [binary] <b11>: obj=0, original bounds=[0,1]
  [binary] <b12>: obj=0, original bounds=[0,1]
  [binary] <b13>: obj=0, original bounds=[0,1]
  [binary] <b14>: obj=0, original bounds=[0,1]
  [binary] <b15>: obj=0, original bounds=[0,1]
  [binary] <b16>: obj=0, original bounds=[0,1]
  [binary] <b17>: obj=0, original bounds=[0,1]
  [binary] <b18>: obj=0, original bounds=[0,1]
  [continuous] <x9>: obj=-5.69965500966991, original bounds=[0,+inf]
  [continuous] <x0>: obj=-80.6431007765202, original bounds=[0,+inf]
  [continuous] <x1>: obj=-48.3151299778138, original bounds=[0,+inf]
  [continuous] <x2>: obj=-63.5736744000169, original bounds=[0,+inf]
  [continuous] <x3>: obj=-87.5694868757838, original bounds=[0,+inf]
  [continuous] <x4>: obj=-41.5632117907174, original bounds=[0,+inf]
  [continuous] <x5>: obj=-46.8941755621386, original bounds=[0,+inf]
  [continuous] <x6>: obj=-33.8353677120245, original bounds=[0,+inf]
  [continuous] <x7>: obj=-37.0012901726628, original bounds=[0,+inf]
  [continuous] <x8>: obj=-66.9771216886266, original bounds=[0,+inf]
  [continuous] <z>: obj=1, original bounds=[-inf,+inf]
CONSTRAINTS
  [linear] <c1>: <x9>[C] <= 0.0789334278126156;
  [linear] <c2>: <x0>[C] -94<b10>[B] <= 0;
  [linear] <c3>: <x1>[C] -72<b11>[B] <= 0;
  [linear] <c4>: <x2>[C] -177<b12>[B] <= 0;
  [linear] <c5>: <x3>[C] -57<b13>[B] <= 0;
  [linear] <c6>: <x4>[C] -60<b14>[B] <= 0;
  [linear] <c7>: <x5>[C] -186<b15>[B] <= 0;
  [linear] <c8>: <x6>[C] -64<b16>[B] <= 0;
  [linear] <c9>: <x7>[C] -109<b17>[B] <= 0;
  [linear] <c10>: <x8>[C] -182<b18>[B] <= 0;
  [linear] <c11>:  -<x0>[C] <= -0;
  [linear] <c12>:  -<x1>[C] <= -0;
  [linear] <c13>:  -<x2>[C] <= -0;
  [linear] <c14>:  -<x3>[C] <= -0;
  [linear] <c15>:  -<x4>[C] <= -0;
  [linear] <c16>:  -<x5>[C] <= -0;
  [linear] <c17>:  -<x6>[C] <= -0;
  [linear] <c18>:  -<x7>[C] <= -0;
  [linear] <c19>:  -<x8>[C] <= -0;
  [linear] <c20>:  -<x9>[C] <= -0;
  [linear] <c21>:  -<b10>[B] <= 0;
  [linear] <c22>: <b10>[B] <= 1;
  [linear] <c23>:  -<b11>[B] <= 0;
  [linear] <c24>: <b11>[B] <= 1;
  [linear] <c25>:  -<b12>[B] <= 0;
  [linear] <c26>: <b12>[B] <= 1;
  [linear] <c27>:  -<b13>[B] <= 0;
  [linear] <c28>: <b13>[B] <= 1;
  [linear] <c29>:  -<b14>[B] <= 0;
  [linear] <c30>: <b14>[B] <= 1;
  [linear] <c31>:  -<b15>[B] <= 0;
  [linear] <c32>: <b15>[B] <= 1;
  [linear] <c33>:  -<b16>[B] <= 0;
  [linear] <c34>: <b16>[B] <= 1;
  [linear] <c35>:  -<b17>[B] <= 0;
  [linear] <c36>: <b17>[B] <= 1;
  [linear] <c37>:  -<b18>[B] <= 0;
  [linear] <c38>: <b18>[B] <= 1;
  [nonlinear] <c39>: ((<x0> * 152.64) + (<x1> * 118.86) + (<x2> * 178.6) + (<x3> * 157.02) + (<x4> * 101.86) + (<x5> * 112.64) + (<x6> * 136.7) + (<x7> * 102.15) + (<x8> * 123.45) + (<x9> * 85.7143) + (<b10> * (-1651)) + (<b11> * (-974)) + (<b12> * (-1047)) + (<b13> * (-1945)) + (<b14> * (-1000)) + (<b15> * (-794)) + (<b16> * (-877)) + (<b17> * (-1267)) + (<b18> * (-1435)) + (<x0> * <x0> * (-1.18)) + (<x0> * <x1> * 0) + (<x0> * <x2> * 0) + (<x0> * <x3> * 0) + (<x0> * <x4> * 0) + (<x0> * <x5> * 0) + (<x0> * <x6> * 0) + (<x0> * <x7> * 0) + (<x0> * <x8> * 0) + (<x0> * <x9> * 0.04) + (<x0> * <b10> * 0) + (<x0> * <b11> * 0) + (<x0> * <b12> * 0) + (<x0> * <b13> * 0) + (<x0> * <b14> * 0) + (<x0> * <b15> * 0) + (<x0> * <b16> * 0) + (<x0> * <b17> * 0) + (<x0> * <b18> * 0) + (<x1> * <x1> * (-2)) + (<x1> * <x2> * 0) + (<x1> * <x3> * 0) + (<x1> * <x4> * 0) + (<x1> * <x5> * 0) + (<x1> * <x6> * 0) + (<x1> * <x7> * 0) + (<x1> * <x8> * 0) + (<x1> * <x9> * 0.0442857) + (<x1> * <b10> * 0) + (<x1> * <b11> * 0) + (<x1> * <b12> * 0) + (<x1> * <b13> * 0) + (<x1> * <b14> * 0) + (<x1> * <b15> * 0) + (<x1> * <b16> * 0) + (<x1> * <b17> * 0) + (<x1> * <b18> * 0) + (<x2> * <x2> * (-1.18)) + (<x2> * <x3> * 0) + (<x2> * <x4> * 0) + (<x2> * <x5> * 0) + (<x2> * <x6> * 0) + (<x2> * <x7> * 0) + (<x2> * <x8> * 0) + (<x2> * <x9> * 0.02) + (<x2> * <b10> * 0) + (<x2> * <b11> * 0) + (<x2> * <b12> * 0) + (<x2> * <b13> * 0) + (<b14> * <x2> * 0) + (<b15> * <x2> * 0) + (<b16> * <x2> * 0) + (<b17> * <x2> * 0) + (<b18> * <x2> * 0) + (<x3> * <x3> * (-2.42)) + (<x3> * <x4> * 0) + (<x3> * <x5> * 0) + (<x3> * <x6> * 0) + (<x3> * <x7> * 0) + (<x3> * <x8> * 0) + (<x3> * <x9> * 0.0214286) + (<x3> * <b10> * 0) + (<x3> * <b11> * 0) + (<x3> * <b12> * 0) + (<x3> * <b13> * 0) + (<b14> * <x3> * 0) + (<b15> * <x3> * 0) + (<b16> * <x3> * 0) + (<b17> * <x3> * 0) + (<b18> * <x3> * 0) + (<x4> * <x4> * (-2.51)) + (<x4> * <x5> * 0) + (<x4> * <x6> * 0) + (<x4> * <x7> * 0) + (<x4> * <x8> * 0) + (<x4> * <x9> * 0.0442857) + (<x4> * <b10> * 0) + (<x4> * <b11> * 0) + (<x4> * <b12> * 0) + (<x4> * <b13> * 0) + (<b14> * <x4> * 0) + (<b15> * <x4> * 0) + (<b16> * <x4> * 0) + (<b17> * <x4> * 0) + (<b18> * <x4> * 0) + (<x5> * <x5> * (-2.55)) + (<x5> * <x6> * 0) + (<x5> * <x7> * 0) + (<x5> * <x8> * 0) + (<x5> * <x9> * 0.0428571) + (<x5> * <b10> * 0) + (<x5> * <b11> * 0) + (<x5> * <b12> * 0) + (<x5> * <b13> * 0) + (<b14> * <x5> * 0) + (<b15> * <x5> * 0) + (<b16> * <x5> * 0) + (<b17> * <x5> * 0) + (<b18> * <x5> * 0) + (<x6> * <x6> * (-2.22)) + (<x6> * <x7> * 0) + (<x6> * <x8> * 0) + (<x6> * <x9> * 0.0414286) + (<x6> * <b10> * 0) + (<x6> * <b11> * 0) + (<x6> * <b12> * 0) + (<x6> * <b13> * 0) + (<b14> * <x6> * 0) + (<b15> * <x6> * 0) + (<b16> * <x6> * 0) + (<b17> * <x6> * 0) + (<b18> * <x6> * 0) + (<x7> * <x7> * (-1.99)) + (<x7> * <x8> * 0) + (<x7> * <x9> * 0.0342857) + (<x7> * <b10> * 0) + (<x7> * <b11> * 0) + (<x7> * <b12> * 0) + (<x7> * <b13> * 0) + (<b14> * <x7> * 0) + (<b15> * <x7> * 0) + (<b16> * <x7> * 0) + (<b17> * <x7> * 0) + (<b18> * <x7> * 0) + (<x8> * <x8> * (-1.88)) + (<x8> * <x9> * 0.0428571) + (<x8> * <b10> * 0) + (<x8> * <b11> * 0) + (<x8> * <b12> * 0) + (<x8> * <b13> * 0) + (<b14> * <x8> * 0) + (<b15> * <x8> * 0) + (<b16> * <x8> * 0) + (<b17> * <x8> * 0) + (<b18> * <x8> * 0) + (<x9> * <x9> * (-10.7143)) + (<x9> * <b10> * 0) + (<x9> * <b11> * 0) + (<x9> * <b12> * 0) + (<x9> * <b13> * 0) + (<b14> * <x9> * 0) + (<b15> * <x9> * 0) + (<b16> * <x9> * 0) + (<b17> * <x9> * 0) + (<b18> * <x9> * 0) + (<b10> * <b10> * 0) + (<b10> * <b11> * 0) + (<b10> * <b12> * 0) + (<b10> * <b13> * 0) + (<b14> * <b10> * 0) + (<b15> * <b10> * 0) + (<b16> * <b10> * 0) + (<b17> * <b10> * 0) + (<b18> * <b10> * 0) + (<b11> * <b11> * 0) + (<b11> * <b12> * 0) + (<b11> * <b13> * 0) + (<b14> * <b11> * 0) + (<b15> * <b11> * 0) + (<b16> * <b11> * 0) + (<b17> * <b11> * 0) + (<b18> * <b11> * 0) + (<b12> * <b12> * 0) + (<b12> * <b13> * 0) + (<b14> * <b12> * 0) + (<b15> * <b12> * 0) + (<b16> * <b12> * 0) + (<b17> * <b12> * 0) + (<b18> * <b12> * 0) + (<b13> * <b13> * 0) + (<b14> * <b13> * 0) + (<b15> * <b13> * 0) + (<b16> * <b13> * 0) + (<b17> * <b13> * 0) + (<b18> * <b13> * 0) + (<b14> * <b14> * 0) + (<b14> * <b15> * 0) + (<b14> * <b16> * 0) + (<b14> * <b17> * 0) + (<b14> * <b18> * 0) + (<b15> * <b15> * 0) + (<b15> * <b16> * 0) + (<b15> * <b17> * 0) + (<b15> * <b18> * 0) + (<b16> * <b16> * 0) + (<b16> * <b17> * 0) + (<b16> * <b18> * 0) + (<b17> * <b17> * 0) + (<b17> * <b18> * 0) + (<b18> * <b18> * 0) + ((power(sqrt(((<x9> * (-1)) + 1)), -1) + (power((exp((<x9> * (-20))) + 1), -1) * 2) + (-2)) * (-7)) + (<z> * (-1))) >= 0;
END
