<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="class_math_opt_1_1_m_p___param" kind="class" language="C++" prot="public">
    <compoundname>MathOpt::MP_Param</compoundname>
    <derivedcompoundref refid="class_math_opt_1_1_i_p___param" prot="public" virt="non-virtual">MathOpt::IP_Param</derivedcompoundref>
    <derivedcompoundref refid="class_math_opt_1_1_q_p___param" prot="public" virt="non-virtual">MathOpt::QP_Param</derivedcompoundref>
    <includes refid="mp__param_8h" local="no">mp_param.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_math_opt_1_1_m_p___param_1aae8144b23a29ea99d5ef793729438feb" prot="protected" static="no" mutable="no">
        <type>arma::sp_mat</type>
        <definition>arma::sp_mat MathOpt::MP_Param::Q</definition>
        <argsstring></argsstring>
        <name>Q</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/mp_param.h" line="28" column="15" bodyfile="include/mathopt/mp_param/mp_param.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_math_opt_1_1_m_p___param_1a69e39bfe4a58e5c43dbcb7ac16be3fe5" prot="protected" static="no" mutable="no">
        <type>arma::sp_mat</type>
        <definition>arma::sp_mat MathOpt::MP_Param::A</definition>
        <argsstring></argsstring>
        <name>A</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/mp_param.h" line="28" column="17" bodyfile="include/mathopt/mp_param/mp_param.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_math_opt_1_1_m_p___param_1adb541edcb7083da9bde8e6615063acd3" prot="protected" static="no" mutable="no">
        <type>arma::sp_mat</type>
        <definition>arma::sp_mat MathOpt::MP_Param::B</definition>
        <argsstring></argsstring>
        <name>B</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/mp_param.h" line="28" column="19" bodyfile="include/mathopt/mp_param/mp_param.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_math_opt_1_1_m_p___param_1a13727398531ec805acd474fa5da89056" prot="protected" static="no" mutable="no">
        <type>arma::sp_mat</type>
        <definition>arma::sp_mat MathOpt::MP_Param::C</definition>
        <argsstring></argsstring>
        <name>C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/mp_param.h" line="28" column="21" bodyfile="include/mathopt/mp_param/mp_param.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_math_opt_1_1_m_p___param_1a270fad22decf1dbdc2227ff9a4875e34" prot="protected" static="no" mutable="no">
        <type>arma::vec</type>
        <definition>arma::vec MathOpt::MP_Param::c</definition>
        <argsstring></argsstring>
        <name>c</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/mp_param.h" line="29" column="15" bodyfile="include/mathopt/mp_param/mp_param.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_math_opt_1_1_m_p___param_1af6e726c09d1d43359c2dad586b0fb4d5" prot="protected" static="no" mutable="no">
        <type>arma::vec</type>
        <definition>arma::vec MathOpt::MP_Param::b</definition>
        <argsstring></argsstring>
        <name>b</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/mp_param.h" line="29" column="17" bodyfile="include/mathopt/mp_param/mp_param.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_math_opt_1_1_m_p___param_1ab74a22bf304936286282f869cb646873" prot="protected" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int MathOpt::MP_Param::Nx</definition>
        <argsstring></argsstring>
        <name>Nx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/mp_param.h" line="31" column="15" bodyfile="include/mathopt/mp_param/mp_param.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_math_opt_1_1_m_p___param_1a1a69f24fcb92ebf76ea29c9407859f0a" prot="protected" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int MathOpt::MP_Param::Ny</definition>
        <argsstring></argsstring>
        <name>Ny</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/mp_param.h" line="31" column="18" bodyfile="include/mathopt/mp_param/mp_param.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_math_opt_1_1_m_p___param_1a5c20eb5e9dac543042b9888e012ab99b" prot="protected" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int MathOpt::MP_Param::Ncons</definition>
        <argsstring></argsstring>
        <name>Ncons</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/mp_param.h" line="31" column="21" bodyfile="include/mathopt/mp_param/mp_param.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_math_opt_1_1_m_p___param_1a70400a4046b1ab099f6c2ebbdceab6d5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const unsigned int</type>
        <definition>const unsigned int MathOpt::MP_Param::size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <briefdescription>
<para>Calculates <computeroutput>Nx</computeroutput>, <computeroutput>Ny</computeroutput> and <computeroutput>Ncons</computeroutput> Computes parameters in <ref refid="class_math_opt_1_1_m_p___param" kindref="compound">MP_Param</ref>: </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Computes <computeroutput>Ny</computeroutput> as number of rows in <ref refid="class_math_opt_1_1_m_p___param_1aae8144b23a29ea99d5ef793729438feb" kindref="member">MP_Param::Q</ref></para>
</listitem><listitem><para>Computes <computeroutput>Nx</computeroutput> as number of columns in <ref refid="class_math_opt_1_1_m_p___param_1a13727398531ec805acd474fa5da89056" kindref="member">MP_Param::C</ref></para>
</listitem><listitem><para>Computes <computeroutput>Ncons</computeroutput> as number of rows in <ref refid="class_math_opt_1_1_m_p___param_1af6e726c09d1d43359c2dad586b0fb4d5" kindref="member">MP_Param::b</ref>, i.e., the RHS of the constraints <verbatim>For proper working, MP_Param::dataCheck() has to be run after this.
@returns @p Ny, Number of variables in the quadratic program, QP
</verbatim> </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/mp_param.h" line="33" column="21" bodyfile="src/mathopt/mp_param/mp_param.cpp" bodystart="101" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_m_p___param_1aff8f3f085bd5938a352874c020f8ef23" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MathOpt::MP_Param::dataCheck</definition>
        <argsstring>(bool forceSymmetry=true) const</argsstring>
        <name>dataCheck</name>
        <param>
          <type>bool</type>
          <declname>forceSymmetry</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Check that the data for the <ref refid="class_math_opt_1_1_m_p___param" kindref="compound">MP_Param</ref> class is valid Always works after calls to <ref refid="class_math_opt_1_1_m_p___param_1a70400a4046b1ab099f6c2ebbdceab6d5" kindref="member">MP_Param::size()</ref> Checks that are done: </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Number of columns in <computeroutput>Q</computeroutput> is same as <computeroutput>Ny</computeroutput> (Q should be square)</para>
</listitem><listitem><para>Number of columns of <computeroutput>A</computeroutput> should be <computeroutput>Nx</computeroutput> </para>
</listitem><listitem><para>Number of columns of <computeroutput>B</computeroutput> should be <computeroutput>Ny</computeroutput> </para>
</listitem><listitem><para>Number of rows in <computeroutput>C</computeroutput> should be <computeroutput>Ny</computeroutput> </para>
</listitem><listitem><para>Size of <computeroutput>c</computeroutput> should be <computeroutput>Ny</computeroutput> </para>
</listitem><listitem><para><computeroutput>A</computeroutput> and <computeroutput>B</computeroutput> should have the same number of rows, equal to <computeroutput>Ncons</computeroutput> </para>
</listitem><listitem><para>if <computeroutput>forceSymmetry</computeroutput> is <computeroutput>true</computeroutput>, then Q should be symmetric</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="return"><para>true if all above checks are cleared. false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/mp_param.h" line="35" column="7" bodyfile="src/mathopt/mp_param/mp_param.cpp" bodystart="168" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_m_p___param_1a77c1f71200e55ee2fe1abe3c9eb13005" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool MathOpt::MP_Param::finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <reimplementedby refid="class_math_opt_1_1_i_p___param_1a551cbd1d23a9dee94d55144f3149a9ac">finalize</reimplementedby>
        <briefdescription>
<para>Finalize the <ref refid="class_math_opt_1_1_m_p___param" kindref="compound">MP_Param</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/mp_param.h" line="37" column="22" bodyfile="include/mathopt/mp_param/mp_param.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_math_opt_1_1_m_p___param_1af1d48cd18c52aaab1e99e11dfa4cce67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MathOpt::MP_Param::MP_Param</definition>
        <argsstring>()=default</argsstring>
        <name>MP_Param</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/mp_param.h" line="44" column="2"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_m_p___param_1a2593388bfb462f7a5e36708f8c6f9770" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MathOpt::MP_Param::MP_Param</definition>
        <argsstring>(const MP_Param &amp;M)=default</argsstring>
        <name>MP_Param</name>
        <param>
          <type>const <ref refid="class_math_opt_1_1_m_p___param" kindref="compound">MP_Param</ref> &amp;</type>
          <declname>M</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/mp_param.h" line="46" column="2"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_m_p___param_1a0f1cc247264404e29747200c7ddfc1ab" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>arma::sp_mat</type>
        <definition>arma::sp_mat MathOpt::MP_Param::getQ</definition>
        <argsstring>() const</argsstring>
        <name>getQ</name>
        <briefdescription>
<para>Read-only access to the private variable Q. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/mp_param.h" line="49" column="15" bodyfile="include/mathopt/mp_param/mp_param.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_m_p___param_1ab6633d7091d1e470230773cfbe53bf3d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>arma::sp_mat</type>
        <definition>arma::sp_mat MathOpt::MP_Param::getC</definition>
        <argsstring>() const</argsstring>
        <name>getC</name>
        <briefdescription>
<para>Read-only access to the private variable C. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/mp_param.h" line="50" column="15" bodyfile="include/mathopt/mp_param/mp_param.h" bodystart="50" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_m_p___param_1a40fff25cfb814374938f83ce9b3786de" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>arma::sp_mat</type>
        <definition>arma::sp_mat MathOpt::MP_Param::getA</definition>
        <argsstring>() const</argsstring>
        <name>getA</name>
        <briefdescription>
<para>Read-only access to the private variable A. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/mp_param.h" line="51" column="15" bodyfile="include/mathopt/mp_param/mp_param.h" bodystart="51" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_m_p___param_1af9a8eaa4d0d2034f3bc221757ebba7e2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>arma::sp_mat</type>
        <definition>arma::sp_mat MathOpt::MP_Param::getB</definition>
        <argsstring>() const</argsstring>
        <name>getB</name>
        <briefdescription>
<para>Read-only access to the private variable B. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/mp_param.h" line="52" column="15" bodyfile="include/mathopt/mp_param/mp_param.h" bodystart="52" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_m_p___param_1a5e6b2cba9aee0d780957a2e0c7329e02" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>arma::vec</type>
        <definition>arma::vec MathOpt::MP_Param::getc</definition>
        <argsstring>() const</argsstring>
        <name>getc</name>
        <briefdescription>
<para>Read-only access to the private variable c. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/mp_param.h" line="53" column="15" bodyfile="include/mathopt/mp_param/mp_param.h" bodystart="53" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_m_p___param_1a1f0114c151fc557843e39364bca6e1a7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>arma::vec</type>
        <definition>arma::vec MathOpt::MP_Param::getb</definition>
        <argsstring>() const</argsstring>
        <name>getb</name>
        <briefdescription>
<para>Read-only access to the private variable b. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/mp_param.h" line="54" column="15" bodyfile="include/mathopt/mp_param/mp_param.h" bodystart="54" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_m_p___param_1a202eba6a77a560f6db64104eccc34d00" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int MathOpt::MP_Param::getNx</definition>
        <argsstring>() const</argsstring>
        <name>getNx</name>
        <briefdescription>
<para>Read-only access to the private variable Nx. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/mp_param.h" line="55" column="15" bodyfile="include/mathopt/mp_param/mp_param.h" bodystart="55" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_m_p___param_1af1070c3cbcafa07a86aa96f4e015a361" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int MathOpt::MP_Param::getNy</definition>
        <argsstring>() const</argsstring>
        <name>getNy</name>
        <briefdescription>
<para>Read-only access to the private variable Ny. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/mp_param.h" line="56" column="15" bodyfile="include/mathopt/mp_param/mp_param.h" bodystart="56" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_m_p___param_1aa91dd679cf1572f215d95ecfbeaff20f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_math_opt_1_1_m_p___param" kindref="compound">MP_Param</ref> &amp;</type>
        <definition>MP_Param&amp; MathOpt::MP_Param::setQ</definition>
        <argsstring>(const arma::sp_mat &amp;Q)</argsstring>
        <name>setQ</name>
        <param>
          <type>const arma::sp_mat &amp;</type>
          <declname>Q</declname>
        </param>
        <briefdescription>
<para>Set the private variable Q. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/mp_param.h" line="58" column="11" bodyfile="include/mathopt/mp_param/mp_param.h" bodystart="58" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_m_p___param_1a371da389ffb48698912345747dcc74b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_math_opt_1_1_m_p___param" kindref="compound">MP_Param</ref> &amp;</type>
        <definition>MP_Param&amp; MathOpt::MP_Param::setC</definition>
        <argsstring>(const arma::sp_mat &amp;C)</argsstring>
        <name>setC</name>
        <param>
          <type>const arma::sp_mat &amp;</type>
          <declname>C</declname>
        </param>
        <briefdescription>
<para>Set the private variable C. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/mp_param.h" line="62" column="11" bodyfile="include/mathopt/mp_param/mp_param.h" bodystart="62" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_m_p___param_1ade7514774a87da1d741203de23084141" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_math_opt_1_1_m_p___param" kindref="compound">MP_Param</ref> &amp;</type>
        <definition>MP_Param&amp; MathOpt::MP_Param::setA</definition>
        <argsstring>(const arma::sp_mat &amp;A)</argsstring>
        <name>setA</name>
        <param>
          <type>const arma::sp_mat &amp;</type>
          <declname>A</declname>
        </param>
        <briefdescription>
<para>Set the private variable A. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/mp_param.h" line="66" column="11" bodyfile="include/mathopt/mp_param/mp_param.h" bodystart="66" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_m_p___param_1a3d1cfea15e1d90c8d599b7f43fbce99e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_math_opt_1_1_m_p___param" kindref="compound">MP_Param</ref> &amp;</type>
        <definition>MP_Param&amp; MathOpt::MP_Param::setB</definition>
        <argsstring>(const arma::sp_mat &amp;B)</argsstring>
        <name>setB</name>
        <param>
          <type>const arma::sp_mat &amp;</type>
          <declname>B</declname>
        </param>
        <briefdescription>
<para>Set the private variable B. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/mp_param.h" line="70" column="11" bodyfile="include/mathopt/mp_param/mp_param.h" bodystart="70" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_m_p___param_1aef703db3b2617b1e7f2918c98742ebae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_math_opt_1_1_m_p___param" kindref="compound">MP_Param</ref> &amp;</type>
        <definition>MP_Param&amp; MathOpt::MP_Param::setc</definition>
        <argsstring>(const arma::vec &amp;c)</argsstring>
        <name>setc</name>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Set the private variable c. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/mp_param.h" line="74" column="11" bodyfile="include/mathopt/mp_param/mp_param.h" bodystart="74" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_m_p___param_1acf30858c84ca9134645bfdc00e5c3c01" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_math_opt_1_1_m_p___param" kindref="compound">MP_Param</ref> &amp;</type>
        <definition>MP_Param&amp; MathOpt::MP_Param::setb</definition>
        <argsstring>(const arma::vec &amp;b)</argsstring>
        <name>setb</name>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Set the private variable b. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/mp_param.h" line="78" column="11" bodyfile="include/mathopt/mp_param/mp_param.h" bodystart="78" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_m_p___param_1ad78a4a1bd3566acdcc5c61feedca9f8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_math_opt_1_1_m_p___param" kindref="compound">MP_Param</ref> &amp;</type>
        <definition>MathOpt::MP_Param &amp; MathOpt::MP_Param::set</definition>
        <argsstring>(const arma::sp_mat &amp;Q, const arma::sp_mat &amp;C, const arma::sp_mat &amp;A, const arma::sp_mat &amp;B, const arma::vec &amp;c, const arma::vec &amp;b)</argsstring>
        <name>set</name>
        <reimplementedby refid="class_math_opt_1_1_q_p___param_1a5f530bb9242f5be3a5e43cbc331bc5a3">set</reimplementedby>
        <param>
          <type>const arma::sp_mat &amp;</type>
          <declname>Q</declname>
        </param>
        <param>
          <type>const arma::sp_mat &amp;</type>
          <declname>C</declname>
        </param>
        <param>
          <type>const arma::sp_mat &amp;</type>
          <declname>A</declname>
        </param>
        <param>
          <type>const arma::sp_mat &amp;</type>
          <declname>B</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Setting the data, while keeping the input objects intact. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/mp_param.h" line="84" column="19" bodyfile="src/mathopt/mp_param/mp_param.cpp" bodystart="122" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_m_p___param_1af8b3e3a4717541860fcb72634e1723ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_math_opt_1_1_m_p___param" kindref="compound">MP_Param</ref> &amp;</type>
        <definition>MathOpt::MP_Param &amp; MathOpt::MP_Param::set</definition>
        <argsstring>(arma::sp_mat &amp;&amp;Q, arma::sp_mat &amp;&amp;C, arma::sp_mat &amp;&amp;A, arma::sp_mat &amp;&amp;B, arma::vec &amp;&amp;c, arma::vec &amp;&amp;b)</argsstring>
        <name>set</name>
        <reimplementedby refid="class_math_opt_1_1_q_p___param_1a0934db94b23d326f04837f38505d3832">set</reimplementedby>
        <param>
          <type>arma::sp_mat &amp;&amp;</type>
          <declname>Q</declname>
        </param>
        <param>
          <type>arma::sp_mat &amp;&amp;</type>
          <declname>C</declname>
        </param>
        <param>
          <type>arma::sp_mat &amp;&amp;</type>
          <declname>A</declname>
        </param>
        <param>
          <type>arma::sp_mat &amp;&amp;</type>
          <declname>B</declname>
        </param>
        <param>
          <type>arma::vec &amp;&amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>arma::vec &amp;&amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Faster means to set data. But the input objects might be corrupted now. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/mp_param.h" line="90" column="19" bodyfile="src/mathopt/mp_param/mp_param.cpp" bodystart="141" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_m_p___param_1ae632d6f5348fc84bebe05ab01288e448" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_math_opt_1_1_m_p___param" kindref="compound">MP_Param</ref> &amp;</type>
        <definition>MathOpt::MP_Param &amp; MathOpt::MP_Param::set</definition>
        <argsstring>(const QP_Objective &amp;obj, const QP_Constraints &amp;cons)</argsstring>
        <name>set</name>
        <reimplementedby refid="class_math_opt_1_1_q_p___param_1a23967c411b09fc63f44ed0d54b6d7e6f">set</reimplementedby>
        <param>
          <type>const <ref refid="struct_math_opt_1_1_q_p___objective" kindref="compound">QP_Objective</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const <ref refid="struct_math_opt_1_1_q_p___constraints" kindref="compound">QP_Constraints</ref> &amp;</type>
          <declname>cons</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/mp_param.h" line="96" column="19" bodyfile="src/mathopt/mp_param/mp_param.cpp" bodystart="160" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_m_p___param_1ae0389084bac5b495c773cf647b7e9bff" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_math_opt_1_1_m_p___param" kindref="compound">MP_Param</ref> &amp;</type>
        <definition>MathOpt::MP_Param &amp; MathOpt::MP_Param::set</definition>
        <argsstring>(QP_Objective &amp;&amp;obj, QP_Constraints &amp;&amp;cons)</argsstring>
        <name>set</name>
        <reimplementedby refid="class_math_opt_1_1_q_p___param_1affbb9b4e6ed757951d385324883c6961">set</reimplementedby>
        <param>
          <type><ref refid="struct_math_opt_1_1_q_p___objective" kindref="compound">QP_Objective</ref> &amp;&amp;</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="struct_math_opt_1_1_q_p___constraints" kindref="compound">QP_Constraints</ref> &amp;&amp;</type>
          <declname>cons</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/mp_param.h" line="98" column="19" bodyfile="src/mathopt/mp_param/mp_param.cpp" bodystart="164" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_m_p___param_1a802628bc47d8e985d77e6184440af534" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_math_opt_1_1_m_p___param" kindref="compound">MP_Param</ref> &amp;</type>
        <definition>MathOpt::MP_Param &amp; MathOpt::MP_Param::addDummy</definition>
        <argsstring>(unsigned int pars, unsigned int vars=0, int position=-1)</argsstring>
        <name>addDummy</name>
        <reimplementedby refid="class_math_opt_1_1_q_p___param_1a11957fd90b5bfeacc4fa94fdb7c3a622">addDummy</reimplementedby>
        <param>
          <type>unsigned int</type>
          <declname>pars</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>vars</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>position</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds dummy variables to a parameterized mathematical program <computeroutput>position</computeroutput> dictates the position at which the parameters can be added. -1 for adding at the end. <simplesect kind="warning"><para><computeroutput>position</computeroutput> cannot be set for <computeroutput>vars</computeroutput>. <computeroutput>vars</computeroutput> always added at the end. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/mp_param.h" line="100" column="19" bodyfile="src/mathopt/mp_param/mp_param.cpp" bodystart="45" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_m_p___param_1a68ac30e9ab415719ab7be25357899617" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void MathOpt::MP_Param::write</definition>
        <argsstring>(const std::string &amp;filename, bool append=true) const</argsstring>
        <name>write</name>
        <reimplementedby refid="class_math_opt_1_1_q_p___param_1a593d1432623f387270b6298c7a41f3f3">write</reimplementedby>
        <reimplementedby refid="class_math_opt_1_1_i_p___param_1a4ab6392b44a5b6a7cb2b481267f5a83e">write</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>append</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Writes a given parameterized Mathematical program to a set of files.</para>
<para>Writes a given parameterized Mathematical program to a set of files. One file is written for each attribute namely<orderedlist>
<listitem><para><ref refid="class_math_opt_1_1_m_p___param_1aae8144b23a29ea99d5ef793729438feb" kindref="member">MathOpt::MP_Param::Q</ref></para>
</listitem><listitem><para><ref refid="class_math_opt_1_1_m_p___param_1a13727398531ec805acd474fa5da89056" kindref="member">MathOpt::MP_Param::C</ref></para>
</listitem><listitem><para><ref refid="class_math_opt_1_1_m_p___param_1a69e39bfe4a58e5c43dbcb7ac16be3fe5" kindref="member">MathOpt::MP_Param::A</ref></para>
</listitem><listitem><para><ref refid="class_math_opt_1_1_m_p___param_1adb541edcb7083da9bde8e6615063acd3" kindref="member">MathOpt::MP_Param::B</ref></para>
</listitem><listitem><para><ref refid="class_math_opt_1_1_m_p___param_1a270fad22decf1dbdc2227ff9a4875e34" kindref="member">MathOpt::MP_Param::c</ref></para>
</listitem><listitem><para><ref refid="class_math_opt_1_1_m_p___param_1af6e726c09d1d43359c2dad586b0fb4d5" kindref="member">MathOpt::MP_Param::b</ref></para>
</listitem></orderedlist>
</para>
<para>To contrast see, MathOpt::MP_Param::save where all details are written to a single loadable file</para>
        </inbodydescription>
        <location file="include/mathopt/mp_param/mp_param.h" line="102" column="15" bodyfile="src/mathopt/mp_param/mp_param.cpp" bodystart="19" bodyend="43"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_math_opt_1_1_m_p___param_1af137f454eef5ef1e9ef3edd7c7b16261" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MathOpt::MP_Param::dataCheck</definition>
        <argsstring>(const QP_Objective &amp;obj, const QP_Constraints &amp;cons, bool checkObj=true, bool checkCons=true)</argsstring>
        <name>dataCheck</name>
        <param>
          <type>const <ref refid="struct_math_opt_1_1_q_p___objective" kindref="compound">QP_Objective</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const <ref refid="struct_math_opt_1_1_q_p___constraints" kindref="compound">QP_Constraints</ref> &amp;</type>
          <declname>cons</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>checkObj</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>checkCons</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/mp_param.h" line="104" column="14" bodyfile="src/mathopt/mp_param/mp_param.cpp" bodystart="213" bodyend="242"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>class to handle parameterized mathematical programs(MP) </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>MathOpt::IP_Param</label>
        <link refid="class_math_opt_1_1_i_p___param"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>MathOpt::MP_Param</label>
        <link refid="class_math_opt_1_1_m_p___param"/>
      </node>
      <node id="3">
        <label>MathOpt::QP_Param</label>
        <link refid="class_math_opt_1_1_q_p___param"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="include/mathopt/mp_param/mp_param.h" line="25" column="17" bodyfile="include/mathopt/mp_param/mp_param.h" bodystart="25" bodyend="108"/>
    <listofallmembers>
      <member refid="class_math_opt_1_1_m_p___param_1a69e39bfe4a58e5c43dbcb7ac16be3fe5" prot="protected" virt="non-virtual"><scope>MathOpt::MP_Param</scope><name>A</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a802628bc47d8e985d77e6184440af534" prot="public" virt="virtual"><scope>MathOpt::MP_Param</scope><name>addDummy</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1af6e726c09d1d43359c2dad586b0fb4d5" prot="protected" virt="non-virtual"><scope>MathOpt::MP_Param</scope><name>b</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1adb541edcb7083da9bde8e6615063acd3" prot="protected" virt="non-virtual"><scope>MathOpt::MP_Param</scope><name>B</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a13727398531ec805acd474fa5da89056" prot="protected" virt="non-virtual"><scope>MathOpt::MP_Param</scope><name>C</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a270fad22decf1dbdc2227ff9a4875e34" prot="protected" virt="non-virtual"><scope>MathOpt::MP_Param</scope><name>c</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1aff8f3f085bd5938a352874c020f8ef23" prot="protected" virt="non-virtual"><scope>MathOpt::MP_Param</scope><name>dataCheck</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1af137f454eef5ef1e9ef3edd7c7b16261" prot="public" virt="non-virtual"><scope>MathOpt::MP_Param</scope><name>dataCheck</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a77c1f71200e55ee2fe1abe3c9eb13005" prot="protected" virt="virtual"><scope>MathOpt::MP_Param</scope><name>finalize</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a40fff25cfb814374938f83ce9b3786de" prot="public" virt="non-virtual"><scope>MathOpt::MP_Param</scope><name>getA</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1af9a8eaa4d0d2034f3bc221757ebba7e2" prot="public" virt="non-virtual"><scope>MathOpt::MP_Param</scope><name>getB</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a1f0114c151fc557843e39364bca6e1a7" prot="public" virt="non-virtual"><scope>MathOpt::MP_Param</scope><name>getb</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a5e6b2cba9aee0d780957a2e0c7329e02" prot="public" virt="non-virtual"><scope>MathOpt::MP_Param</scope><name>getc</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1ab6633d7091d1e470230773cfbe53bf3d" prot="public" virt="non-virtual"><scope>MathOpt::MP_Param</scope><name>getC</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a202eba6a77a560f6db64104eccc34d00" prot="public" virt="non-virtual"><scope>MathOpt::MP_Param</scope><name>getNx</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1af1070c3cbcafa07a86aa96f4e015a361" prot="public" virt="non-virtual"><scope>MathOpt::MP_Param</scope><name>getNy</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a0f1cc247264404e29747200c7ddfc1ab" prot="public" virt="non-virtual"><scope>MathOpt::MP_Param</scope><name>getQ</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1af1d48cd18c52aaab1e99e11dfa4cce67" prot="public" virt="non-virtual"><scope>MathOpt::MP_Param</scope><name>MP_Param</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a2593388bfb462f7a5e36708f8c6f9770" prot="public" virt="non-virtual"><scope>MathOpt::MP_Param</scope><name>MP_Param</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a5c20eb5e9dac543042b9888e012ab99b" prot="protected" virt="non-virtual"><scope>MathOpt::MP_Param</scope><name>Ncons</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1ab74a22bf304936286282f869cb646873" prot="protected" virt="non-virtual"><scope>MathOpt::MP_Param</scope><name>Nx</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a1a69f24fcb92ebf76ea29c9407859f0a" prot="protected" virt="non-virtual"><scope>MathOpt::MP_Param</scope><name>Ny</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1aae8144b23a29ea99d5ef793729438feb" prot="protected" virt="non-virtual"><scope>MathOpt::MP_Param</scope><name>Q</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1ad78a4a1bd3566acdcc5c61feedca9f8a" prot="public" virt="virtual"><scope>MathOpt::MP_Param</scope><name>set</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1af8b3e3a4717541860fcb72634e1723ab" prot="public" virt="virtual"><scope>MathOpt::MP_Param</scope><name>set</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1ae632d6f5348fc84bebe05ab01288e448" prot="public" virt="virtual"><scope>MathOpt::MP_Param</scope><name>set</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1ae0389084bac5b495c773cf647b7e9bff" prot="public" virt="virtual"><scope>MathOpt::MP_Param</scope><name>set</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1ade7514774a87da1d741203de23084141" prot="public" virt="non-virtual"><scope>MathOpt::MP_Param</scope><name>setA</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a3d1cfea15e1d90c8d599b7f43fbce99e" prot="public" virt="non-virtual"><scope>MathOpt::MP_Param</scope><name>setB</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1acf30858c84ca9134645bfdc00e5c3c01" prot="public" virt="non-virtual"><scope>MathOpt::MP_Param</scope><name>setb</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1aef703db3b2617b1e7f2918c98742ebae" prot="public" virt="non-virtual"><scope>MathOpt::MP_Param</scope><name>setc</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a371da389ffb48698912345747dcc74b4" prot="public" virt="non-virtual"><scope>MathOpt::MP_Param</scope><name>setC</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1aa91dd679cf1572f215d95ecfbeaff20f" prot="public" virt="non-virtual"><scope>MathOpt::MP_Param</scope><name>setQ</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a70400a4046b1ab099f6c2ebbdceab6d5" prot="protected" virt="non-virtual"><scope>MathOpt::MP_Param</scope><name>size</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a68ac30e9ab415719ab7be25357899617" prot="public" virt="virtual"><scope>MathOpt::MP_Param</scope><name>write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
