<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="qpmp_8cpp" kind="file" language="C++">
    <compoundname>qpmp.cpp</compoundname>
    <includes refid="qpmp_8h" local="yes">games/qpmp.h</includes>
    <includes local="no">armadillo</includes>
    <includes local="no">array</includes>
    <includes local="no">boost/log/trivial.hpp</includes>
    <includes local="no">iostream</includes>
    <includes local="no">memory</includes>
    <incdepgraph>
      <node id="13">
        <label>support/utils.h</label>
        <link refid="utils_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>games/nash.h</label>
        <link refid="nash_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>support/codes.h</label>
        <link refid="codes_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>string</label>
      </node>
      <node id="6">
        <label>map</label>
      </node>
      <node id="21">
        <label>games/games.h</label>
        <link refid="games_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>armadillo</label>
      </node>
      <node id="24">
        <label>boost/log/trivial.hpp</label>
      </node>
      <node id="11">
        <label>exception</label>
      </node>
      <node id="14">
        <label>fstream</label>
      </node>
      <node id="1">
        <label>src/games/qpmp.cpp</label>
        <link refid="qpmp_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>lcp/outer_lcp.h</label>
        <link refid="outer__lcp_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>lcp/poly_lcp.h</label>
        <link refid="poly__lcp_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>games/qpmp.h</label>
        <link refid="qpmp_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>zero.h</label>
        <link refid="zero_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
      <node id="23">
        <label>array</label>
      </node>
      <node id="16">
        <label>support/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>lcp/lcp.h</label>
        <link refid="lcp_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>games/EPEC_test.h</label>
        <link refid="_e_p_e_c__test_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>iostream</label>
      </node>
      <node id="12">
        <label>gurobi_c++.h</label>
      </node>
      <node id="15">
        <label>set</label>
      </node>
      <node id="7">
        <label>memory</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="qpmp_8cpp_1a185c4d44ddefa06e6ca35f0c5e13c3e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;ost, const perps &amp;C)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>ost</declname>
        </param>
        <param>
          <type>const <ref refid="zero_8h_1ad87785d9eb3e6e48c0895b348f6660ca" kindref="member">perps</ref> &amp;</type>
          <declname>C</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/games/qpmp.cpp" line="8" column="1" bodyfile="src/games/qpmp.cpp" bodystart="8" bodyend="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="qpmp_8h" kindref="compound">games/qpmp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;armadillo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/log/trivial.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal">std::ostream<sp/>&amp;<ref refid="qpmp_8cpp_1a185c4d44ddefa06e6ca35f0c5e13c3e3" kindref="member">operator&lt;&lt;</ref>(std::ostream<sp/>&amp;ost,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="zero_8h_1ad87785d9eb3e6e48c0895b348f6660ca" kindref="member">perps</ref><sp/>&amp;C)<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p<sp/>:<sp/>C)</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>ost<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>p.first<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>p.second<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ost;</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">std::ostream<sp/>&amp;<ref refid="namespace_game_1ae84120c7363ce11ee8cb58b113eaf6a8" kindref="member">Game::operator&lt;&lt;</ref>(std::ostream<sp/>&amp;os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_game_1_1_q_p___param" kindref="compound">Game::QP_Param</ref><sp/>&amp;Q)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Quadratic<sp/>program<sp/>with<sp/>linear<sp/>inequality<sp/>constraints:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/>Q.<ref refid="class_game_1_1_m_p___param_1acf2be6a9980b50736064b0eb11103e5e" kindref="member">getNy</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>decision<sp/>variables<sp/>parametrized<sp/>by<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Q.<ref refid="class_game_1_1_m_p___param_1a5beeddbd8425ac08b12fd041c647b922" kindref="member">getNx</ref>()</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>variables&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/>Q.<ref refid="class_game_1_1_m_p___param_1a30d991dc4a735cc7ae66005d33fa74e5" kindref="member">getb</ref>().n_rows<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>linear<sp/>inequalities&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_game_1_1_m_p___param_1a21a9898b1fbebb1fbece40995aa7e9d6" kindref="member">Game::MP_Param::write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;filename,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_game_1_1_m_p___param_1ac2db5cff1ae7f287200f82e3c729121b" kindref="member">getQ</ref>().save(filename<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_Q.txt&quot;</highlight><highlight class="normal">,<sp/>arma::file_type::arma_ascii);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_game_1_1_m_p___param_1af07f091c9b546357d5d90d67a87e340c" kindref="member">getC</ref>().save(filename<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_C.txt&quot;</highlight><highlight class="normal">,<sp/>arma::file_type::arma_ascii);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_game_1_1_m_p___param_1a40ef5cb837a54abc27ff415f01bbcce2" kindref="member">getA</ref>().save(filename<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_A.txt&quot;</highlight><highlight class="normal">,<sp/>arma::file_type::arma_ascii);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_game_1_1_m_p___param_1a10c33b4453cbbfd1d9d1511a8db415b7" kindref="member">getB</ref>().save(filename<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_B.txt&quot;</highlight><highlight class="normal">,<sp/>arma::file_type::arma_ascii);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_game_1_1_m_p___param_1a859e717089861c86bffe656f352b105e" kindref="member">getc</ref>().save(filename<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_c.txt&quot;</highlight><highlight class="normal">,<sp/>arma::file_type::arma_ascii);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_game_1_1_m_p___param_1a30d991dc4a735cc7ae66005d33fa74e5" kindref="member">getb</ref>().save(filename<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_b.txt&quot;</highlight><highlight class="normal">,<sp/>arma::file_type::arma_ascii);</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_game_1_1_q_p___param_1a23ff06e9e2f2bcc5c8925d3535bb13cc" kindref="member">Game::QP_Param::write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;filename,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>append)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>std::ofstream<sp/>file;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>file.open(filename,<sp/>append<sp/>?<sp/>arma::ios::app<sp/>:<sp/>arma::ios::out);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>file<sp/>&lt;&lt;<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\nOBJECTIVES\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Q:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;getQ();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;C:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;getC();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;c\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;getc();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\nCONSTRAINTS\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;A:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;getA();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;B:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;getB();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;b\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;getb();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>file.close();</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="class_game_1_1_m_p___param" kindref="compound">Game::MP_Param</ref><sp/>&amp;<ref refid="class_game_1_1_m_p___param_1adf8d38d835f6cb716b7ea661d2fd4a7d" kindref="member">Game::MP_Param::addDummy</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pars,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vars,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>position)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>this-&gt;Nx<sp/>+=<sp/>pars;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>this-&gt;Ny<sp/>+=<sp/>vars;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vars)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>Q<sp/>=<sp/><ref refid="namespace_utils_1a0c79f31066b7e7af7b1d18316f3efc5c" kindref="member">Utils::resizePatch</ref>(Q,<sp/>this-&gt;Ny,<sp/>this-&gt;Ny);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>B<sp/>=<sp/><ref refid="namespace_utils_1a0c79f31066b7e7af7b1d18316f3efc5c" kindref="member">Utils::resizePatch</ref>(B,<sp/>this-&gt;Ncons,<sp/>this-&gt;Ny);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/><ref refid="namespace_utils_1a0c79f31066b7e7af7b1d18316f3efc5c" kindref="member">Utils::resizePatch</ref>(c,<sp/>this-&gt;Ny);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(position)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>-1:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pars)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>=<sp/><ref refid="namespace_utils_1a0c79f31066b7e7af7b1d18316f3efc5c" kindref="member">Utils::resizePatch</ref>(A,<sp/>this-&gt;Ncons,<sp/>this-&gt;Nx);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vars<sp/>||<sp/>pars)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>C<sp/>=<sp/><ref refid="namespace_utils_1a0c79f31066b7e7af7b1d18316f3efc5c" kindref="member">Utils::resizePatch</ref>(C,<sp/>this-&gt;Ny,<sp/>this-&gt;Nx);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pars)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>=<sp/>arma::join_rows(arma::zeros&lt;arma::sp_mat&gt;(this-&gt;Ncons,<sp/>pars),<sp/>A);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vars<sp/>||<sp/>pars)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>C<sp/>=<sp/><ref refid="namespace_utils_1a0c79f31066b7e7af7b1d18316f3efc5c" kindref="member">Utils::resizePatch</ref>(C,<sp/>this-&gt;Ny,<sp/>C.n_cols);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>C<sp/>=<sp/>arma::join_rows(arma::zeros&lt;arma::sp_mat&gt;(this-&gt;Ny,<sp/>pars),<sp/>C);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pars)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arma::sp_mat<sp/>A_temp<sp/>=</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::join_rows(A.cols(0,<sp/>position<sp/>-<sp/>1),</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::zeros&lt;arma::sp_mat&gt;(this-&gt;Ncons,<sp/>pars));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(static_cast&lt;unsigned<sp/>int&gt;(position)<sp/>&lt;<sp/>A.n_cols)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>=<sp/>arma::join_rows(A_temp,<sp/>A.cols(position,<sp/>A.n_cols<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>=<sp/>A_temp;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vars<sp/>||<sp/>pars)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>C<sp/>=<sp/><ref refid="namespace_utils_1a0c79f31066b7e7af7b1d18316f3efc5c" kindref="member">Utils::resizePatch</ref>(C,<sp/>this-&gt;Ny,<sp/>C.n_cols);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arma::sp_mat<sp/>C_temp<sp/>=<sp/>arma::join_rows(</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C.cols(0,<sp/>position<sp/>-<sp/>1),<sp/>arma::zeros&lt;arma::sp_mat&gt;(this-&gt;Ny,<sp/>pars));</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(static_cast&lt;unsigned<sp/>int&gt;(position)<sp/>&lt;<sp/>C.n_cols)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C<sp/>=<sp/>arma::join_rows(C_temp,<sp/>C.cols(position,<sp/>C.n_cols<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C<sp/>=<sp/>C_temp;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_game_1_1_m_p___param_1aa2528bd94216c15b6c655040cecea5fe" kindref="member">Game::MP_Param::size</ref>()</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Q.n_rows<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;Ny<sp/>=<sp/>this-&gt;c.size();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;Ny<sp/>=<sp/>this-&gt;Q.n_rows;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>this-&gt;Nx<sp/>=<sp/>this-&gt;C.n_cols;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>this-&gt;Ncons<sp/>=<sp/>this-&gt;b.<ref refid="class_game_1_1_m_p___param_1aa2528bd94216c15b6c655040cecea5fe" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;Ny;</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><ref refid="class_game_1_1_m_p___param" kindref="compound">Game::MP_Param</ref><sp/>&amp;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><ref refid="class_game_1_1_m_p___param_1a97d7a955cb93ff14144bdce152e906b6" kindref="member">Game::MP_Param::set</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::sp_mat<sp/>&amp;Q,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::sp_mat<sp/>&amp;C,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::sp_mat<sp/>&amp;A,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::sp_mat<sp/>&amp;B,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec<sp/>&amp;c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec<sp/>&amp;b)</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>this-&gt;Q<sp/>=<sp/>(Q);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>this-&gt;C<sp/>=<sp/>(C);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>this-&gt;A<sp/>=<sp/>(A);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>this-&gt;B<sp/>=<sp/>(B);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>this-&gt;c<sp/>=<sp/>(c);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>this-&gt;b<sp/>=<sp/>(b);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!finalize())</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_z_e_r_o_exception" kindref="compound">ZEROException</ref>(<ref refid="codes_8h_1aec3f6d9705d82787080ef99b37b7efeaa3c4b6828f5a12280debdb5a12e0e72ba" kindref="member">ZEROErrorCode::InvalidData</ref>,<sp/></highlight><highlight class="stringliteral">&quot;finalize()<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><ref refid="class_game_1_1_m_p___param" kindref="compound">Game::MP_Param</ref><sp/>&amp;<ref refid="class_game_1_1_m_p___param_1a97d7a955cb93ff14144bdce152e906b6" kindref="member">Game::MP_Param::set</ref>(arma::sp_mat<sp/>&amp;&amp;Q,<sp/>arma::sp_mat<sp/>&amp;&amp;C,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::sp_mat<sp/>&amp;&amp;A,<sp/>arma::sp_mat<sp/>&amp;&amp;B,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec<sp/>&amp;&amp;c,<sp/>arma::vec<sp/>&amp;&amp;b)</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>this-&gt;Q<sp/>=<sp/>std::move(Q);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>this-&gt;C<sp/>=<sp/>std::move(C);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>this-&gt;A<sp/>=<sp/>std::move(A);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>this-&gt;B<sp/>=<sp/>std::move(B);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>this-&gt;c<sp/>=<sp/>std::move(c);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>this-&gt;b<sp/>=<sp/>std::move(b);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!finalize())</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_z_e_r_o_exception" kindref="compound">ZEROException</ref>(<ref refid="codes_8h_1aec3f6d9705d82787080ef99b37b7efeaa3c4b6828f5a12280debdb5a12e0e72ba" kindref="member">ZEROErrorCode::InvalidData</ref>,<sp/></highlight><highlight class="stringliteral">&quot;finalize()<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><ref refid="class_game_1_1_m_p___param" kindref="compound">Game::MP_Param</ref><sp/>&amp;<ref refid="class_game_1_1_m_p___param_1a97d7a955cb93ff14144bdce152e906b6" kindref="member">Game::MP_Param::set</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QP_Objective<sp/>&amp;obj,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QP_Constraints<sp/>&amp;cons)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;set(obj.Q,<sp/>obj.C,<sp/>cons.A,<sp/>cons.B,<sp/>obj.c,<sp/>cons.b);</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><ref refid="class_game_1_1_m_p___param" kindref="compound">Game::MP_Param</ref><sp/>&amp;<ref refid="class_game_1_1_m_p___param_1a97d7a955cb93ff14144bdce152e906b6" kindref="member">Game::MP_Param::set</ref>(QP_Objective<sp/>&amp;&amp;obj,<sp/>QP_Constraints<sp/>&amp;&amp;cons)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;set(obj.Q,<sp/>obj.C,<sp/>cons.A,<sp/>cons.B,<sp/>obj.c,<sp/>cons.b);</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_game_1_1_m_p___param_1acb2f6575e0f7613303287d6966eacd61" kindref="member">Game::MP_Param::dataCheck</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>forceSymmetry)<sp/></highlight><highlight class="keyword">const</highlight></codeline>
<codeline lineno="201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(forceSymmetry)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;Q.is_symmetric())</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;Q.n_cols<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>this-&gt;Q.n_cols<sp/>!=<sp/>Ny)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;A.n_cols<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>this-&gt;A.n_cols<sp/>!=<sp/>Nx)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;B.n_cols<sp/>!=<sp/>Ny)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;C.n_rows<sp/>!=<sp/>Ny)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;c.size()<sp/>!=<sp/>Ny)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;A.n_rows<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>this-&gt;A.n_rows<sp/>!=<sp/>Ncons)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;B.n_rows<sp/>!=<sp/>Ncons)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_game_1_1_m_p___param_1acb2f6575e0f7613303287d6966eacd61" kindref="member">Game::MP_Param::dataCheck</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QP_Objective<sp/>&amp;obj,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QP_Constraints<sp/>&amp;cons,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkobj,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkcons)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ny<sp/>=<sp/>obj.Q.n_rows;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Nx<sp/>=<sp/>obj.C.n_cols;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ncons<sp/>=<sp/>cons.b.size();</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkobj<sp/>&amp;&amp;<sp/>obj.Q.n_cols<sp/>!=<sp/>Ny)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkobj<sp/>&amp;&amp;<sp/>obj.C.n_rows<sp/>!=<sp/>Ny)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkobj<sp/>&amp;&amp;<sp/>obj.c.size()<sp/>!=<sp/>Ny)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkcons<sp/>&amp;&amp;<sp/>cons.A.n_cols<sp/>!=<sp/>Nx)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>Rest<sp/>are<sp/>matrix<sp/>size<sp/>compatibility<sp/>checks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkcons<sp/>&amp;&amp;<sp/>cons.B.n_cols<sp/>!=<sp/>Ny)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkcons<sp/>&amp;&amp;<sp/>cons.A.n_rows<sp/>!=<sp/>Ncons)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkcons<sp/>&amp;&amp;<sp/>cons.B.n_rows<sp/>!=<sp/>Ncons)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_game_1_1_q_p___param_1a5a9582b9b43875c771cec657f627e947" kindref="member">Game::QP_Param::operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QP_Param<sp/>&amp;Q2)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_game_1a33e82b9df7ee413620f2b5d26c289f98" kindref="member">Game::isZero</ref>(this-&gt;Q<sp/>-<sp/>Q2.getQ()))</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_game_1a33e82b9df7ee413620f2b5d26c289f98" kindref="member">Game::isZero</ref>(this-&gt;C<sp/>-<sp/>Q2.getC()))</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_game_1a33e82b9df7ee413620f2b5d26c289f98" kindref="member">Game::isZero</ref>(this-&gt;A<sp/>-<sp/>Q2.getA()))</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_game_1a33e82b9df7ee413620f2b5d26c289f98" kindref="member">Game::isZero</ref>(this-&gt;B<sp/>-<sp/>Q2.getB()))</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_game_1a33e82b9df7ee413620f2b5d26c289f98" kindref="member">Game::isZero</ref>(this-&gt;c<sp/>-<sp/>Q2.getc()))</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespace_game_1a33e82b9df7ee413620f2b5d26c289f98" kindref="member">Game::isZero</ref>(this-&gt;b<sp/>-<sp/>Q2.getb()))</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_game_1_1_q_p___param_1ab7adef7ab5eea6a66dc5a78c2973c79b" kindref="member">Game::QP_Param::makeyQy</ref>()</highlight></codeline>
<codeline lineno="278"><highlight class="normal">{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;madeyQy)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>GRBVar<sp/>y[this-&gt;Ny];</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Ny;<sp/>i++)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>y[i]<sp/>=<sp/>this-&gt;QuadModel.addVar(0,<sp/>GRB_INFINITY,<sp/>0,<sp/>GRB_CONTINUOUS,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;y_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1a2a85a94ce6c0c8e65db695187b07d4be" kindref="member">std::to_string</ref>(i));</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>GRBQuadExpr<sp/>yQy{0};</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>Q.begin();<sp/><ref refid="namespace_models_1a54b54aa6ddb1d9e337f9fea85a2d0ceba3a6d0284e743dc4a9b86f97d6dd1a3bf" kindref="member">val</ref><sp/>!=<sp/>Q.end();<sp/>++<ref refid="namespace_models_1a54b54aa6ddb1d9e337f9fea85a2d0ceba3a6d0284e743dc4a9b86f97d6dd1a3bf" kindref="member">val</ref>)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>(*val);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/><ref refid="namespace_models_1a54b54aa6ddb1d9e337f9fea85a2d0ceba3a6d0284e743dc4a9b86f97d6dd1a3bf" kindref="member">val</ref>.row();</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/><ref refid="namespace_models_1a54b54aa6ddb1d9e337f9fea85a2d0ceba3a6d0284e743dc4a9b86f97d6dd1a3bf" kindref="member">val</ref>.col();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>yQy<sp/>+=<sp/>0.5<sp/>*<sp/>y[i]<sp/>*<sp/>value<sp/>*<sp/>y[j];</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>QuadModel.setObjective(yQy,<sp/>GRB_MINIMIZE);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>QuadModel.update();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>this-&gt;madeyQy<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal">std::unique_ptr&lt;GRBModel&gt;<sp/><ref refid="class_game_1_1_q_p___param_1a6063c18689d5a489fb3ce79d7e8303d5" kindref="member">Game::QP_Param::solveFixed</ref>(</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::vec<sp/>x,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>solve)<sp/></highlight></codeline>
<codeline lineno="311"><highlight class="normal">{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>this-&gt;makeyQy();<sp/></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x.size()<sp/>!=<sp/>this-&gt;Nx)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_z_e_r_o_exception" kindref="compound">ZEROException</ref>(<ref refid="codes_8h_1aec3f6d9705d82787080ef99b37b7efeaa33d5079ef27d71f50b0b934dd31c1d81" kindref="member">ZEROErrorCode::Assertion</ref>,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Mismatch<sp/>in<sp/>x<sp/>size:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1a2a85a94ce6c0c8e65db695187b07d4be" kindref="member">std::to_string</ref>(x.size())<sp/>+</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>!=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1a2a85a94ce6c0c8e65db695187b07d4be" kindref="member">std::to_string</ref>(Nx));</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;GRBModel&gt;<sp/>model(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GRBModel(this-&gt;QuadModel));</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>GRBQuadExpr<sp/>yQy<sp/>=<sp/>model-&gt;getObjective();</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::vec<sp/>Cx,<sp/>Ax;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>Cx<sp/>=<sp/>this-&gt;C<sp/>*<sp/>x;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>Ax<sp/>=<sp/>this-&gt;A<sp/>*<sp/>x;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>GRBVar<sp/>y[this-&gt;Ny];</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>this-&gt;Ny;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y[i]<sp/>=<sp/>model-&gt;getVarByName(</highlight><highlight class="stringliteral">&quot;y_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1a2a85a94ce6c0c8e65db695187b07d4be" kindref="member">std::to_string</ref>(i));</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yQy<sp/>+=<sp/>(Cx[i]<sp/>+<sp/>c[i])<sp/>*<sp/>y[i];</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>model-&gt;setObjective(yQy,<sp/>GRB_MINIMIZE);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>this-&gt;Ncons;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GRBLinExpr<sp/>LHS{0};</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>B.begin_row(i);<sp/>j<sp/>!=<sp/>B.end_row(i);<sp/>++j)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LHS<sp/>+=<sp/>(*j)<sp/>*<sp/>y[j.col()];</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;addConstr(LHS,<sp/>GRB_LESS_EQUAL,<sp/>b[i]<sp/>-<sp/>Ax[i]);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>model-&gt;update();</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>model-&gt;set(GRB_IntParam_OutputFlag,<sp/>0);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(solve)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>model-&gt;optimize();</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(GRBException<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_z_e_r_o_exception" kindref="compound">ZEROException</ref>(e);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>model;</highlight></codeline>
<codeline lineno="344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><ref refid="class_game_1_1_q_p___param" kindref="compound">Game::QP_Param</ref><sp/>&amp;<ref refid="class_game_1_1_q_p___param_1a5313f28073ba60f90ca422e2da6a369a" kindref="member">Game::QP_Param::addDummy</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pars,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vars,</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>position)</highlight></codeline>
<codeline lineno="354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>((pars<sp/>||<sp/>vars))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>BOOST_LOG_TRIVIAL(trace)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;&lt;<sp/>&quot;From<sp/>Game::QP_Param::addDummyVars:\t<sp/>You<sp/>might<sp/>have<sp/>to<sp/>rerun</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Games::QP_Param::KKT<sp/>since<sp/>you<sp/>have<sp/>now<sp/>changed<sp/>the<sp/>number<sp/>of<sp/>variables<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>NashGame.&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>the<sp/>superclass<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><ref refid="class_game_1_1_m_p___param_1adf8d38d835f6cb716b7ea661d2fd4a7d" kindref="member">MP_Param::addDummy</ref>(pars,<sp/>vars,<sp/>position);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_game_1_1_q_p___param_1aa9042eb407e5768c793f17e490e8a5bd" kindref="member">Game::QP_Param::KKT</ref>(arma::sp_mat<sp/>&amp;M,<sp/>arma::sp_mat<sp/>&amp;N,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec<sp/>&amp;q)<sp/></highlight><highlight class="keyword">const</highlight></codeline>
<codeline lineno="370"></codeline>
<codeline lineno="377"><highlight class="normal">{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;dataCheck())<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_z_e_r_o_exception" kindref="compound">ZEROException</ref>(<ref refid="codes_8h_1aec3f6d9705d82787080ef99b37b7efeaa33d5079ef27d71f50b0b934dd31c1d81" kindref="member">ZEROErrorCode::Assertion</ref>,<sp/></highlight><highlight class="stringliteral">&quot;dataCheck()<sp/>failed<sp/>on<sp/>KKT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>M<sp/>=<sp/>arma::join_cols(<sp/></highlight><highlight class="comment">//<sp/>In<sp/>armadillo<sp/>join_cols(A,<sp/>B)<sp/>is<sp/>same<sp/>as<sp/>[A;B]<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Matlab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>join_rows(A,<sp/>B)<sp/>is<sp/>same<sp/>as<sp/>[A<sp/>B]<sp/>in<sp/>Matlab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arma::join_rows(this-&gt;Q,<sp/>this-&gt;B.t()),</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arma::join_rows(-this-&gt;B,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::zeros&lt;arma::sp_mat&gt;(this-&gt;Ncons,<sp/>this-&gt;Ncons)));</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>M.print_dense();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>N<sp/>=<sp/>arma::join_cols(this-&gt;C,<sp/>-this-&gt;A);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>N.print_dense();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>q<sp/>=<sp/>arma::join_cols(this-&gt;c,<sp/>this-&gt;b);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>q.print();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>M.n_rows;</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><ref refid="class_game_1_1_q_p___param" kindref="compound">Game::QP_Param</ref><sp/>&amp;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><ref refid="class_game_1_1_q_p___param_1a3fb0950b780c847e97f34043068ca758" kindref="member">Game::QP_Param::set</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::sp_mat<sp/>&amp;Q,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::sp_mat<sp/>&amp;C,</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::sp_mat<sp/>&amp;A,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::sp_mat<sp/>&amp;B,</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec<sp/>&amp;c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec<sp/>&amp;b)</highlight></codeline>
<codeline lineno="400"><highlight class="normal">{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>this-&gt;madeyQy<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><ref refid="class_game_1_1_m_p___param_1a97d7a955cb93ff14144bdce152e906b6" kindref="member">MP_Param::set</ref>(Q,<sp/>C,<sp/>A,<sp/>B,<sp/>c,<sp/>b);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><ref refid="class_game_1_1_q_p___param" kindref="compound">Game::QP_Param</ref><sp/>&amp;<ref refid="class_game_1_1_q_p___param_1a3fb0950b780c847e97f34043068ca758" kindref="member">Game::QP_Param::set</ref>(arma::sp_mat<sp/>&amp;&amp;Q,<sp/>arma::sp_mat<sp/>&amp;&amp;C,</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::sp_mat<sp/>&amp;&amp;A,<sp/>arma::sp_mat<sp/>&amp;&amp;B,</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec<sp/>&amp;&amp;c,<sp/>arma::vec<sp/>&amp;&amp;b)</highlight></codeline>
<codeline lineno="410"><highlight class="normal">{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>this-&gt;madeyQy<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><ref refid="class_game_1_1_m_p___param_1a97d7a955cb93ff14144bdce152e906b6" kindref="member">MP_Param::set</ref>(Q,<sp/>C,<sp/>A,<sp/>B,<sp/>c,<sp/>b);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><ref refid="class_game_1_1_q_p___param" kindref="compound">Game::QP_Param</ref><sp/>&amp;<ref refid="class_game_1_1_q_p___param_1a3fb0950b780c847e97f34043068ca758" kindref="member">Game::QP_Param::set</ref>(QP_Objective<sp/>&amp;&amp;obj,<sp/>QP_Constraints<sp/>&amp;&amp;cons)</highlight></codeline>
<codeline lineno="419"><highlight class="normal">{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;set(std::move(obj.Q),<sp/>std::move(obj.C),<sp/>std::move(cons.A),</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::move(cons.B),<sp/>std::move(obj.c),<sp/>std::move(cons.b));</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><ref refid="class_game_1_1_q_p___param" kindref="compound">Game::QP_Param</ref><sp/>&amp;<ref refid="class_game_1_1_q_p___param_1a3fb0950b780c847e97f34043068ca758" kindref="member">Game::QP_Param::set</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QP_Objective<sp/>&amp;obj,</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QP_Constraints<sp/>&amp;cons)<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;set(obj.Q,<sp/>obj.C,<sp/>cons.A,<sp/>cons.B,<sp/>obj.c,<sp/>cons.b);</highlight></codeline>
<codeline lineno="427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal">arma::vec<sp/><ref refid="class_game_1_1_q_p___param_1a4fda0fa63c08186f3441f1adcb30efcd" kindref="member">Game::QP_Param::getConstraintViolations</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec<sp/>x,</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec<sp/>y,</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>1e-5)<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>arma::vec<sp/>xN,<sp/>yN;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x.size()<sp/>&lt;<sp/>B.n_cols)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::vec<sp/>xN<sp/>=<sp/><ref refid="namespace_utils_1a0c79f31066b7e7af7b1d18316f3efc5c" kindref="member">Utils::resizePatch</ref>(x,<sp/>B.n_cols);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>xN<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y.size()<sp/>&lt;<sp/>A.n_cols)</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::vec<sp/>yN<sp/>=<sp/><ref refid="namespace_utils_1a0c79f31066b7e7af7b1d18316f3efc5c" kindref="member">Utils::resizePatch</ref>(y,<sp/>A.n_cols);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>yN<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>arma::vec<sp/>slack<sp/>=<sp/>A<sp/>*<sp/>xN<sp/>+<sp/>B<sp/>*<sp/>yN<sp/>-<sp/>b;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>slack;</highlight></codeline>
<codeline lineno="443"><highlight class="normal">}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_game_1_1_q_p___param_1aad40a0f721956c78c03be4d39a4b1710" kindref="member">Game::QP_Param::computeObjective</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec<sp/>&amp;y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec<sp/>&amp;x,</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkFeas,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y.n_rows<sp/>!=<sp/>this-&gt;getNy())</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_z_e_r_o_exception" kindref="compound">ZEROException</ref>(<ref refid="codes_8h_1aec3f6d9705d82787080ef99b37b7efeaa3c4b6828f5a12280debdb5a12e0e72ba" kindref="member">ZEROErrorCode::InvalidData</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>size<sp/>of<sp/>y&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x.n_rows<sp/>!=<sp/>this-&gt;getNx())</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_z_e_r_o_exception" kindref="compound">ZEROException</ref>(<ref refid="codes_8h_1aec3f6d9705d82787080ef99b37b7efeaa3c4b6828f5a12280debdb5a12e0e72ba" kindref="member">ZEROErrorCode::InvalidData</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>size<sp/>of<sp/>x&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkFeas)<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::vec<sp/>slack<sp/>=<sp/>A<sp/>*<sp/>x<sp/>+<sp/>B<sp/>*<sp/>y<sp/>-<sp/>b;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(slack.n_rows)<sp/></highlight><highlight class="comment">//<sp/>if<sp/>infeasible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(slack.max()<sp/>&gt;=<sp/>tol)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GRB_INFINITY;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y.min()<sp/>&lt;=<sp/>-tol)<sp/></highlight><highlight class="comment">//<sp/>if<sp/>infeasible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GRB_INFINITY;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>arma::vec<sp/>obj<sp/>=<sp/>0.5<sp/>*<sp/>y.t()<sp/>*<sp/>Q<sp/>*<sp/>y<sp/>+<sp/>(C<sp/>*<sp/>x).t()<sp/>*<sp/>y<sp/>+<sp/>c.t()<sp/>*<sp/>y;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj(0);</highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_game_1_1_q_p___param_1a3e8ae28e0b8f163149e05247b87bab6c" kindref="member">Game::QP_Param::computeObjectiveWithoutOthers</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec<sp/>&amp;y)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y.n_rows<sp/>!=<sp/>this-&gt;getNy())</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_z_e_r_o_exception" kindref="compound">ZEROException</ref>(<ref refid="codes_8h_1aec3f6d9705d82787080ef99b37b7efeaa3c4b6828f5a12280debdb5a12e0e72ba" kindref="member">ZEROErrorCode::InvalidData</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>size<sp/>of<sp/>y&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/>arma::vec<sp/>obj<sp/>=<sp/>0.5<sp/>*<sp/>y.t()<sp/>*<sp/>Q<sp/>*<sp/>y<sp/>+<sp/>c.t()<sp/>*<sp/>y;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj(0);</highlight></codeline>
<codeline lineno="478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_game_1_1_q_p___param_1ad19060753eec41c341607f9f197f6771" kindref="member">Game::QP_Param::save</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;filename,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>erase)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><ref refid="namespace_utils_1a61870426848613ebcd38331a4e05e716" kindref="member">Utils::appendSave</ref>(std::string(</highlight><highlight class="stringliteral">&quot;QP_Param&quot;</highlight><highlight class="normal">),<sp/>filename,<sp/>erase);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><ref refid="namespace_utils_1a61870426848613ebcd38331a4e05e716" kindref="member">Utils::appendSave</ref>(this-&gt;Q,<sp/>filename,<sp/>std::string(</highlight><highlight class="stringliteral">&quot;QP_Param::Q&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><ref refid="namespace_utils_1a61870426848613ebcd38331a4e05e716" kindref="member">Utils::appendSave</ref>(this-&gt;A,<sp/>filename,<sp/>std::string(</highlight><highlight class="stringliteral">&quot;QP_Param::A&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><ref refid="namespace_utils_1a61870426848613ebcd38331a4e05e716" kindref="member">Utils::appendSave</ref>(this-&gt;B,<sp/>filename,<sp/>std::string(</highlight><highlight class="stringliteral">&quot;QP_Param::B&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><ref refid="namespace_utils_1a61870426848613ebcd38331a4e05e716" kindref="member">Utils::appendSave</ref>(this-&gt;C,<sp/>filename,<sp/>std::string(</highlight><highlight class="stringliteral">&quot;QP_Param::C&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><ref refid="namespace_utils_1a61870426848613ebcd38331a4e05e716" kindref="member">Utils::appendSave</ref>(this-&gt;b,<sp/>filename,<sp/>std::string(</highlight><highlight class="stringliteral">&quot;QP_Param::b&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><ref refid="namespace_utils_1a61870426848613ebcd38331a4e05e716" kindref="member">Utils::appendSave</ref>(this-&gt;c,<sp/>filename,<sp/>std::string(</highlight><highlight class="stringliteral">&quot;QP_Param::c&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>BOOST_LOG_TRIVIAL(trace)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Saved<sp/>QP_Param<sp/>to<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>filename;</highlight></codeline>
<codeline lineno="493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_game_1_1_q_p___param_1addb5647d7fd877b6559561df5ba7f198" kindref="member">Game::QP_Param::load</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;filename,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos)<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/>arma::sp_mat<sp/>Q,<sp/>A,<sp/>B,<sp/>C;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>arma::vec<sp/>c,<sp/>b;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>std::string<sp/>headercheck;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>pos<sp/>=<sp/><ref refid="namespace_utils_1a5564b70694570623dc79e723715dfdfe" kindref="member">Utils::appendRead</ref>(headercheck,<sp/>filename,<sp/>pos);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(headercheck<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;QP_Param&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_z_e_r_o_exception" kindref="compound">ZEROException</ref>(<ref refid="codes_8h_1aec3f6d9705d82787080ef99b37b7efeaa5206bd7472156351d2d9a99633ac9580" kindref="member">ZEROErrorCode::IOError</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>header&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>pos<sp/>=<sp/><ref refid="namespace_utils_1a5564b70694570623dc79e723715dfdfe" kindref="member">Utils::appendRead</ref>(Q,<sp/>filename,<sp/>pos,<sp/>std::string(</highlight><highlight class="stringliteral">&quot;QP_Param::Q&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>pos<sp/>=<sp/><ref refid="namespace_utils_1a5564b70694570623dc79e723715dfdfe" kindref="member">Utils::appendRead</ref>(A,<sp/>filename,<sp/>pos,<sp/>std::string(</highlight><highlight class="stringliteral">&quot;QP_Param::A&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>pos<sp/>=<sp/><ref refid="namespace_utils_1a5564b70694570623dc79e723715dfdfe" kindref="member">Utils::appendRead</ref>(B,<sp/>filename,<sp/>pos,<sp/>std::string(</highlight><highlight class="stringliteral">&quot;QP_Param::B&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/>pos<sp/>=<sp/><ref refid="namespace_utils_1a5564b70694570623dc79e723715dfdfe" kindref="member">Utils::appendRead</ref>(C,<sp/>filename,<sp/>pos,<sp/>std::string(</highlight><highlight class="stringliteral">&quot;QP_Param::C&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>pos<sp/>=<sp/><ref refid="namespace_utils_1a5564b70694570623dc79e723715dfdfe" kindref="member">Utils::appendRead</ref>(b,<sp/>filename,<sp/>pos,<sp/>std::string(</highlight><highlight class="stringliteral">&quot;QP_Param::b&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>pos<sp/>=<sp/><ref refid="namespace_utils_1a5564b70694570623dc79e723715dfdfe" kindref="member">Utils::appendRead</ref>(c,<sp/>filename,<sp/>pos,<sp/>std::string(</highlight><highlight class="stringliteral">&quot;QP_Param::c&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>this-&gt;set(Q,<sp/>C,<sp/>A,<sp/>B,<sp/>c,<sp/>b);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pos;</highlight></codeline>
<codeline lineno="527"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/games/qpmp.cpp"/>
  </compounddef>
</doxygen>
