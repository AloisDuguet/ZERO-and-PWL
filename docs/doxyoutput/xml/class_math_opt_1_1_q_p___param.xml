<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="class_math_opt_1_1_q_p___param" kind="class" language="C++" prot="public">
    <compoundname>MathOpt::QP_Param</compoundname>
    <basecompoundref refid="class_math_opt_1_1_m_p___param" prot="public" virt="non-virtual">MathOpt::MP_Param</basecompoundref>
    <includes refid="qp__param_8h" local="no">qp_param.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_math_opt_1_1_q_p___param_1a586b0d0f753d0a23ede54085e1aa4765" prot="private" static="no" mutable="no">
        <type>GRBEnv *</type>
        <definition>GRBEnv* MathOpt::QP_Param::Env</definition>
        <argsstring></argsstring>
        <name>Env</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/qp_param.h" line="43" column="10" bodyfile="include/mathopt/mp_param/qp_param.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_math_opt_1_1_q_p___param_1afaa5051e768ccdc909bbb797933f8533" prot="private" static="no" mutable="no">
        <type>GRBModel</type>
        <definition>GRBModel MathOpt::QP_Param::QuadModel</definition>
        <argsstring></argsstring>
        <name>QuadModel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/qp_param.h" line="44" column="11" bodyfile="include/mathopt/mp_param/qp_param.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_math_opt_1_1_q_p___param_1a6ce3df06821c3a515cef666c26b2aecc" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool MathOpt::QP_Param::madeyQy</definition>
        <argsstring></argsstring>
        <name>madeyQy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/qp_param.h" line="45" column="11" bodyfile="include/mathopt/mp_param/qp_param.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_math_opt_1_1_q_p___param_1a150faeba4b9ca64bae9ec5336571aac8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MathOpt::QP_Param::makeyQy</definition>
        <argsstring>()</argsstring>
        <name>makeyQy</name>
        <briefdescription>
<para>Adds the Gurobi Quadratic objective to the Gurobi model <computeroutput>QuadModel</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/qp_param.h" line="47" column="6" bodyfile="src/mathopt/mp_param/qp_param.cpp" bodystart="59" bodyend="79"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_math_opt_1_1_q_p___param_1a369bfb063b7bc01d8bce018df9639bce" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MathOpt::QP_Param::QP_Param</definition>
        <argsstring>(GRBEnv *env=nullptr)</argsstring>
        <name>QP_Param</name>
        <param>
          <type>GRBEnv *</type>
          <declname>env</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Initialize only the size. Everything else is empty (can be updated later) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/qp_param.h" line="51" column="11" bodyfile="include/mathopt/mp_param/qp_param.h" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_q_p___param_1afcddf16e9642adac737e504711af5109" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MathOpt::QP_Param::QP_Param</definition>
        <argsstring>(arma::sp_mat Q, arma::sp_mat C, arma::sp_mat A, arma::sp_mat B, arma::vec c, arma::vec b, GRBEnv *env=nullptr)</argsstring>
        <name>QP_Param</name>
        <param>
          <type>arma::sp_mat</type>
          <declname>Q</declname>
        </param>
        <param>
          <type>arma::sp_mat</type>
          <declname>C</declname>
        </param>
        <param>
          <type>arma::sp_mat</type>
          <declname>A</declname>
        </param>
        <param>
          <type>arma::sp_mat</type>
          <declname>B</declname>
        </param>
        <param>
          <type>arma::vec</type>
          <declname>c</declname>
        </param>
        <param>
          <type>arma::vec</type>
          <declname>b</declname>
        </param>
        <param>
          <type>GRBEnv *</type>
          <declname>env</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Set data at construct time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/qp_param.h" line="56" column="2" bodyfile="include/mathopt/mp_param/qp_param.h" bodystart="56" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_q_p___param_1afbcaa320bb50521e5c45efb3289c6356" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MathOpt::QP_Param::QP_Param</definition>
        <argsstring>(const QP_Param &amp;Qu)</argsstring>
        <name>QP_Param</name>
        <param>
          <type>const <ref refid="class_math_opt_1_1_q_p___param" kindref="compound">QP_Param</ref> &amp;</type>
          <declname>Qu</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/qp_param.h" line="71" column="2" bodyfile="include/mathopt/mp_param/qp_param.h" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_q_p___param_1a4f627c9b4d4028d180df71c50059c67b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MathOpt::QP_Param::forceDataCheck</definition>
        <argsstring>() const</argsstring>
        <name>forceDataCheck</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/qp_param.h" line="76" column="7" bodyfile="src/mathopt/mp_param/qp_param.cpp" bodystart="315" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_q_p___param_1a5f530bb9242f5be3a5e43cbc331bc5a3" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type><ref refid="class_math_opt_1_1_q_p___param" kindref="compound">QP_Param</ref> &amp;</type>
        <definition>MathOpt::QP_Param &amp; MathOpt::QP_Param::set</definition>
        <argsstring>(const arma::sp_mat &amp;Q, const arma::sp_mat &amp;C, const arma::sp_mat &amp;A, const arma::sp_mat &amp;B, const arma::vec &amp;c, const arma::vec &amp;b) final</argsstring>
        <name>set</name>
        <reimplements refid="class_math_opt_1_1_m_p___param_1ad78a4a1bd3566acdcc5c61feedca9f8a">set</reimplements>
        <param>
          <type>const arma::sp_mat &amp;</type>
          <declname>Q</declname>
        </param>
        <param>
          <type>const arma::sp_mat &amp;</type>
          <declname>C</declname>
        </param>
        <param>
          <type>const arma::sp_mat &amp;</type>
          <declname>A</declname>
        </param>
        <param>
          <type>const arma::sp_mat &amp;</type>
          <declname>B</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Setting the data, while keeping the input objects intact. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/qp_param.h" line="78" column="11" bodyfile="src/mathopt/mp_param/qp_param.cpp" bodystart="171" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_q_p___param_1a0934db94b23d326f04837f38505d3832" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type><ref refid="class_math_opt_1_1_q_p___param" kindref="compound">QP_Param</ref> &amp;</type>
        <definition>MathOpt::QP_Param &amp; MathOpt::QP_Param::set</definition>
        <argsstring>(arma::sp_mat &amp;&amp;Q, arma::sp_mat &amp;&amp;C, arma::sp_mat &amp;&amp;A, arma::sp_mat &amp;&amp;B, arma::vec &amp;&amp;c, arma::vec &amp;&amp;b) final</argsstring>
        <name>set</name>
        <reimplements refid="class_math_opt_1_1_m_p___param_1af8b3e3a4717541860fcb72634e1723ab">set</reimplements>
        <param>
          <type>arma::sp_mat &amp;&amp;</type>
          <declname>Q</declname>
        </param>
        <param>
          <type>arma::sp_mat &amp;&amp;</type>
          <declname>C</declname>
        </param>
        <param>
          <type>arma::sp_mat &amp;&amp;</type>
          <declname>A</declname>
        </param>
        <param>
          <type>arma::sp_mat &amp;&amp;</type>
          <declname>B</declname>
        </param>
        <param>
          <type>arma::vec &amp;&amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>arma::vec &amp;&amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Faster means to set data. But the input objects might be corrupted now. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/qp_param.h" line="84" column="11" bodyfile="src/mathopt/mp_param/qp_param.cpp" bodystart="184" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_q_p___param_1a23967c411b09fc63f44ed0d54b6d7e6f" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type><ref refid="class_math_opt_1_1_q_p___param" kindref="compound">QP_Param</ref> &amp;</type>
        <definition>MathOpt::QP_Param &amp; MathOpt::QP_Param::set</definition>
        <argsstring>(const QP_Objective &amp;obj, const QP_Constraints &amp;cons) final</argsstring>
        <name>set</name>
        <reimplements refid="class_math_opt_1_1_m_p___param_1ae632d6f5348fc84bebe05ab01288e448">set</reimplements>
        <param>
          <type>const <ref refid="struct_math_opt_1_1_q_p___objective" kindref="compound">QP_Objective</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const <ref refid="struct_math_opt_1_1_q_p___constraints" kindref="compound">QP_Constraints</ref> &amp;</type>
          <declname>cons</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/qp_param.h" line="90" column="11" bodyfile="src/mathopt/mp_param/qp_param.cpp" bodystart="209" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_q_p___param_1affbb9b4e6ed757951d385324883c6961" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type><ref refid="class_math_opt_1_1_q_p___param" kindref="compound">QP_Param</ref> &amp;</type>
        <definition>MathOpt::QP_Param &amp; MathOpt::QP_Param::set</definition>
        <argsstring>(QP_Objective &amp;&amp;obj, QP_Constraints &amp;&amp;cons) final</argsstring>
        <name>set</name>
        <reimplements refid="class_math_opt_1_1_m_p___param_1ae0389084bac5b495c773cf647b7e9bff">set</reimplements>
        <param>
          <type><ref refid="struct_math_opt_1_1_q_p___objective" kindref="compound">QP_Objective</ref> &amp;&amp;</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="struct_math_opt_1_1_q_p___constraints" kindref="compound">QP_Constraints</ref> &amp;&amp;</type>
          <declname>cons</declname>
        </param>
        <briefdescription>
<para>Setting the data with the inputs being a struct <ref refid="struct_math_opt_1_1_q_p___objective" kindref="compound">MathOpt::QP_Objective</ref> and struct <ref refid="struct_math_opt_1_1_q_p___constraints" kindref="compound">MathOpt::QP_Constraints</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/qp_param.h" line="92" column="11" bodyfile="src/mathopt/mp_param/qp_param.cpp" bodystart="197" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_q_p___param_1a169dc264349acd9dd9095c5b22c90c4e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MathOpt::QP_Param::operator==</definition>
        <argsstring>(const QP_Param &amp;Q2) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_math_opt_1_1_q_p___param" kindref="compound">QP_Param</ref> &amp;</type>
          <declname>Q2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/qp_param.h" line="94" column="7" bodyfile="src/mathopt/mp_param/qp_param.cpp" bodystart="43" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_q_p___param_1a7d40a13333c56987a46fd5fc298702d4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int MathOpt::QP_Param::KKT</definition>
        <argsstring>(arma::sp_mat &amp;M, arma::sp_mat &amp;N, arma::vec &amp;q) const</argsstring>
        <name>KKT</name>
        <param>
          <type>arma::sp_mat &amp;</type>
          <declname>M</declname>
        </param>
        <param>
          <type>arma::sp_mat &amp;</type>
          <declname>N</declname>
        </param>
        <param>
          <type>arma::vec &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Compute the KKT conditions for the given QP. </para>
        </briefdescription>
        <detaileddescription>
<para>Writes the KKT condition of the parameterized QP As per the convention, y is the decision variable for the QP and that is parameterized in x The KKT conditions are <formula id="41">$0 \leq y \perp My + Nx + q \geq 0$</formula> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/qp_param.h" line="97" column="15" bodyfile="src/mathopt/mp_param/qp_param.cpp" bodystart="147" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_q_p___param_1a8048abca2c92c8cb32033de1eacfc5cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; GRBModel &gt;</type>
        <definition>std::unique_ptr&lt; GRBModel &gt; MathOpt::QP_Param::solveFixed</definition>
        <argsstring>(arma::vec x, bool solve)</argsstring>
        <name>solveFixed</name>
        <param>
          <type>arma::vec</type>
          <declname>x</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>solve</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Given a value for the parameters <formula id="35">$x$</formula> in the definition of <ref refid="class_math_opt_1_1_q_p___param" kindref="compound">QP_Param</ref>, solve the parameterized quadratic program to optimality.</para>
<para>In terms of game theory, this can be viewed as <emphasis>the best response</emphasis> for a set of decisions by other players. <computeroutput>solve</computeroutput> decides whether the model has to be optimized or not </para>
        </detaileddescription>
        <inbodydescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>GRBException</parametername>
</parameternamelist>
<parameterdescription>
<para>if argument std::vector size is not compatible with the <ref refid="class_math_opt_1_1_q_p___param" kindref="compound">MathOpt::QP_Param</ref> definition.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </inbodydescription>
        <location file="include/mathopt/mp_param/qp_param.h" line="99" column="18" bodyfile="src/mathopt/mp_param/qp_param.cpp" bodystart="81" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_q_p___param_1abb8b63d5dc4dc0519df2a876cf7d28b7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double MathOpt::QP_Param::computeObjective</definition>
        <argsstring>(const arma::vec &amp;y, const arma::vec &amp;x, bool checkFeas=true, double tol=1e-6) const</argsstring>
        <name>computeObjective</name>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>checkFeas</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>double</type>
          <declname>tol</declname>
          <defval>1e-6</defval>
        </param>
        <briefdescription>
<para>Computes the objective value, given a vector <computeroutput>y</computeroutput> and a parameterizing vector <computeroutput>x</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Computes <formula id="42">$\frac{1}{2} y^TQy + (Cx)^Ty + c^Ty$</formula> given the input values <computeroutput>y</computeroutput> and <computeroutput>x</computeroutput>. <computeroutput>checkFeas</computeroutput> if <computeroutput>true</computeroutput>, checks if the given <formula id="38">$(x,y)$</formula> satisfies the constraints of the problem, namely <formula id="39">$Ax + By \leq b$</formula>.</para>
        </inbodydescription>
        <location file="include/mathopt/mp_param/qp_param.h" line="103" column="9" bodyfile="src/mathopt/mp_param/qp_param.cpp" bodystart="229" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_q_p___param_1a7b08581092f727e9066306df7cbaeb68" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool MathOpt::QP_Param::isPlayable</definition>
        <argsstring>(const QP_Param &amp;P) const</argsstring>
        <name>isPlayable</name>
        <param>
          <type>const <ref refid="class_math_opt_1_1_q_p___param" kindref="compound">QP_Param</ref> &amp;</type>
          <declname>P</declname>
        </param>
        <briefdescription>
<para>Checks if the current object can play a game with another <ref refid="class_math_opt_1_1_q_p___param" kindref="compound">MathOpt::QP_Param</ref> object <computeroutput>P</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/qp_param.h" line="108" column="14" bodyfile="include/mathopt/mp_param/qp_param.h" bodystart="108" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_q_p___param_1a11957fd90b5bfeacc4fa94fdb7c3a622" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_math_opt_1_1_q_p___param" kindref="compound">QP_Param</ref> &amp;</type>
        <definition>MathOpt::QP_Param &amp; MathOpt::QP_Param::addDummy</definition>
        <argsstring>(unsigned int pars, unsigned int vars=0, int position=-1) override</argsstring>
        <name>addDummy</name>
        <reimplements refid="class_math_opt_1_1_m_p___param_1a802628bc47d8e985d77e6184440af534">addDummy</reimplements>
        <param>
          <type>unsigned int</type>
          <declname>pars</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>vars</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>position</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>You might have to rerun <ref refid="class_math_opt_1_1_q_p___param_1a7d40a13333c56987a46fd5fc298702d4" kindref="member">QP_Param::KKT</ref> since you have now changed the QP. </para>
</simplesect>
<simplesect kind="warning"><para>This implies you might have to rerun NashMathOpt::formulateLCP again too. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/qp_param.h" line="119" column="11" bodyfile="src/mathopt/mp_param/qp_param.cpp" bodystart="127" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_q_p___param_1a593d1432623f387270b6298c7a41f3f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void MathOpt::QP_Param::write</definition>
        <argsstring>(const std::string &amp;filename, bool append) const override</argsstring>
        <name>write</name>
        <reimplements refid="class_math_opt_1_1_m_p___param_1a68ac30e9ab415719ab7be25357899617">write</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>append</declname>
        </param>
        <briefdescription>
<para>Writes a given parameterized Mathematical program to a set of files. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/qp_param.h" line="123" column="7" bodyfile="src/mathopt/mp_param/qp_param.cpp" bodystart="27" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_q_p___param_1abb45677c8119447c93235369bfad3eaa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MathOpt::QP_Param::save</definition>
        <argsstring>(const std::string &amp;filename, bool erase=true) const</argsstring>
        <name>save</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>erase</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Saves the <computeroutput><ref refid="class_math_opt_1_1_q_p___param" kindref="compound">MathOpt::QP_Param</ref></computeroutput> object in a loadable file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>The <ref refid="class_math_opt_1_1_q_p___param" kindref="compound">MathOpt::QP_Param</ref> object hence stored can be loaded back using <ref refid="class_math_opt_1_1_q_p___param_1ab09ea78b2a6647432ef8186686f9a0f9" kindref="member">MathOpt::QP_Param::load</ref></para>
        </inbodydescription>
        <location file="include/mathopt/mp_param/qp_param.h" line="126" column="7" bodyfile="src/mathopt/mp_param/qp_param.cpp" bodystart="266" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_q_p___param_1ab09ea78b2a6647432ef8186686f9a0f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long int</type>
        <definition>long int MathOpt::QP_Param::load</definition>
        <argsstring>(const std::string &amp;filename, long int pos=0)</argsstring>
        <name>load</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>long int</type>
          <declname>pos</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Loads the <computeroutput><ref refid="class_math_opt_1_1_q_p___param" kindref="compound">MathOpt::QP_Param</ref></computeroutput> object stored in a file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Before calling this function, use the constructor <ref refid="class_math_opt_1_1_q_p___param_1a369bfb063b7bc01d8bce018df9639bce" kindref="member">QP_Param::QP_Param(GRBEnv *Env)</ref> to initialize.</para>
<para>Example usage: <programlisting filename=".cpp"><codeline><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shells_2epec_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GRBEnv<sp/><ref refid="class_math_opt_1_1_q_p___param_1a586b0d0f753d0a23ede54085e1aa4765" kindref="member">Env</ref>;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_math_opt_1_1_q_p___param" kindref="compound">MathOpt::QP_Param</ref><sp/>q1(&amp;<ref refid="class_math_opt_1_1_q_p___param_1a586b0d0f753d0a23ede54085e1aa4765" kindref="member">Env</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q1.load(</highlight><highlight class="stringliteral">&quot;./dat/q1data.dat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;q1&lt;&lt;</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
        </inbodydescription>
        <location file="include/mathopt/mp_param/qp_param.h" line="129" column="12" bodyfile="src/mathopt/mp_param/qp_param.cpp" bodystart="281" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_q_p___param_1a0353da74066b38a7f5fa5a6c11485564" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double MathOpt::QP_Param::computeObjectiveWithoutOthers</definition>
        <argsstring>(const arma::vec &amp;y) const</argsstring>
        <name>computeObjectiveWithoutOthers</name>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Computes <formula id="43">$\frac{1}{2} y^TQy + c^Ty $</formula> given the input values <computeroutput>y</computeroutput>;</para>
        </inbodydescription>
        <location file="include/mathopt/mp_param/qp_param.h" line="130" column="12" bodyfile="src/mathopt/mp_param/qp_param.cpp" bodystart="256" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_q_p___param_1a57583e7acd32f13e21b020e22cc1a724" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>arma::vec</type>
        <definition>arma::vec MathOpt::QP_Param::getConstraintViolations</definition>
        <argsstring>(const arma::vec x, const arma::vec y, double tol)</argsstring>
        <name>getConstraintViolations</name>
        <param>
          <type>const arma::vec</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const arma::vec</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/qp_param.h" line="131" column="12" bodyfile="src/mathopt/mp_param/qp_param.cpp" bodystart="213" bodyend="227"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class to handle parameterized quadratic programs(QP) </para>
    </briefdescription>
    <detaileddescription>
<para>Represents a Parameterized QP as <formula id="4">\[ \min_y \frac{1}{2}y^TQy + c^Ty + (Cx)^T y \]</formula> Subject to <formula id="5">\begin{eqnarray} Ax + By &amp;\leq&amp; b \\ y &amp;\geq&amp; 0 \end{eqnarray}</formula> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>MathOpt::MP_Param</label>
        <link refid="class_math_opt_1_1_m_p___param"/>
      </node>
      <node id="1">
        <label>MathOpt::QP_Param</label>
        <link refid="class_math_opt_1_1_q_p___param"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>MathOpt::MP_Param</label>
        <link refid="class_math_opt_1_1_m_p___param"/>
      </node>
      <node id="1">
        <label>MathOpt::QP_Param</label>
        <link refid="class_math_opt_1_1_q_p___param"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/mathopt/mp_param/qp_param.h" line="40" column="1" bodyfile="include/mathopt/mp_param/qp_param.h" bodystart="28" bodyend="132"/>
    <listofallmembers>
      <member refid="class_math_opt_1_1_m_p___param_1a69e39bfe4a58e5c43dbcb7ac16be3fe5" prot="protected" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>A</name></member>
      <member refid="class_math_opt_1_1_q_p___param_1a11957fd90b5bfeacc4fa94fdb7c3a622" prot="public" virt="virtual"><scope>MathOpt::QP_Param</scope><name>addDummy</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1adb541edcb7083da9bde8e6615063acd3" prot="protected" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>B</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1af6e726c09d1d43359c2dad586b0fb4d5" prot="protected" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>b</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a13727398531ec805acd474fa5da89056" prot="protected" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>C</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a270fad22decf1dbdc2227ff9a4875e34" prot="protected" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>c</name></member>
      <member refid="class_math_opt_1_1_q_p___param_1abb8b63d5dc4dc0519df2a876cf7d28b7" prot="public" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>computeObjective</name></member>
      <member refid="class_math_opt_1_1_q_p___param_1a0353da74066b38a7f5fa5a6c11485564" prot="public" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>computeObjectiveWithoutOthers</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1aff8f3f085bd5938a352874c020f8ef23" prot="protected" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>dataCheck</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1af137f454eef5ef1e9ef3edd7c7b16261" prot="public" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>dataCheck</name></member>
      <member refid="class_math_opt_1_1_q_p___param_1a586b0d0f753d0a23ede54085e1aa4765" prot="private" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>Env</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a77c1f71200e55ee2fe1abe3c9eb13005" prot="protected" virt="virtual"><scope>MathOpt::QP_Param</scope><name>finalize</name></member>
      <member refid="class_math_opt_1_1_q_p___param_1a4f627c9b4d4028d180df71c50059c67b" prot="public" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>forceDataCheck</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a40fff25cfb814374938f83ce9b3786de" prot="public" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>getA</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1af9a8eaa4d0d2034f3bc221757ebba7e2" prot="public" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>getB</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a1f0114c151fc557843e39364bca6e1a7" prot="public" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>getb</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1ab6633d7091d1e470230773cfbe53bf3d" prot="public" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>getC</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a5e6b2cba9aee0d780957a2e0c7329e02" prot="public" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>getc</name></member>
      <member refid="class_math_opt_1_1_q_p___param_1a57583e7acd32f13e21b020e22cc1a724" prot="public" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>getConstraintViolations</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a202eba6a77a560f6db64104eccc34d00" prot="public" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>getNx</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1af1070c3cbcafa07a86aa96f4e015a361" prot="public" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>getNy</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a0f1cc247264404e29747200c7ddfc1ab" prot="public" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>getQ</name></member>
      <member refid="class_math_opt_1_1_q_p___param_1a7b08581092f727e9066306df7cbaeb68" prot="public" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>isPlayable</name></member>
      <member refid="class_math_opt_1_1_q_p___param_1a7d40a13333c56987a46fd5fc298702d4" prot="public" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>KKT</name></member>
      <member refid="class_math_opt_1_1_q_p___param_1ab09ea78b2a6647432ef8186686f9a0f9" prot="public" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>load</name></member>
      <member refid="class_math_opt_1_1_q_p___param_1a6ce3df06821c3a515cef666c26b2aecc" prot="private" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>madeyQy</name></member>
      <member refid="class_math_opt_1_1_q_p___param_1a150faeba4b9ca64bae9ec5336571aac8" prot="private" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>makeyQy</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1af1d48cd18c52aaab1e99e11dfa4cce67" prot="public" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>MP_Param</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a2593388bfb462f7a5e36708f8c6f9770" prot="public" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>MP_Param</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a5c20eb5e9dac543042b9888e012ab99b" prot="protected" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>Ncons</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1ab74a22bf304936286282f869cb646873" prot="protected" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>Nx</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a1a69f24fcb92ebf76ea29c9407859f0a" prot="protected" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>Ny</name></member>
      <member refid="class_math_opt_1_1_q_p___param_1a169dc264349acd9dd9095c5b22c90c4e" prot="public" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>operator==</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1aae8144b23a29ea99d5ef793729438feb" prot="protected" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>Q</name></member>
      <member refid="class_math_opt_1_1_q_p___param_1a369bfb063b7bc01d8bce018df9639bce" prot="public" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>QP_Param</name></member>
      <member refid="class_math_opt_1_1_q_p___param_1afcddf16e9642adac737e504711af5109" prot="public" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>QP_Param</name></member>
      <member refid="class_math_opt_1_1_q_p___param_1afbcaa320bb50521e5c45efb3289c6356" prot="public" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>QP_Param</name></member>
      <member refid="class_math_opt_1_1_q_p___param_1afaa5051e768ccdc909bbb797933f8533" prot="private" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>QuadModel</name></member>
      <member refid="class_math_opt_1_1_q_p___param_1abb45677c8119447c93235369bfad3eaa" prot="public" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>save</name></member>
      <member refid="class_math_opt_1_1_q_p___param_1a5f530bb9242f5be3a5e43cbc331bc5a3" prot="public" virt="virtual"><scope>MathOpt::QP_Param</scope><name>set</name></member>
      <member refid="class_math_opt_1_1_q_p___param_1a0934db94b23d326f04837f38505d3832" prot="public" virt="virtual"><scope>MathOpt::QP_Param</scope><name>set</name></member>
      <member refid="class_math_opt_1_1_q_p___param_1a23967c411b09fc63f44ed0d54b6d7e6f" prot="public" virt="virtual"><scope>MathOpt::QP_Param</scope><name>set</name></member>
      <member refid="class_math_opt_1_1_q_p___param_1affbb9b4e6ed757951d385324883c6961" prot="public" virt="virtual"><scope>MathOpt::QP_Param</scope><name>set</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1ade7514774a87da1d741203de23084141" prot="public" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>setA</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a3d1cfea15e1d90c8d599b7f43fbce99e" prot="public" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>setB</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1acf30858c84ca9134645bfdc00e5c3c01" prot="public" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>setb</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1aef703db3b2617b1e7f2918c98742ebae" prot="public" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>setc</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a371da389ffb48698912345747dcc74b4" prot="public" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>setC</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1aa91dd679cf1572f215d95ecfbeaff20f" prot="public" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>setQ</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a70400a4046b1ab099f6c2ebbdceab6d5" prot="protected" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>size</name></member>
      <member refid="class_math_opt_1_1_q_p___param_1a8048abca2c92c8cb32033de1eacfc5cb" prot="public" virt="non-virtual"><scope>MathOpt::QP_Param</scope><name>solveFixed</name></member>
      <member refid="class_math_opt_1_1_q_p___param_1a593d1432623f387270b6298c7a41f3f3" prot="public" virt="virtual"><scope>MathOpt::QP_Param</scope><name>write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
