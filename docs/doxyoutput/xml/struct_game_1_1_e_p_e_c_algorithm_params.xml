<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="struct_game_1_1_e_p_e_c_algorithm_params" kind="struct" language="C++" prot="public">
    <compoundname>Game::EPECAlgorithmParams</compoundname>
    <includes refid="games_8h" local="no">games.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_game_1_1_e_p_e_c_algorithm_params_1afb7d219ce16e71e7a03fb7f454d938ca" prot="public" static="no" mutable="no">
        <type><ref refid="namespace_game_1a09f076906bd963c7e558c8f1a9506d1d" kindref="member">Game::EPECalgorithm</ref></type>
        <definition>Game::EPECalgorithm Game::EPECAlgorithmParams::Algorithm</definition>
        <argsstring></argsstring>
        <name>Algorithm</name>
        <initializer>= <ref refid="namespace_game_1a09f076906bd963c7e558c8f1a9506d1da0ea289685ea96f0791d39efa1f02a6f4" kindref="member">Game::EPECalgorithm::FullEnumeration</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games.h" line="467" column="23" bodyfile="include/games.h" bodystart="467" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_game_1_1_e_p_e_c_algorithm_params_1a87eb9aa0451de0a529a908c6d638085d" prot="public" static="no" mutable="no">
        <type><ref refid="namespace_game_1ad391a76e36d878e9924a5e00ed89f439" kindref="member">Game::EPECRecoverStrategy</ref></type>
        <definition>Game::EPECRecoverStrategy Game::EPECAlgorithmParams::RecoverStrategy</definition>
        <argsstring></argsstring>
        <name>RecoverStrategy</name>
        <initializer>=
      <ref refid="namespace_game_1ad391a76e36d878e9924a5e00ed89f439a5e796cd9e20e235896671171d02f037c" kindref="member">EPECRecoverStrategy::IncrementalEnumeration</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games.h" line="468" column="29" bodyfile="include/games.h" bodystart="468" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_game_1_1_e_p_e_c_algorithm_params_1a683c9950a5584e5c63dc8abff9251b28" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Game::EPECAlgorithmParams::PolyLcp</definition>
        <argsstring></argsstring>
        <name>PolyLcp</name>
        <initializer>{
      true}</initializer>
        <briefdescription>
<para>if the Algorithm uses the polyhedral class for the <ref refid="class_game_1_1_l_c_p" kindref="compound">LCP</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>True if the Algorithm extends the <ref refid="class_game_1_1_l_c_p" kindref="compound">LCP</ref> to <ref refid="class_game_1_1_poly_l_c_p" kindref="compound">PolyLCP</ref>. Namely, true </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games.h" line="470" column="8" bodyfile="include/games.h" bodystart="470" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_game_1_1_e_p_e_c_algorithm_params_1a40dc83ba191fa696abedc5ff81cad472" prot="public" static="no" mutable="no">
        <type><ref refid="namespace_game_1a1575f114564e7083eaa22c1ae0b2e066" kindref="member">Game::EPECAddPolyMethod</ref></type>
        <definition>Game::EPECAddPolyMethod Game::EPECAlgorithmParams::AddPolyMethod</definition>
        <argsstring></argsstring>
        <name>AddPolyMethod</name>
        <initializer>= <ref refid="namespace_game_1a1575f114564e7083eaa22c1ae0b2e066aa7e82daa7280af25afbaa076ac16eb1e" kindref="member">Game::EPECAddPolyMethod::Sequential</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games.h" line="473" column="27" bodyfile="include/games.h" bodystart="473" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_game_1_1_e_p_e_c_algorithm_params_1a69563f9710bd72a54741b049e0b25887" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Game::EPECAlgorithmParams::BoundPrimals</definition>
        <argsstring></argsstring>
        <name>BoundPrimals</name>
        <initializer>{false}</initializer>
        <briefdescription>
<para>arbitrary large BigM constant </para>
        </briefdescription>
        <detaileddescription>
<para>If true, each QP param is bounded with an </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games.h" line="474" column="8" bodyfile="include/games.h" bodystart="474" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_game_1_1_e_p_e_c_algorithm_params_1af09dd768461174c98bbb10eff8f744e3" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Game::EPECAlgorithmParams::BoundBigM</definition>
        <argsstring></argsstring>
        <name>BoundBigM</name>
        <initializer>{1e5}</initializer>
        <briefdescription>
<para>Bounding upper value if <computeroutput>BoundPrimals</computeroutput> is true. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games.h" line="476" column="10" bodyfile="include/games.h" bodystart="476" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_game_1_1_e_p_e_c_algorithm_params_1a002b85eb1579cc88717013405b417d30" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Game::EPECAlgorithmParams::DeviationTolerance</definition>
        <argsstring></argsstring>
        <name>DeviationTolerance</name>
        <initializer>{
      51e-4}</initializer>
        <briefdescription>
<para>Tolerance parameter for profitable deviations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games.h" line="477" column="10" bodyfile="include/games.h" bodystart="477" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_game_1_1_e_p_e_c_algorithm_params_1a35570398b595c2911d879e5cd2b73948" prot="public" static="no" mutable="no">
        <type>long int</type>
        <definition>long int Game::EPECAlgorithmParams::AddPolyMethodSeed</definition>
        <argsstring></argsstring>
        <name>AddPolyMethodSeed</name>
        <initializer>{
      -1}</initializer>
        <briefdescription>
<para>default computed value will be seeded. </para>
        </briefdescription>
        <detaileddescription>
<para>Random seed for the Random selection of polyhedra. If -1, a </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games.h" line="479" column="12" bodyfile="include/games.h" bodystart="479" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_game_1_1_e_p_e_c_algorithm_params_1a134a20176283867357929f5b94ce4b6c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Game::EPECAlgorithmParams::Indicators</definition>
        <argsstring></argsstring>
        <name>Indicators</name>
        <initializer>{true}</initializer>
        <briefdescription>
<para>Uses <computeroutput>BigM</computeroutput> if <computeroutput>false</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Controls the flag <computeroutput>UseIndicators</computeroutput> in <ref refid="class_game_1_1_l_c_p" kindref="compound">Game::LCP</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games.h" line="482" column="8" bodyfile="include/games.h" bodystart="482" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_game_1_1_e_p_e_c_algorithm_params_1ad3f7d789c6d377919b38a16cd358adab" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Game::EPECAlgorithmParams::TimeLimit</definition>
        <argsstring></argsstring>
        <name>TimeLimit</name>
        <initializer>{
      -1}</initializer>
        <briefdescription>
<para>Controls the timelimit for solve in <ref refid="class_game_1_1_e_p_e_c_1a71db5d5bacd5a7b97437795d797f882b" kindref="member">Game::EPEC::findNashEq</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games.h" line="484" column="10" bodyfile="include/games.h" bodystart="484" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_game_1_1_e_p_e_c_algorithm_params_1a644dea0e4975a07a250ba2b1b72ac4aa" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Game::EPECAlgorithmParams::Threads</definition>
        <argsstring></argsstring>
        <name>Threads</name>
        <initializer>{
      0}</initializer>
        <briefdescription>
<para>Controls the number of Threads Gurobi exploits. Default 0 (auto) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games.h" line="486" column="16" bodyfile="include/games.h" bodystart="486" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_game_1_1_e_p_e_c_algorithm_params_1aad475fefb22c4ca3844adff8010d1b3a" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Game::EPECAlgorithmParams::Aggressiveness</definition>
        <argsstring></argsstring>
        <name>Aggressiveness</name>
        <initializer>{
      1}</initializer>
        <briefdescription>
<para>in EPEC::iterativeNash </para>
        </briefdescription>
        <detaileddescription>
<para>Controls the number of Random polyhedra added at each iteration </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games.h" line="488" column="16" bodyfile="include/games.h" bodystart="488" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_game_1_1_e_p_e_c_algorithm_params_1acdd4f8d1c03e3e4c76348cd7e757cc85" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Game::EPECAlgorithmParams::PureNashEquilibrium</definition>
        <argsstring></argsstring>
        <name>PureNashEquilibrium</name>
        <initializer>{
      false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If true, the Algorithm will tend to search for pure NE. If none exists, it will return a MNE (if exists) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games.h" line="491" column="8" bodyfile="include/games.h" bodystart="491" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Stores the configuration for <ref refid="class_game_1_1_e_p_e_c" kindref="compound">EPEC</ref> algorithms. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/games.h" line="466" column="26" bodyfile="include/games.h" bodystart="466" bodyend="494"/>
    <listofallmembers>
      <member refid="struct_game_1_1_e_p_e_c_algorithm_params_1a40dc83ba191fa696abedc5ff81cad472" prot="public" virt="non-virtual"><scope>Game::EPECAlgorithmParams</scope><name>AddPolyMethod</name></member>
      <member refid="struct_game_1_1_e_p_e_c_algorithm_params_1a35570398b595c2911d879e5cd2b73948" prot="public" virt="non-virtual"><scope>Game::EPECAlgorithmParams</scope><name>AddPolyMethodSeed</name></member>
      <member refid="struct_game_1_1_e_p_e_c_algorithm_params_1aad475fefb22c4ca3844adff8010d1b3a" prot="public" virt="non-virtual"><scope>Game::EPECAlgorithmParams</scope><name>Aggressiveness</name></member>
      <member refid="struct_game_1_1_e_p_e_c_algorithm_params_1afb7d219ce16e71e7a03fb7f454d938ca" prot="public" virt="non-virtual"><scope>Game::EPECAlgorithmParams</scope><name>Algorithm</name></member>
      <member refid="struct_game_1_1_e_p_e_c_algorithm_params_1af09dd768461174c98bbb10eff8f744e3" prot="public" virt="non-virtual"><scope>Game::EPECAlgorithmParams</scope><name>BoundBigM</name></member>
      <member refid="struct_game_1_1_e_p_e_c_algorithm_params_1a69563f9710bd72a54741b049e0b25887" prot="public" virt="non-virtual"><scope>Game::EPECAlgorithmParams</scope><name>BoundPrimals</name></member>
      <member refid="struct_game_1_1_e_p_e_c_algorithm_params_1a002b85eb1579cc88717013405b417d30" prot="public" virt="non-virtual"><scope>Game::EPECAlgorithmParams</scope><name>DeviationTolerance</name></member>
      <member refid="struct_game_1_1_e_p_e_c_algorithm_params_1a134a20176283867357929f5b94ce4b6c" prot="public" virt="non-virtual"><scope>Game::EPECAlgorithmParams</scope><name>Indicators</name></member>
      <member refid="struct_game_1_1_e_p_e_c_algorithm_params_1a683c9950a5584e5c63dc8abff9251b28" prot="public" virt="non-virtual"><scope>Game::EPECAlgorithmParams</scope><name>PolyLcp</name></member>
      <member refid="struct_game_1_1_e_p_e_c_algorithm_params_1acdd4f8d1c03e3e4c76348cd7e757cc85" prot="public" virt="non-virtual"><scope>Game::EPECAlgorithmParams</scope><name>PureNashEquilibrium</name></member>
      <member refid="struct_game_1_1_e_p_e_c_algorithm_params_1a87eb9aa0451de0a529a908c6d638085d" prot="public" virt="non-virtual"><scope>Game::EPECAlgorithmParams</scope><name>RecoverStrategy</name></member>
      <member refid="struct_game_1_1_e_p_e_c_algorithm_params_1a644dea0e4975a07a250ba2b1b72ac4aa" prot="public" virt="non-virtual"><scope>Game::EPECAlgorithmParams</scope><name>Threads</name></member>
      <member refid="struct_game_1_1_e_p_e_c_algorithm_params_1ad3f7d789c6d377919b38a16cd358adab" prot="public" virt="non-virtual"><scope>Game::EPECAlgorithmParams</scope><name>TimeLimit</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
