<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="class_game_1_1_i_p_g" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>Game::IPG</compoundname>
    <basecompoundref refid="class_game_1_1_abstract_game" prot="public" virt="non-virtual">Game::AbstractGame&lt; Data::IPG::DataObject &gt;</basecompoundref>
    <derivedcompoundref refid="class_models_1_1_i_p_g_1_1_i_p_g" prot="public" virt="non-virtual">Models::IPG::IPG</derivedcompoundref>
    <includes refid="ipg_8h" local="no">ipg.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_game_1_1_i_p_g_1a3a939675fddeb5adda31e7c7be895e6c" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="class_math_opt_1_1_i_p___param" kindref="compound">MathOpt::IP_Param</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;MathOpt::IP_Param&gt; &gt; Game::IPG::PlayersIP</definition>
        <argsstring></argsstring>
        <name>PlayersIP</name>
        <initializer>{}</initializer>
        <briefdescription>
<para>&lt; </para>
        </briefdescription>
        <detaileddescription>
<para>This class handles Integer Programming Games (<ref refid="class_game_1_1_i_p_g" kindref="compound">IPG</ref>), namely multiple agents solving an integer programming game. The Integer Programs associated to each player </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="48" column="3" bodyfile="include/games/ipg.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_game_1_1_i_p_g_1a728a80ade416a2f36cd5a8833a0cf2ee" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; unsigned int &gt;</type>
        <definition>std::vector&lt;unsigned int&gt; Game::IPG::PlayerVariables</definition>
        <argsstring></argsstring>
        <name>PlayerVariables</name>
        <initializer>{}</initializer>
        <briefdescription>
<para>The number of variables for each player. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="50" column="14" bodyfile="include/games/ipg.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_game_1_1_i_p_g_1ae0fcd4871cd997f56ca1796e13a43112" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Game::IPG::Finalized</definition>
        <argsstring></argsstring>
        <name>Finalized</name>
        <initializer>{false}</initializer>
        <briefdescription>
<para>When the object is finalized, the solving process can start. No players can be added. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="52" column="7" bodyfile="include/games/ipg.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_game_1_1_i_p_g_1a81a4ccc616e5facf3ee599761bf3fc9a" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; arma::vec &gt;</type>
        <definition>std::vector&lt;arma::vec&gt; Game::IPG::Solution</definition>
        <argsstring></argsstring>
        <name>Solution</name>
        <briefdescription>
<para>Solution variable values, for each player. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="54" column="14" bodyfile="include/games/ipg.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_game_1_1_i_p_g_1aed0e301658da5321d151fad5f10db21b" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_algorithms_1_1_i_p_g_1_1_algorithm" kindref="compound">Algorithms::IPG::Algorithm</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Algorithms::IPG::Algorithm&gt; Game::IPG::Algorithm</definition>
        <argsstring></argsstring>
        <name>Algorithm</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="57" column="18" bodyfile="include/games/ipg.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_game_1_1_i_p_g_1aebd561777cc9e2b5149ebb7e1f6e1b0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Algorithms::IPG::Algorithm</definition>
        <argsstring></argsstring>
        <name>Algorithms::IPG::Algorithm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="68" column="2" bodyfile="include/games/ipg.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_game_1_1_i_p_g_1a84836887d30b770869453f4943bdbfe2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Algorithms::IPG::Oracle</definition>
        <argsstring></argsstring>
        <name>Algorithms::IPG::Oracle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="69" column="2" bodyfile="include/games/ipg.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_game_1_1_i_p_g_1a7ea608210b56699c2a76da364b2214d6" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Game::IPG::getXMinusI</definition>
        <argsstring>(const arma::vec &amp;x, const unsigned int &amp;i, arma::vec &amp;xMinusI) const</argsstring>
        <name>getXMinusI</name>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>x</declname>
          <briefdescription><para>The vector containing the full solution. It should have the same size of the field NumVariables </para>
</briefdescription>
        </param>
        <param>
          <type>const unsigned int &amp;</type>
          <declname>i</declname>
          <briefdescription><para>The index of the designed player </para>
</briefdescription>
        </param>
        <param>
          <type>arma::vec &amp;</type>
          <declname>xMinusI</declname>
          <briefdescription><para>An output vector containing x^{-i} </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Given <computeroutput>x</computeroutput> as the solution vector and <computeroutput>i</computeroutput> as index of player, the method returns x^{-i}</para>
        </inbodydescription>
        <location file="include/games/ipg.h" line="58" column="7" bodyfile="src/games/ipg.cpp" bodystart="54" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_i_p_g_1aec5449ea62ceaa82411c7d7a454f2b57" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Game::IPG::getXofI</definition>
        <argsstring>(const arma::vec &amp;x, const unsigned int &amp;i, arma::vec &amp;xOfI) const</argsstring>
        <name>getXofI</name>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>x</declname>
          <briefdescription><para>The vector containing the full solution. It should have the same size of the field NumVariables </para>
</briefdescription>
        </param>
        <param>
          <type>const unsigned int &amp;</type>
          <declname>i</declname>
          <briefdescription><para>The index of the designed player </para>
</briefdescription>
        </param>
        <param>
          <type>arma::vec &amp;</type>
          <declname>xOfI</declname>
          <briefdescription><para>An output vector containing x^i </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Given <computeroutput>x</computeroutput> as the solution vector and <computeroutput>i</computeroutput> as index of player, the method returns x^i</para>
        </inbodydescription>
        <location file="include/games/ipg.h" line="59" column="7" bodyfile="src/games/ipg.cpp" bodystart="79" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_i_p_g_1ab3fa5c1de6f4089de6f130740a12e89c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Game::IPG::computeNashEq</definition>
        <argsstring>(double localTimeLimit=-1.0, bool check=false)</argsstring>
        <name>computeNashEq</name>
        <param>
          <type>double</type>
          <declname>localTimeLimit</declname>
          <defval>-1.0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>check</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="60" column="7"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_game_1_1_i_p_g_1acabbd4441f684af0f9ba5d3ee2e2c615" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Game::IPG::preFinalize</definition>
        <argsstring>()=0</argsstring>
        <name>preFinalize</name>
        <reimplementedby refid="class_models_1_1_i_p_g_1_1_i_p_g_1a56225f2c6e524b815820059d29fec93a">preFinalize</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="64" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_i_p_g_1a14cb516689f5fc0e43d1113647249847" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Game::IPG::postFinalize</definition>
        <argsstring>()=0</argsstring>
        <name>postFinalize</name>
        <reimplementedby refid="class_models_1_1_i_p_g_1_1_i_p_g_1a930819b85589289847d52abd6a06c803">postFinalize</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="65" column="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_game_1_1_i_p_g_1a448677cf65ae15178c27da7ec294b5d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Game::IPG::finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>This methods finalizes the model by disabling any edits to the number of players. The proper object (for instance, the ones counting players variables) are initialized with the right values.</para>
        </inbodydescription>
        <location file="include/games/ipg.h" line="70" column="7" bodyfile="src/games/ipg.cpp" bodystart="36" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_i_p_g_1a89b4c1e57b17bba4438541c3a488198e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Game::IPG::IPG</definition>
        <argsstring>(GRBEnv *env)</argsstring>
        <name>IPG</name>
        <param>
          <type>GRBEnv *</type>
          <declname>env</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="71" column="2" bodyfile="include/games/ipg.h" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_i_p_g_1aba1ab31c35f012e48e1a47fec318ad3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Game::IPG::IPG</definition>
        <argsstring>(GRBEnv *env, std::vector&lt; std::shared_ptr&lt; MathOpt::IP_Param &gt;&gt; players)</argsstring>
        <name>IPG</name>
        <param>
          <type>GRBEnv *</type>
          <declname>env</declname>
          <briefdescription><para>A pointer to the Gurobi Environment </para>
</briefdescription>
        </param>
        <param>
          <type>std::vector&lt; std::shared_ptr&lt; <ref refid="class_math_opt_1_1_i_p___param" kindref="compound">MathOpt::IP_Param</ref> &gt;&gt;</type>
          <declname>players</declname>
          <briefdescription><para>A vector containing the pointers to the IP param for each player </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>This constructors initializes the integer programming game with the gurobi environment <computeroutput>env</computeroutput> and the vector of shared pointers to the IP_Params in <computeroutput>players</computeroutput> </para>
        </inbodydescription>
        <location file="include/games/ipg.h" line="72" column="2" bodyfile="src/games/ipg.cpp" bodystart="21" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_i_p_g_1a1b2c4bee27025af5921780ca2a41fe28" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>const void</type>
        <definition>const void Game::IPG::findNashEq</definition>
        <argsstring>() override</argsstring>
        <name>findNashEq</name>
        <reimplements refid="class_game_1_1_abstract_game_1a5b8636444d39891af65972566270dcc6">findNashEq</reimplements>
        <briefdescription>
<para>The main method to start the solving process. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="74" column="13" bodyfile="src/games/ipg.cpp" bodystart="100" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_i_p_g_1ad999f9085c75eed024e09b87b3b832b4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Game::IPG::isSolved</definition>
        <argsstring>(double tol=1e-5) const override</argsstring>
        <name>isSolved</name>
        <reimplements refid="class_game_1_1_abstract_game_1af46405f6383d00abaa8320ac49d88066">isSolved</reimplements>
        <param>
          <type>double</type>
          <declname>tol</declname>
          <defval>1e-5</defval>
        </param>
        <briefdescription>
<para>Return a bool true if the strategies are all pure, for any player. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="75" column="13" bodyfile="src/games/ipg.cpp" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_i_p_g_1ad66d221d1f3e15ec6b7cca5cdc5ef5aa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Game::IPG::isPureStrategy</definition>
        <argsstring>(double tol=1e-5) const override</argsstring>
        <name>isPureStrategy</name>
        <reimplements refid="class_game_1_1_abstract_game_1a4efc3116423b078421949dc18cfb3e32">isPureStrategy</reimplements>
        <param>
          <type>double</type>
          <declname>tol</declname>
          <defval>1e-5</defval>
        </param>
        <briefdescription>
<para>Return a bool indicating whether the equilibrium is a pure strategy. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="76" column="7" bodyfile="src/games/ipg.cpp" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_i_p_g_1a7804df943f87684d0f85bce02bc1995b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; GRBModel &gt;</type>
        <definition>std::unique_ptr&lt;GRBModel&gt; Game::IPG::respondModel</definition>
        <argsstring>(const unsigned int i, const arma::vec &amp;x) const</argsstring>
        <name>respondModel</name>
        <param>
          <type>const unsigned int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="79" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_i_p_g_1a0b7aa88f9e4b730c1ffdae30e07e5744" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; arma::vec &gt;</type>
        <definition>const std::vector&lt;arma::vec&gt; Game::IPG::getX</definition>
        <argsstring>() const</argsstring>
        <name>getX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="81" column="20" bodyfile="include/games/ipg.h" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_i_p_g_1a84d50a99870b84fb93840b46856c0b22" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_z_e_r_o_statistics" kindref="compound">ZEROStatistics</ref>&lt; <ref refid="class_data_1_1_i_p_g_1_1_data_object" kindref="compound">Data::IPG::DataObject</ref> &gt;</type>
        <definition>ZEROStatistics&lt;Data::IPG::DataObject&gt; Game::IPG::getStatistics</definition>
        <argsstring>() const</argsstring>
        <name>getStatistics</name>
        <briefdescription>
<para>Get the EPECStatistics object for the current instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="84" column="17" bodyfile="include/games/ipg.h" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_i_p_g_1ae76562a954b222a124b34052b6a0d5ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Game::IPG::setAlgorithm</definition>
        <argsstring>(Data::IPG::Algorithms algorithm)</argsstring>
        <name>setAlgorithm</name>
        <param>
          <type><ref refid="namespace_data_1_1_i_p_g_1a34d343f554ac089c3cb14de04aa6d294" kindref="member">Data::IPG::Algorithms</ref></type>
          <declname>algorithm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="86" column="7"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Game::IPG</label>
        <link refid="class_game_1_1_i_p_g"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Game::AbstractGame&lt; Data::IPG::DataObject &gt;</label>
        <link refid="class_game_1_1_abstract_game"/>
      </node>
      <node id="3">
        <label>Models::IPG::IPG</label>
        <link refid="class_models_1_1_i_p_g_1_1_i_p_g"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11">
        <label>Attr&lt; ZEROStatus &gt;</label>
        <link refid="class_attr"/>
      </node>
      <node id="8">
        <label>Attr&lt; int &gt;</label>
        <link refid="class_attr"/>
      </node>
      <node id="10">
        <label>Attr&lt; Data::IPG::Algorithms &gt;</label>
        <link refid="class_attr"/>
      </node>
      <node id="3">
        <label>ZEROStatistics&lt; Data::IPG::DataObject &gt;</label>
        <link refid="struct_z_e_r_o_statistics"/>
        <childnode refid="4" relation="usage">
          <edgelabel>WallClockTime</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>AlgorithmData</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>NumConstraints</edgelabel>
          <edgelabel>NumNonZero</edgelabel>
          <edgelabel>NumIterations</edgelabel>
          <edgelabel>NumVar</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>PureNashEquilibrium</edgelabel>
          <edgelabel>NumericalIssues</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>Status</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>Game::IPG</label>
        <link refid="class_game_1_1_i_p_g"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Data::IPG::DataObject</label>
        <link refid="class_data_1_1_i_p_g_1_1_data_object"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>Algorithm</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>Attr&lt; bool &gt;</label>
        <link refid="class_attr"/>
      </node>
      <node id="2">
        <label>Game::AbstractGame&lt; Data::IPG::DataObject &gt;</label>
        <link refid="class_game_1_1_abstract_game"/>
        <childnode refid="3" relation="usage">
          <edgelabel>Stats</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>Attr&lt; double &gt;</label>
        <link refid="class_attr"/>
      </node>
      <node id="6">
        <label>ZEROAlgorithmData</label>
        <link refid="class_z_e_r_o_algorithm_data"/>
        <childnode refid="4" relation="usage">
          <edgelabel>DeviationTolerance</edgelabel>
          <edgelabel>TimeLimit</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>RandomSeed</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>Threads</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>PureNashEquilibrium</edgelabel>
          <edgelabel>IndicatorConstraints</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>Attr&lt; unsigned long int &gt;</label>
        <link refid="class_attr"/>
      </node>
    </collaborationgraph>
    <location file="include/games/ipg.h" line="42" column="33" bodyfile="include/games/ipg.h" bodystart="42" bodyend="87"/>
    <listofallmembers>
      <member refid="class_game_1_1_abstract_game_1a994e78ea9cbe14be8786836082024e9a" prot="public" virt="non-virtual"><scope>Game::IPG</scope><name>AbstractGame</name></member>
      <member refid="class_game_1_1_abstract_game_1a112372b7b49c59c64538fa065fdbe54f" prot="public" virt="non-virtual"><scope>Game::IPG</scope><name>AbstractGame</name></member>
      <member refid="class_game_1_1_abstract_game_1a29232b09b7a9b7f61e5d04ce83fe8f1d" prot="public" virt="non-virtual"><scope>Game::IPG</scope><name>AbstractGame</name></member>
      <member refid="class_game_1_1_i_p_g_1aed0e301658da5321d151fad5f10db21b" prot="private" virt="non-virtual"><scope>Game::IPG</scope><name>Algorithm</name></member>
      <member refid="class_game_1_1_i_p_g_1aebd561777cc9e2b5149ebb7e1f6e1b0d" prot="public" virt="non-virtual"><scope>Game::IPG</scope><name>Algorithms::IPG::Algorithm</name></member>
      <member refid="class_game_1_1_i_p_g_1a84836887d30b770869453f4943bdbfe2" prot="public" virt="non-virtual"><scope>Game::IPG</scope><name>Algorithms::IPG::Oracle</name></member>
      <member refid="class_game_1_1_i_p_g_1ab3fa5c1de6f4089de6f130740a12e89c" prot="private" virt="non-virtual"><scope>Game::IPG</scope><name>computeNashEq</name></member>
      <member refid="class_game_1_1_abstract_game_1ad6cd844e2dcfbc9ce2b8069c6ef3e2be" prot="protected" virt="non-virtual"><scope>Game::IPG</scope><name>Env</name></member>
      <member refid="class_game_1_1_i_p_g_1a448677cf65ae15178c27da7ec294b5d3" prot="public" virt="non-virtual"><scope>Game::IPG</scope><name>finalize</name></member>
      <member refid="class_game_1_1_i_p_g_1ae0fcd4871cd997f56ca1796e13a43112" prot="protected" virt="non-virtual"><scope>Game::IPG</scope><name>Finalized</name></member>
      <member refid="class_game_1_1_i_p_g_1a1b2c4bee27025af5921780ca2a41fe28" prot="public" virt="virtual"><scope>Game::IPG</scope><name>findNashEq</name></member>
      <member refid="class_game_1_1_abstract_game_1a6a84032e333484d0313064cfee3ba46c" prot="public" virt="non-virtual"><scope>Game::IPG</scope><name>getNumPlayers</name></member>
      <member refid="class_game_1_1_abstract_game_1ad3f7c02e978d71834bc13b74162571f4" prot="public" virt="non-virtual"><scope>Game::IPG</scope><name>getNumVar</name></member>
      <member refid="class_game_1_1_i_p_g_1a84d50a99870b84fb93840b46856c0b22" prot="public" virt="non-virtual"><scope>Game::IPG</scope><name>getStatistics</name></member>
      <member refid="class_game_1_1_i_p_g_1a0b7aa88f9e4b730c1ffdae30e07e5744" prot="public" virt="non-virtual"><scope>Game::IPG</scope><name>getX</name></member>
      <member refid="class_game_1_1_i_p_g_1a7ea608210b56699c2a76da364b2214d6" prot="private" virt="non-virtual"><scope>Game::IPG</scope><name>getXMinusI</name></member>
      <member refid="class_game_1_1_i_p_g_1aec5449ea62ceaa82411c7d7a454f2b57" prot="private" virt="non-virtual"><scope>Game::IPG</scope><name>getXofI</name></member>
      <member refid="class_game_1_1_abstract_game_1a6d06c8b5fe1f191283a9926b30d6b1d0" prot="protected" virt="non-virtual"><scope>Game::IPG</scope><name>InitTime</name></member>
      <member refid="class_game_1_1_i_p_g_1a89b4c1e57b17bba4438541c3a488198e" prot="public" virt="non-virtual"><scope>Game::IPG</scope><name>IPG</name></member>
      <member refid="class_game_1_1_i_p_g_1aba1ab31c35f012e48e1a47fec318ad3e" prot="public" virt="non-virtual"><scope>Game::IPG</scope><name>IPG</name></member>
      <member refid="class_game_1_1_i_p_g_1ad66d221d1f3e15ec6b7cca5cdc5ef5aa" prot="public" virt="virtual"><scope>Game::IPG</scope><name>isPureStrategy</name></member>
      <member refid="class_game_1_1_i_p_g_1ad999f9085c75eed024e09b87b3b832b4" prot="public" virt="virtual"><scope>Game::IPG</scope><name>isSolved</name></member>
      <member refid="class_game_1_1_abstract_game_1ab8f814c2c71542d1aa73bd66ef93befc" prot="protected" virt="non-virtual"><scope>Game::IPG</scope><name>NashEquilibrium</name></member>
      <member refid="class_game_1_1_abstract_game_1a01da21edfe49ed5771a9eed714b87418" prot="protected" virt="non-virtual"><scope>Game::IPG</scope><name>NumPlayers</name></member>
      <member refid="class_game_1_1_abstract_game_1a2fd0ab6ee7cda7a9a582b79e94705bc7" prot="protected" virt="non-virtual"><scope>Game::IPG</scope><name>NumVariables</name></member>
      <member refid="class_game_1_1_i_p_g_1a3a939675fddeb5adda31e7c7be895e6c" prot="protected" virt="non-virtual"><scope>Game::IPG</scope><name>PlayersIP</name></member>
      <member refid="class_game_1_1_i_p_g_1a728a80ade416a2f36cd5a8833a0cf2ee" prot="protected" virt="non-virtual"><scope>Game::IPG</scope><name>PlayerVariables</name></member>
      <member refid="class_game_1_1_i_p_g_1a14cb516689f5fc0e43d1113647249847" prot="protected" virt="pure-virtual"><scope>Game::IPG</scope><name>postFinalize</name></member>
      <member refid="class_game_1_1_i_p_g_1acabbd4441f684af0f9ba5d3ee2e2c615" prot="protected" virt="pure-virtual"><scope>Game::IPG</scope><name>preFinalize</name></member>
      <member refid="class_game_1_1_i_p_g_1a7804df943f87684d0f85bce02bc1995b" prot="public" virt="non-virtual"><scope>Game::IPG</scope><name>respondModel</name></member>
      <member refid="class_game_1_1_i_p_g_1ae76562a954b222a124b34052b6a0d5ae" prot="public" virt="non-virtual"><scope>Game::IPG</scope><name>setAlgorithm</name></member>
      <member refid="class_game_1_1_abstract_game_1a4b5301f753b2f1dacdb354971d2511ee" prot="public" virt="non-virtual"><scope>Game::IPG</scope><name>setDeviationTolerance</name></member>
      <member refid="class_game_1_1_abstract_game_1af08964bd9ddff0910b3e3f7d4c91ba95" prot="public" virt="non-virtual"><scope>Game::IPG</scope><name>setIndicators</name></member>
      <member refid="class_game_1_1_abstract_game_1a8b891e54ad22f7364e8f164c37848aa8" prot="public" virt="non-virtual"><scope>Game::IPG</scope><name>setNumThreads</name></member>
      <member refid="class_game_1_1_abstract_game_1ab3f40775d56c9ca540961b99ce646960" prot="public" virt="non-virtual"><scope>Game::IPG</scope><name>setPureNashEquilibrium</name></member>
      <member refid="class_game_1_1_abstract_game_1a8f9d5a9d366c2604993c3e3df4e69b6a" prot="public" virt="non-virtual"><scope>Game::IPG</scope><name>setRandomSeed</name></member>
      <member refid="class_game_1_1_abstract_game_1a44346c2909132d7977b6fb4ac4852723" prot="public" virt="non-virtual"><scope>Game::IPG</scope><name>setTimeLimit</name></member>
      <member refid="class_game_1_1_i_p_g_1a81a4ccc616e5facf3ee599761bf3fc9a" prot="protected" virt="non-virtual"><scope>Game::IPG</scope><name>Solution</name></member>
      <member refid="class_game_1_1_abstract_game_1a5ecc6e6433baef6b13f35d7bb45856ce" prot="protected" virt="non-virtual"><scope>Game::IPG</scope><name>Stats</name></member>
      <member refid="class_game_1_1_abstract_game_1a1c50cfa3e8b728eebb8662ed184b206a" prot="public" virt="non-virtual"><scope>Game::IPG</scope><name>~AbstractGame</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
