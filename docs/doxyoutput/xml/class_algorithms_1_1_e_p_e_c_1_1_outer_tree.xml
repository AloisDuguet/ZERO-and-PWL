<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree" kind="class" language="C++" prot="public">
    <compoundname>Algorithms::EPEC::OuterTree</compoundname>
    <includes refid="epec__outerapproximation_8h" local="no">epec_outerapproximation.h</includes>
    <innerclass refid="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node" prot="public">Algorithms::EPEC::OuterTree::Node</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a6dafa9836ba225cd64efc84c8a2a44ea" prot="private" static="no" mutable="no">
        <type><ref refid="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node" kindref="compound">Node</ref></type>
        <definition>Node Algorithms::EPEC::OuterTree::Root</definition>
        <argsstring></argsstring>
        <name>Root</name>
        <initializer>= <ref refid="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node" kindref="compound">Node</ref>(0)</initializer>
        <briefdescription>
<para>The root node of the tree. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="61" column="14" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1acc6ae51ee98e21b58808b7bc536cb0ba" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Algorithms::EPEC::OuterTree::EncodingSize</definition>
        <argsstring></argsstring>
        <name>EncodingSize</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>number of complementarity equations </para>
        </briefdescription>
        <detaileddescription>
<para>The size of the encoding, namely the </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="62" column="14" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a4e2e3020f620a2aec15b81121623bfd2" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Algorithms::EPEC::OuterTree::NodeCounter</definition>
        <argsstring></argsstring>
        <name>NodeCounter</name>
        <initializer>= 1</initializer>
        <briefdescription>
<para>The counter for node ids. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="64" column="19" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a5fbf30100832b1f1469c18eef23502ba" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node" kindref="compound">Node</ref> &gt;</type>
        <definition>std::vector&lt;Node&gt; Algorithms::EPEC::OuterTree::Nodes</definition>
        <argsstring></argsstring>
        <name>Nodes</name>
        <initializer>{}</initializer>
        <briefdescription>
<para>Storage of nodes in the tree. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="65" column="13" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a52c8cfb47fec23b4d0d28ebdc4329001" prot="private" static="no" mutable="no">
        <type>arma::sp_mat</type>
        <definition>arma::sp_mat Algorithms::EPEC::OuterTree::V</definition>
        <argsstring></argsstring>
        <name>V</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This object stores points that are inside the feasible region of the respective leader. Thesee are used to derive valid cuts, or certify that an equilibrium is inside (outside) the convex-hull of the feasible region. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="66" column="19" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a8515614ef3e61061f2baba3aa8c61e14" prot="private" static="no" mutable="no">
        <type>arma::sp_mat</type>
        <definition>arma::sp_mat Algorithms::EPEC::OuterTree::R</definition>
        <argsstring></argsstring>
        <name>R</name>
        <initializer>{}</initializer>
        <briefdescription>
<para>As in V, but instead of vertices, this object contains rays. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="70" column="14" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1ac64343e5298f6cf3710126158f63e94f" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Algorithms::EPEC::OuterTree::VertexCounter</definition>
        <argsstring></argsstring>
        <name>VertexCounter</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>The counter for node ids. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="71" column="14" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1ae1de66800e983880fe1cfe422f77bff7" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Algorithms::EPEC::OuterTree::RayCounter</definition>
        <argsstring></argsstring>
        <name>RayCounter</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>The counter for node ids. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="72" column="14" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a617209624cf00544964baaca2a4b5ce3" prot="private" static="no" mutable="no">
        <type>GRBModel *</type>
        <definition>GRBModel* Algorithms::EPEC::OuterTree::MembershipLP</definition>
        <argsstring></argsstring>
        <name>MembershipLP</name>
        <briefdescription>
<para>with the vertices in V </para>
        </briefdescription>
        <detaileddescription>
<para>This member stores the membership LP associated </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="73" column="13" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1ad7da8a8769b39b4f8c8aa2f5ec13ebab" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Algorithms::EPEC::OuterTree::MembershipInit</definition>
        <argsstring></argsstring>
        <name>MembershipInit</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="75" column="6" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1ac0a409408dc27aab47cd057f29d3384b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Algorithms::EPEC::OuterTree::isPure</definition>
        <argsstring></argsstring>
        <name>isPure</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="76" column="6" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a0e3f528da7c28f362a24e3458e6dca03" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Algorithms::EPEC::OuterTree::isFeasible</definition>
        <argsstring></argsstring>
        <name>isFeasible</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="77" column="6" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a448ecf43fd2cce8e03601159dcb56445" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int Algorithms::EPEC::OuterTree::nextIdentifier</definition>
        <argsstring>()</argsstring>
        <name>nextIdentifier</name>
        <briefdescription>
<para>Increments the node counter and get the id of the new node. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="79" column="14" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a1f98c3bc8310acefc0dbc8ee3d4f535e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Algorithms::EPEC::OuterTree::OuterTree</definition>
        <argsstring>(unsigned int encSize, GRBEnv *env)</argsstring>
        <name>OuterTree</name>
        <param>
          <type>unsigned int</type>
          <declname>encSize</declname>
        </param>
        <param>
          <type>GRBEnv *</type>
          <declname>env</declname>
        </param>
        <briefdescription>
<para>Constructor of the Tree given the encoding size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="85" column="1" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="85" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a78b318a692cb7e87d5e0cde48235c04c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>GRBModel *</type>
        <definition>GRBModel* Algorithms::EPEC::OuterTree::getMembershipLP</definition>
        <argsstring>()</argsstring>
        <name>getMembershipLP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="91" column="10" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1ab09c71f946d082ba6dd9a682667b0a3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const bool</type>
        <definition>const bool Algorithms::EPEC::OuterTree::getMembershipInit</definition>
        <argsstring>()</argsstring>
        <name>getMembershipInit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="93" column="12" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a3365af8e6543f7c84e96bf687b87380c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Algorithms::EPEC::OuterTree::setMembershipInit</definition>
        <argsstring>()</argsstring>
        <name>setMembershipInit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="95" column="13" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1ab042e5e576e3e36126ea2fada5793203" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Algorithms::EPEC::OuterTree::resetFeasibility</definition>
        <argsstring>()</argsstring>
        <name>resetFeasibility</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="97" column="13" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="97" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1abc38eb3539e40c988a44d20dc4dc7a7a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Algorithms::EPEC::OuterTree::getPure</definition>
        <argsstring>() const</argsstring>
        <name>getPure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="102" column="13" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="102" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1ab8f9d433168626ccfa0e16c797274409" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Algorithms::EPEC::OuterTree::setFeasible</definition>
        <argsstring>()</argsstring>
        <name>setFeasible</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="104" column="13" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1afdcb034e21cc2bb56b3faf7256005cef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Algorithms::EPEC::OuterTree::setPure</definition>
        <argsstring>()</argsstring>
        <name>setPure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="106" column="13" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1af6b43e57b655edf67c27aa64bdc60daa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const unsigned int</type>
        <definition>const unsigned int Algorithms::EPEC::OuterTree::getEncodingSize</definition>
        <argsstring>()</argsstring>
        <name>getEncodingSize</name>
        <briefdescription>
<para>Getter for the encoding size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="108" column="27" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a0cd344e6e7e3cd36f675b1bc2a8029be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const arma::sp_mat *</type>
        <definition>const arma::sp_mat* Algorithms::EPEC::OuterTree::getV</definition>
        <argsstring>()</argsstring>
        <name>getV</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="112" column="27" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="112" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a937b54a35f9938fed119b518ea0ec6fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const arma::sp_mat *</type>
        <definition>const arma::sp_mat* Algorithms::EPEC::OuterTree::getR</definition>
        <argsstring>()</argsstring>
        <name>getR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="114" column="27" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="114" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1ae89b4e6491ba1ba3aa4b6a08b2891bea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Algorithms::EPEC::OuterTree::incrementVertices</definition>
        <argsstring>(unsigned int increment)</argsstring>
        <name>incrementVertices</name>
        <param>
          <type>unsigned int</type>
          <declname>increment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="116" column="6" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1ad04a49fb0fc517728048e21da591e34e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Algorithms::EPEC::OuterTree::incrementRays</definition>
        <argsstring>(unsigned int increment)</argsstring>
        <name>incrementRays</name>
        <param>
          <type>unsigned int</type>
          <declname>increment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="117" column="6" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a022edd21f8df8e14e877382a59979334" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const unsigned int</type>
        <definition>const unsigned int Algorithms::EPEC::OuterTree::getVertexCount</definition>
        <argsstring>()</argsstring>
        <name>getVertexCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="119" column="27" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1acbf26730c7f0743b535463a59a5ab24e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const unsigned int</type>
        <definition>const unsigned int Algorithms::EPEC::OuterTree::getRayCount</definition>
        <argsstring>()</argsstring>
        <name>getRayCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="120" column="27" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1ad54a708e3290968a2f6ea1359bfdb212" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const unsigned int</type>
        <definition>const unsigned int Algorithms::EPEC::OuterTree::getNodeCount</definition>
        <argsstring>()</argsstring>
        <name>getNodeCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="122" column="27" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1afc7a73d98b133eba01b7d54bf4e600d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Algorithms::EPEC::OuterTree::addVertex</definition>
        <argsstring>(arma::vec vertex)</argsstring>
        <name>addVertex</name>
        <param>
          <type>arma::vec</type>
          <declname>vertex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="124" column="13" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="124" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a950f0b78237b3b4a359d0d49a9eb6d79" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Algorithms::EPEC::OuterTree::addRay</definition>
        <argsstring>(arma::vec ray)</argsstring>
        <name>addRay</name>
        <param>
          <type>arma::vec</type>
          <declname>ray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="128" column="13" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="128" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1ab4d052139d256e97558edc5704bbcfe5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node" kindref="compound">Node</ref> *const</type>
        <definition>Node* const Algorithms::EPEC::OuterTree::getRoot</definition>
        <argsstring>()</argsstring>
        <name>getRoot</name>
        <briefdescription>
<para>Getter for the root node. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="132" column="19" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a0ca19aa9cbe4763f8e73aa4a388102bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node" kindref="compound">Node</ref> &gt; *</type>
        <definition>std::vector&lt;Node&gt;* Algorithms::EPEC::OuterTree::getNodes</definition>
        <argsstring>()</argsstring>
        <name>getNodes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="134" column="20" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1ae7e7f52fd1ef4b18898a4b6ee8f285ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Algorithms::EPEC::OuterTree::denyBranchingLocation</definition>
        <argsstring>(Node &amp;node, const unsigned int &amp;location)</argsstring>
        <name>denyBranchingLocation</name>
        <param>
          <type><ref refid="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node" kindref="compound">Node</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const unsigned int &amp;</type>
          <declname>location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>If a complementarity equation<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>location</parametername>
</parameternamelist>
<parameterdescription>
<para>has proven to be infeasible or it isn&apos;t a candidate for branching, this method prevents any further branching on it for the node</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node.</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="136" column="6" bodyfile="src/algorithms/EPEC/epec_outerapproximation.cpp" bodystart="893" bodyend="906"/>
      </memberdef>
      <memberdef kind="function" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a8830ee45b70997499b7a89ce63f41cc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Algorithms::EPEC::OuterTree::denyBranchingLocations</definition>
        <argsstring>(Node &amp;node, const std::vector&lt; int &gt; &amp;locations)</argsstring>
        <name>denyBranchingLocations</name>
        <param>
          <type><ref refid="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node" kindref="compound">Node</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>locations</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>If a complementarity equation<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>location</parametername>
</parameternamelist>
<parameterdescription>
<para>has proven to be infeasible or it isn&apos;t a candidate for branching, this method prevents any further branching on it for the node</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node.</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="137" column="6" bodyfile="src/algorithms/EPEC/epec_outerapproximation.cpp" bodystart="908" bodyend="920"/>
      </memberdef>
      <memberdef kind="function" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a8acded03aa0b15cfa714a74ed3018cb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; long int &gt;</type>
        <definition>std::vector&lt; long int &gt; Algorithms::EPEC::OuterTree::singleBranch</definition>
        <argsstring>(const unsigned int idComp, Node &amp;t)</argsstring>
        <name>singleBranch</name>
        <param>
          <type>const unsigned int</type>
          <declname>idComp</declname>
        </param>
        <param>
          <type><ref refid="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node" kindref="compound">Node</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Given the<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idComp</parametername>
</parameternamelist>
<parameterdescription>
<para>and the parent node</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
<parametername>creates</parametername>
</parameternamelist>
<parameterdescription>
<para>a single child by branching on</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idComp.</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="139" column="13" bodyfile="src/algorithms/EPEC/epec_outerapproximation.cpp" bodystart="923" bodyend="941"/>
      </memberdef>
      <memberdef kind="function" id="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a0d152a388b593a4011ccaaee8881a2d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; long int &gt;</type>
        <definition>std::vector&lt; long int &gt; Algorithms::EPEC::OuterTree::multipleBranch</definition>
        <argsstring>(const std::vector&lt; int &gt; idsComp, Node &amp;t)</argsstring>
        <name>multipleBranch</name>
        <param>
          <type>const std::vector&lt; int &gt;</type>
          <declname>idsComp</declname>
        </param>
        <param>
          <type><ref refid="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node" kindref="compound">Node</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Given the<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idComp</parametername>
</parameternamelist>
<parameterdescription>
<para>and the parent node</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
<parametername>creates</parametername>
</parameternamelist>
<parameterdescription>
<para>a single child by branching on</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idComp.</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="141" column="13" bodyfile="src/algorithms/EPEC/epec_outerapproximation.cpp" bodystart="943" bodyend="963"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>Algorithms::EPEC::OuterTree</label>
        <link refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree"/>
        <childnode refid="2" relation="usage">
          <edgelabel>Root</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>Algorithms::EPEC::OuterTree::Node</label>
        <link refid="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node"/>
        <childnode refid="2" relation="usage">
          <edgelabel>Parent</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="15" column="17" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="15" bodyend="142"/>
    <listofallmembers>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a950f0b78237b3b4a359d0d49a9eb6d79" prot="public" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>addRay</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1afc7a73d98b133eba01b7d54bf4e600d1" prot="public" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>addVertex</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1ae7e7f52fd1ef4b18898a4b6ee8f285ea" prot="public" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>denyBranchingLocation</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a8830ee45b70997499b7a89ce63f41cc4" prot="public" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>denyBranchingLocations</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1acc6ae51ee98e21b58808b7bc536cb0ba" prot="private" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>EncodingSize</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1af6b43e57b655edf67c27aa64bdc60daa" prot="public" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>getEncodingSize</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1ab09c71f946d082ba6dd9a682667b0a3a" prot="public" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>getMembershipInit</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a78b318a692cb7e87d5e0cde48235c04c" prot="public" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>getMembershipLP</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1ad54a708e3290968a2f6ea1359bfdb212" prot="public" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>getNodeCount</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a0ca19aa9cbe4763f8e73aa4a388102bb" prot="public" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>getNodes</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1abc38eb3539e40c988a44d20dc4dc7a7a" prot="public" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>getPure</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a937b54a35f9938fed119b518ea0ec6fe" prot="public" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>getR</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1acbf26730c7f0743b535463a59a5ab24e" prot="public" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>getRayCount</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1ab4d052139d256e97558edc5704bbcfe5" prot="public" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>getRoot</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a0cd344e6e7e3cd36f675b1bc2a8029be" prot="public" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>getV</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a022edd21f8df8e14e877382a59979334" prot="public" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>getVertexCount</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1ad04a49fb0fc517728048e21da591e34e" prot="public" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>incrementRays</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1ae89b4e6491ba1ba3aa4b6a08b2891bea" prot="public" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>incrementVertices</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a0e3f528da7c28f362a24e3458e6dca03" prot="private" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>isFeasible</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1ac0a409408dc27aab47cd057f29d3384b" prot="private" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>isPure</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1ad7da8a8769b39b4f8c8aa2f5ec13ebab" prot="private" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>MembershipInit</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a617209624cf00544964baaca2a4b5ce3" prot="private" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>MembershipLP</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a0d152a388b593a4011ccaaee8881a2d0" prot="public" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>multipleBranch</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a448ecf43fd2cce8e03601159dcb56445" prot="private" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>nextIdentifier</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a4e2e3020f620a2aec15b81121623bfd2" prot="private" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>NodeCounter</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a5fbf30100832b1f1469c18eef23502ba" prot="private" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>Nodes</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a1f98c3bc8310acefc0dbc8ee3d4f535e" prot="public" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>OuterTree</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a8515614ef3e61061f2baba3aa8c61e14" prot="private" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>R</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1ae1de66800e983880fe1cfe422f77bff7" prot="private" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>RayCounter</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1ab042e5e576e3e36126ea2fada5793203" prot="public" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>resetFeasibility</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a6dafa9836ba225cd64efc84c8a2a44ea" prot="private" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>Root</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1ab8f9d433168626ccfa0e16c797274409" prot="public" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>setFeasible</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a3365af8e6543f7c84e96bf687b87380c" prot="public" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>setMembershipInit</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1afdcb034e21cc2bb56b3faf7256005cef" prot="public" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>setPure</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a8acded03aa0b15cfa714a74ed3018cb2" prot="public" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>singleBranch</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1a52c8cfb47fec23b4d0d28ebdc4329001" prot="private" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>V</name></member>
      <member refid="class_algorithms_1_1_e_p_e_c_1_1_outer_tree_1ac64343e5298f6cf3710126158f63e94f" prot="private" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree</scope><name>VertexCounter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
