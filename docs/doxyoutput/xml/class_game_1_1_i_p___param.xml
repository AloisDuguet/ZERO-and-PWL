<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="class_game_1_1_i_p___param" kind="class" language="C++" prot="public">
    <compoundname>Game::IP_Param</compoundname>
    <basecompoundref refid="class_game_1_1_m_p___param" prot="public" virt="non-virtual">Game::MP_Param</basecompoundref>
    <includes refid="ipg_8h" local="no">ipg.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_game_1_1_i_p___param_1afc6816cad3450d94f18dfb4d29d3d91c" prot="private" static="no" mutable="no">
        <type>GRBEnv *</type>
        <definition>GRBEnv* Game::IP_Param::Env</definition>
        <argsstring></argsstring>
        <name>Env</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="29" column="18" bodyfile="include/games/ipg.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_game_1_1_i_p___param_1ab350d5b25881473e58f382afa4451faf" prot="private" static="no" mutable="no">
        <type>GRBModel</type>
        <definition>GRBModel Game::IP_Param::IPModel</definition>
        <argsstring></argsstring>
        <name>IPModel</name>
        <briefdescription>
<para>Stores the IP model associated with the object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="30" column="19" bodyfile="include/games/ipg.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_game_1_1_i_p___param_1ae69f427daafdadccfd11a1f769038dc2" prot="private" static="no" mutable="no">
        <type>arma::vec</type>
        <definition>arma::vec Game::IP_Param::bounds</definition>
        <argsstring></argsstring>
        <name>bounds</name>
        <briefdescription>
<para>Stores the explicit bounds on variables. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="31" column="19" bodyfile="include/games/ipg.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_game_1_1_i_p___param_1a3b8e2133a9eb621c48c1dc8e1d5164ad" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; Game::IP_Param::integers</definition>
        <argsstring></argsstring>
        <name>integers</name>
        <briefdescription>
<para>Stores the indexes of integer variables. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="32" column="14" bodyfile="include/games/ipg.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_game_1_1_i_p___param_1ad2a53db91304aad8942edbc0e18d410c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Game::IP_Param::madeModel</definition>
        <argsstring></argsstring>
        <name>madeModel</name>
        <initializer>{false}</initializer>
        <briefdescription>
<para>True if the model has been made. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="33" column="19" bodyfile="include/games/ipg.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_game_1_1_i_p___param_1ad710e7e048db05e226b431f31806e264" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Game::IP_Param::IP_Param</definition>
        <argsstring>(GRBEnv *env=nullptr)</argsstring>
        <name>IP_Param</name>
        <param>
          <type>GRBEnv *</type>
          <declname>env</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Initialize only the size. Everything else is empty (can be updated later) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="41" column="11" bodyfile="include/games/ipg.h" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_i_p___param_1ae4ee8d18baa66ad6f7c2282ec74ba223" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Game::IP_Param::IP_Param</definition>
        <argsstring>(arma::sp_mat C, arma::sp_mat B, arma::vec b, arma::vec c, arma::vec bounds, std::vector&lt; int &gt; integers, GRBEnv *env=nullptr)</argsstring>
        <name>IP_Param</name>
        <param>
          <type>arma::sp_mat</type>
          <declname>C</declname>
        </param>
        <param>
          <type>arma::sp_mat</type>
          <declname>B</declname>
        </param>
        <param>
          <type>arma::vec</type>
          <declname>b</declname>
        </param>
        <param>
          <type>arma::vec</type>
          <declname>c</declname>
        </param>
        <param>
          <type>arma::vec</type>
          <declname>bounds</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt;</type>
          <declname>integers</declname>
        </param>
        <param>
          <type>GRBEnv *</type>
          <declname>env</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Set data at construct time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>This provides a high level constructor for a parametrized integer program <computeroutput>B</computeroutput> and <computeroutput>b</computeroutput> builds up the constraints, <computeroutput>c</computeroutput> and <computeroutput>C</computeroutput> are the vector and matrix in the objective function, while <computeroutput>bounds</computeroutput> contains the explicit bounds on the variables. The object <computeroutput>integers</computeroutput> contains the indexes of integer variables. The notation difers from the one of an <ref refid="class_game_1_1_m_p___param" kindref="compound">MP_Param</ref>. Q,A from <ref refid="class_game_1_1_m_p___param" kindref="compound">MP_Param</ref> are empty objects</para>
        </inbodydescription>
        <location file="include/games/ipg.h" line="44" column="11" bodyfile="include/games/ipg.h" bodystart="44" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_i_p___param_1af03bb090c6c553fdac3f299b7958a452" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; Game::IP_Param::getIntegers</definition>
        <argsstring>() const</argsstring>
        <name>getIntegers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="71" column="14" bodyfile="include/games/ipg.h" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_i_p___param_1a53055361adaee922a797fc90d9ce247a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>arma::vec</type>
        <definition>arma::vec Game::IP_Param::getBounds</definition>
        <argsstring>() const</argsstring>
        <name>getBounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="72" column="19" bodyfile="include/games/ipg.h" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_i_p___param_1a990ad2af9bc94af6e8662fedc84ba83c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Game::IP_Param::makeModel</definition>
        <argsstring>()</argsstring>
        <name>makeModel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>This method creates the (mixed)-integer program for the game, where the objective omits the bilinear part.</para>
        </inbodydescription>
        <location file="include/games/ipg.h" line="73" column="19" bodyfile="src/games/ipg.cpp" bodystart="21" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_i_p___param_1a28b141637cb670fb51f330dcd3f67d37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Game::IP_Param::addConstraints</definition>
        <argsstring>(const arma::sp_mat A, const arma::vec b)</argsstring>
        <name>addConstraints</name>
        <param>
          <type>const arma::sp_mat</type>
          <declname>A</declname>
          <briefdescription><para>The LHSs of the added cuts </para>
</briefdescription>
        </param>
        <param>
          <type>const arma::vec</type>
          <declname>b</declname>
          <briefdescription><para>The RHSs of the added cuts </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>This method stores a description of the new cuts of <computeroutput>Ain</computeroutput> (and RHS <computeroutput>bin</computeroutput>) in B and b, respectively</para>
        </inbodydescription>
        <location file="include/games/ipg.h" line="74" column="19" bodyfile="src/games/ipg.cpp" bodystart="185" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_i_p___param_1ab308072a2b83eba38823d1a9cfcbb6a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Game::IP_Param::IP_Param</definition>
        <argsstring>(const IP_Param &amp;ipg)</argsstring>
        <name>IP_Param</name>
        <param>
          <type>const <ref refid="class_game_1_1_i_p___param" kindref="compound">IP_Param</ref> &amp;</type>
          <declname>ipg</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="77" column="2" bodyfile="include/games/ipg.h" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_i_p___param_1a93830476669f3c32cf5110d922c848bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_game_1_1_i_p___param" kindref="compound">IP_Param</ref> &amp;</type>
        <definition>Game::IP_Param &amp; Game::IP_Param::set</definition>
        <argsstring>(const arma::sp_mat &amp;C, const arma::sp_mat &amp;B, const arma::vec &amp;b, const arma::vec &amp;c, const arma::vec &amp;bounds, const std::vector&lt; int &gt; &amp;integers)</argsstring>
        <name>set</name>
        <param>
          <type>const arma::sp_mat &amp;</type>
          <declname>C</declname>
        </param>
        <param>
          <type>const arma::sp_mat &amp;</type>
          <declname>B</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>bounds</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>integers</declname>
        </param>
        <briefdescription>
<para>Setting the data, while keeping the input objects intact. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="83" column="11" bodyfile="src/games/ipg.cpp" bodystart="101" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_i_p___param_1a4ea31e1116d154a29c2938e8c649e13c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_game_1_1_i_p___param" kindref="compound">IP_Param</ref> &amp;</type>
        <definition>Game::IP_Param &amp; Game::IP_Param::set</definition>
        <argsstring>(arma::sp_mat &amp;C, arma::sp_mat &amp;&amp;B, arma::vec &amp;&amp;b, arma::vec &amp;&amp;c, arma::vec &amp;&amp;bounds, std::vector&lt; int &gt; &amp;&amp;integers)</argsstring>
        <name>set</name>
        <param>
          <type>arma::sp_mat &amp;</type>
          <declname>C</declname>
        </param>
        <param>
          <type>arma::sp_mat &amp;&amp;</type>
          <declname>B</declname>
        </param>
        <param>
          <type>arma::vec &amp;&amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>arma::vec &amp;&amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>arma::vec &amp;&amp;</type>
          <declname>bounds</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; &amp;&amp;</type>
          <declname>integers</declname>
        </param>
        <briefdescription>
<para>Faster means to set data. But the input objects might be corrupted now. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="89" column="11" bodyfile="src/games/ipg.cpp" bodystart="114" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_i_p___param_1a14166f25a9e6bc6efe69ad9592fb44ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_game_1_1_i_p___param" kindref="compound">IP_Param</ref> &amp;</type>
        <definition>Game::IP_Param &amp; Game::IP_Param::set</definition>
        <argsstring>(const QP_Objective &amp;obj, const QP_Constraints &amp;cons, const arma::vec &amp;bounds={}, const std::vector&lt; int &gt; &amp;integers={})</argsstring>
        <name>set</name>
        <param>
          <type>const <ref refid="struct_game_1_1_q_p___objective" kindref="compound">QP_Objective</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const <ref refid="struct_game_1_1_q_p___constraints" kindref="compound">QP_Constraints</ref> &amp;</type>
          <declname>cons</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>bounds</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>integers</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="96" column="11" bodyfile="src/games/ipg.cpp" bodystart="136" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_i_p___param_1afbec7b4bbb15bd16298eb80fd65f9747" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_game_1_1_i_p___param" kindref="compound">IP_Param</ref> &amp;</type>
        <definition>Game::IP_Param &amp; Game::IP_Param::set</definition>
        <argsstring>(QP_Objective &amp;&amp;obj, QP_Constraints &amp;&amp;cons, arma::vec &amp;&amp;bounds={}, std::vector&lt; int &gt; &amp;&amp;integers={})</argsstring>
        <name>set</name>
        <param>
          <type><ref refid="struct_game_1_1_q_p___objective" kindref="compound">QP_Objective</ref> &amp;&amp;</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="struct_game_1_1_q_p___constraints" kindref="compound">QP_Constraints</ref> &amp;&amp;</type>
          <declname>cons</declname>
        </param>
        <param>
          <type>arma::vec &amp;&amp;</type>
          <declname>bounds</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>std::vector&lt; int &gt; &amp;&amp;</type>
          <declname>integers</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setting the data with the inputs being a struct <ref refid="struct_game_1_1_q_p___objective" kindref="compound">Game::QP_Objective</ref> and struct <ref refid="struct_game_1_1_q_p___constraints" kindref="compound">Game::QP_Constraints</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="100" column="11" bodyfile="src/games/ipg.cpp" bodystart="123" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_i_p___param_1a922cfe6dcf78da845462aafaf72e0083" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Game::IP_Param::operator==</definition>
        <argsstring>(const IP_Param &amp;IPG2) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_game_1_1_i_p___param" kindref="compound">IP_Param</ref> &amp;</type>
          <declname>IPG2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="105" column="7" bodyfile="src/games/ipg.cpp" bodystart="7" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_i_p___param_1a170e9bf8ae4eebe9397d01887c517582" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; GRBModel &gt;</type>
        <definition>std::unique_ptr&lt; GRBModel &gt; Game::IP_Param::solveFixed</definition>
        <argsstring>(arma::vec x, bool solve)</argsstring>
        <name>solveFixed</name>
        <param>
          <type>arma::vec</type>
          <declname>x</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>solve</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Given a value for the parameters <formula id="7">$x$</formula> in the definition of <ref refid="class_game_1_1_i_p___param" kindref="compound">IP_Param</ref>, solve the parameterized MIP program to optimality.</para>
<para>In terms of game theory, this can be viewed as <emphasis>the best response</emphasis> for a set of decisions by other players. <computeroutput>solve</computeroutput> decides whether the model has to be optimized or not </para>
        </detaileddescription>
        <inbodydescription>
<para>compatible with the <ref refid="class_game_1_1_i_p___param" kindref="compound">Game::IP_Param</ref> definition.</para>
        </inbodydescription>
        <location file="include/games/ipg.h" line="107" column="18" bodyfile="src/games/ipg.cpp" bodystart="55" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_i_p___param_1a516b956199b99813297debbaac5442f4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Game::IP_Param::computeObjective</definition>
        <argsstring>(const arma::vec &amp;y, const arma::vec &amp;x, bool checkFeas=true, double tol=1e-6) const</argsstring>
        <name>computeObjective</name>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>checkFeas</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>double</type>
          <declname>tol</declname>
          <defval>1e-6</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computes the objective value, given a vector <computeroutput>y</computeroutput> and a parameterizing vector <computeroutput>x</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
<para>Computes <formula id="9">$(Cx)^Ty + c^Ty$</formula> given the input values <computeroutput>y</computeroutput> and <computeroutput>x</computeroutput>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>checkFeas</parametername>
</parameternamelist>
<parameterdescription>
<para>if <computeroutput>true</computeroutput>, checks if the given <formula id="10">$(x,y)$</formula> satisfies the constraints of the problem, namely <formula id="11">$Ax + By \leq b$</formula>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </inbodydescription>
        <location file="include/games/ipg.h" line="111" column="9" bodyfile="src/games/ipg.cpp" bodystart="151" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_i_p___param_1a9b8b7c1cec87693da7d99508d4f4cfa3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Game::IP_Param::isPlayable</definition>
        <argsstring>(const IP_Param &amp;P) const</argsstring>
        <name>isPlayable</name>
        <param>
          <type>const <ref refid="class_game_1_1_i_p___param" kindref="compound">IP_Param</ref> &amp;</type>
          <declname>P</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks if the current object can play a game with another <ref refid="class_game_1_1_i_p___param" kindref="compound">Game::IP_Param</ref> object <computeroutput>P</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="116" column="14" bodyfile="include/games/ipg.h" bodystart="116" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_i_p___param_1a567edec8068732bc7447a02490f98b1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_game_1_1_i_p___param" kindref="compound">IP_Param</ref> &amp;</type>
        <definition>Game::IP_Param &amp; Game::IP_Param::addDummy</definition>
        <argsstring>(unsigned int pars, unsigned int vars=0, int position=-1) override</argsstring>
        <name>addDummy</name>
        <reimplements refid="class_game_1_1_m_p___param_1adf8d38d835f6cb716b7ea661d2fd4a7d">addDummy</reimplements>
        <param>
          <type>unsigned int</type>
          <declname>pars</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>vars</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>position</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds dummy variables to a parameterized mathematical program <computeroutput>position</computeroutput> dictates the position at which the parameters can be added. -1 for adding at the end. <simplesect kind="warning"><para><computeroutput>position</computeroutput> cannot be set for <computeroutput>vars</computeroutput>. <computeroutput>vars</computeroutput> always added at the end. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="127" column="11" bodyfile="src/games/ipg.cpp" bodystart="94" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_i_p___param_1a386613a0547b8b1ab08524471394cd75" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Game::IP_Param::write</definition>
        <argsstring>(const std::string &amp;filename, bool append) const override</argsstring>
        <name>write</name>
        <reimplements refid="class_game_1_1_m_p___param_1a21a9898b1fbebb1fbece40995aa7e9d6">write</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>append</declname>
        </param>
        <briefdescription>
<para>Writes a given parameterized Mathematical program to a set of files. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="131" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_i_p___param_1aefe2c5f7d30212248f97dc1cef150178" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Game::IP_Param::computeObjectiveWithoutOthers</definition>
        <argsstring>(const arma::vec &amp;y) const</argsstring>
        <name>computeObjectiveWithoutOthers</name>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Computes <formula id="12">$c^Ty $</formula> given the input values <computeroutput>y</computeroutput>;</para>
        </inbodydescription>
        <location file="include/games/ipg.h" line="133" column="12" bodyfile="src/games/ipg.cpp" bodystart="176" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_i_p___param_1a7244cefbe65e5e0220e1a5924ea6cbcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>arma::vec</type>
        <definition>arma::vec Game::IP_Param::getConstraintViolations</definition>
        <argsstring>(const arma::vec y, double tol)</argsstring>
        <name>getConstraintViolations</name>
        <param>
          <type>const arma::vec</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="134" column="12" bodyfile="src/games/ipg.cpp" bodystart="141" bodyend="149"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_game_1_1_i_p___param_1a97d7a955cb93ff14144bdce152e906b6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_game_1_1_m_p___param" kindref="compound">MP_Param</ref> &amp;</type>
        <definition>Game::MP_Param &amp; Game::MP_Param::set</definition>
        <argsstring>(const arma::sp_mat &amp;Q, const arma::sp_mat &amp;C, const arma::sp_mat &amp;A, const arma::sp_mat &amp;B, const arma::vec &amp;c, const arma::vec &amp;b)</argsstring>
        <name>set</name>
        <briefdescription>
<para>Setting the data, while keeping the input objects intact. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="37" column="2" bodyfile="src/games/qpmp.cpp" bodystart="140" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_i_p___param_1a4ba89f81adc04cf5e21478f8a7f7748f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_game_1_1_m_p___param" kindref="compound">MP_Param</ref> &amp;</type>
        <definition>Game::MP_Param &amp; Game::MP_Param::set</definition>
        <argsstring>(arma::sp_mat &amp;&amp;Q, arma::sp_mat &amp;&amp;C, arma::sp_mat &amp;&amp;A, arma::sp_mat &amp;&amp;B, arma::vec &amp;&amp;c, arma::vec &amp;&amp;b)</argsstring>
        <name>set</name>
        <briefdescription>
<para>Faster means to set data. But the input objects might be corrupted now. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="37" column="2" bodyfile="src/games/qpmp.cpp" bodystart="156" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_i_p___param_1aca00f56e28145a26a763a8ea0b90b2f3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_game_1_1_m_p___param" kindref="compound">MP_Param</ref> &amp;</type>
        <definition>Game::MP_Param &amp; Game::MP_Param::set</definition>
        <argsstring>(const QP_Objective &amp;obj, const QP_Constraints &amp;cons)</argsstring>
        <name>set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="37" column="2" bodyfile="src/games/qpmp.cpp" bodystart="171" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_i_p___param_1a068537c1f3d09c882d6d797e45bdc8e1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_game_1_1_m_p___param" kindref="compound">MP_Param</ref> &amp;</type>
        <definition>Game::MP_Param &amp; Game::MP_Param::set</definition>
        <argsstring>(QP_Objective &amp;&amp;obj, QP_Constraints &amp;&amp;cons)</argsstring>
        <name>set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/ipg.h" line="37" column="2" bodyfile="src/games/qpmp.cpp" bodystart="175" bodyend="177"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class to handle parameterized Integer Programming Games. </para>
    </briefdescription>
    <detaileddescription>
<para>Represents a Parameterized QP as <formula id="38">\[ \min_y c^Ty + (Cx)^T y \]</formula> Subject to <formula id="39">\begin{eqnarray} Ay &amp;\leq&amp; b \\ y &amp;\geq&amp; 0 y_i &amp;\in&amp; &amp;\mathbb{Z}&amp;^{z_i} &amp;\forall&amp; i &amp;\in&amp; I \end{eqnarray}</formula> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Game::MP_Param</label>
        <link refid="class_game_1_1_m_p___param"/>
      </node>
      <node id="1">
        <label>Game::IP_Param</label>
        <link refid="class_game_1_1_i_p___param"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Game::MP_Param</label>
        <link refid="class_game_1_1_m_p___param"/>
      </node>
      <node id="1">
        <label>Game::IP_Param</label>
        <link refid="class_game_1_1_i_p___param"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/games/ipg.h" line="26" column="1" bodyfile="include/games/ipg.h" bodystart="13" bodyend="135"/>
    <listofallmembers>
      <member refid="class_game_1_1_m_p___param_1aa0b31310fd4f138fe3e3771d2b077c3e" prot="protected" virt="non-virtual"><scope>Game::IP_Param</scope><name>A</name></member>
      <member refid="class_game_1_1_i_p___param_1a28b141637cb670fb51f330dcd3f67d37" prot="public" virt="non-virtual"><scope>Game::IP_Param</scope><name>addConstraints</name></member>
      <member refid="class_game_1_1_i_p___param_1a567edec8068732bc7447a02490f98b1e" prot="public" virt="virtual"><scope>Game::IP_Param</scope><name>addDummy</name></member>
      <member refid="class_game_1_1_m_p___param_1a3d517547d70f75e43060785fe66ad091" prot="protected" virt="non-virtual"><scope>Game::IP_Param</scope><name>B</name></member>
      <member refid="class_game_1_1_m_p___param_1a97fc7b4d0d1ef97e4115f0114bbfdfcc" prot="protected" virt="non-virtual"><scope>Game::IP_Param</scope><name>b</name></member>
      <member refid="class_game_1_1_i_p___param_1ae69f427daafdadccfd11a1f769038dc2" prot="private" virt="non-virtual"><scope>Game::IP_Param</scope><name>bounds</name></member>
      <member refid="class_game_1_1_m_p___param_1ab17ec9cd0030436cd5c443cfcfe08ad1" prot="protected" virt="non-virtual"><scope>Game::IP_Param</scope><name>C</name></member>
      <member refid="class_game_1_1_m_p___param_1ac0e65580b83e8e6441d6e964b515dff8" prot="protected" virt="non-virtual"><scope>Game::IP_Param</scope><name>c</name></member>
      <member refid="class_game_1_1_i_p___param_1a516b956199b99813297debbaac5442f4" prot="public" virt="non-virtual"><scope>Game::IP_Param</scope><name>computeObjective</name></member>
      <member refid="class_game_1_1_i_p___param_1aefe2c5f7d30212248f97dc1cef150178" prot="public" virt="non-virtual"><scope>Game::IP_Param</scope><name>computeObjectiveWithoutOthers</name></member>
      <member refid="class_game_1_1_m_p___param_1acb2f6575e0f7613303287d6966eacd61" prot="protected" virt="non-virtual"><scope>Game::IP_Param</scope><name>dataCheck</name></member>
      <member refid="class_game_1_1_m_p___param_1a83c92dfab0346ffbc2c8fb68267a4471" prot="public" virt="non-virtual"><scope>Game::IP_Param</scope><name>dataCheck</name></member>
      <member refid="class_game_1_1_i_p___param_1afc6816cad3450d94f18dfb4d29d3d91c" prot="private" virt="non-virtual"><scope>Game::IP_Param</scope><name>Env</name></member>
      <member refid="class_game_1_1_m_p___param_1ad99f19eae314bd3ca720d75d219167c3" prot="protected" virt="virtual"><scope>Game::IP_Param</scope><name>finalize</name></member>
      <member refid="class_game_1_1_m_p___param_1a40ef5cb837a54abc27ff415f01bbcce2" prot="public" virt="non-virtual"><scope>Game::IP_Param</scope><name>getA</name></member>
      <member refid="class_game_1_1_m_p___param_1a10c33b4453cbbfd1d9d1511a8db415b7" prot="public" virt="non-virtual"><scope>Game::IP_Param</scope><name>getB</name></member>
      <member refid="class_game_1_1_m_p___param_1a30d991dc4a735cc7ae66005d33fa74e5" prot="public" virt="non-virtual"><scope>Game::IP_Param</scope><name>getb</name></member>
      <member refid="class_game_1_1_i_p___param_1a53055361adaee922a797fc90d9ce247a" prot="public" virt="non-virtual"><scope>Game::IP_Param</scope><name>getBounds</name></member>
      <member refid="class_game_1_1_m_p___param_1af07f091c9b546357d5d90d67a87e340c" prot="public" virt="non-virtual"><scope>Game::IP_Param</scope><name>getC</name></member>
      <member refid="class_game_1_1_m_p___param_1a859e717089861c86bffe656f352b105e" prot="public" virt="non-virtual"><scope>Game::IP_Param</scope><name>getc</name></member>
      <member refid="class_game_1_1_i_p___param_1a7244cefbe65e5e0220e1a5924ea6cbcf" prot="public" virt="non-virtual"><scope>Game::IP_Param</scope><name>getConstraintViolations</name></member>
      <member refid="class_game_1_1_i_p___param_1af03bb090c6c553fdac3f299b7958a452" prot="public" virt="non-virtual"><scope>Game::IP_Param</scope><name>getIntegers</name></member>
      <member refid="class_game_1_1_m_p___param_1a5beeddbd8425ac08b12fd041c647b922" prot="public" virt="non-virtual"><scope>Game::IP_Param</scope><name>getNx</name></member>
      <member refid="class_game_1_1_m_p___param_1acf2be6a9980b50736064b0eb11103e5e" prot="public" virt="non-virtual"><scope>Game::IP_Param</scope><name>getNy</name></member>
      <member refid="class_game_1_1_m_p___param_1ac2db5cff1ae7f287200f82e3c729121b" prot="public" virt="non-virtual"><scope>Game::IP_Param</scope><name>getQ</name></member>
      <member refid="class_game_1_1_i_p___param_1a3b8e2133a9eb621c48c1dc8e1d5164ad" prot="private" virt="non-virtual"><scope>Game::IP_Param</scope><name>integers</name></member>
      <member refid="class_game_1_1_i_p___param_1ad710e7e048db05e226b431f31806e264" prot="public" virt="non-virtual"><scope>Game::IP_Param</scope><name>IP_Param</name></member>
      <member refid="class_game_1_1_i_p___param_1ae4ee8d18baa66ad6f7c2282ec74ba223" prot="public" virt="non-virtual"><scope>Game::IP_Param</scope><name>IP_Param</name></member>
      <member refid="class_game_1_1_i_p___param_1ab308072a2b83eba38823d1a9cfcbb6a0" prot="public" virt="non-virtual"><scope>Game::IP_Param</scope><name>IP_Param</name></member>
      <member refid="class_game_1_1_i_p___param_1ab350d5b25881473e58f382afa4451faf" prot="private" virt="non-virtual"><scope>Game::IP_Param</scope><name>IPModel</name></member>
      <member refid="class_game_1_1_i_p___param_1a9b8b7c1cec87693da7d99508d4f4cfa3" prot="public" virt="non-virtual"><scope>Game::IP_Param</scope><name>isPlayable</name></member>
      <member refid="class_game_1_1_i_p___param_1ad2a53db91304aad8942edbc0e18d410c" prot="private" virt="non-virtual"><scope>Game::IP_Param</scope><name>madeModel</name></member>
      <member refid="class_game_1_1_i_p___param_1a990ad2af9bc94af6e8662fedc84ba83c" prot="public" virt="non-virtual"><scope>Game::IP_Param</scope><name>makeModel</name></member>
      <member refid="class_game_1_1_m_p___param_1aa4be3148e505ff9012f47c9966a1475b" prot="public" virt="non-virtual"><scope>Game::IP_Param</scope><name>MP_Param</name></member>
      <member refid="class_game_1_1_m_p___param_1a51f2d17e5151e8da6361c0382f62758f" prot="public" virt="non-virtual"><scope>Game::IP_Param</scope><name>MP_Param</name></member>
      <member refid="class_game_1_1_m_p___param_1a786341129b4f7a0501ab1784cac70c9e" prot="protected" virt="non-virtual"><scope>Game::IP_Param</scope><name>Ncons</name></member>
      <member refid="class_game_1_1_m_p___param_1aac9e6425fcc953b69c7aae411f011e58" prot="protected" virt="non-virtual"><scope>Game::IP_Param</scope><name>Nx</name></member>
      <member refid="class_game_1_1_m_p___param_1ab889087a490f40f114002c92fea62b2d" prot="protected" virt="non-virtual"><scope>Game::IP_Param</scope><name>Ny</name></member>
      <member refid="class_game_1_1_i_p___param_1a922cfe6dcf78da845462aafaf72e0083" prot="public" virt="non-virtual"><scope>Game::IP_Param</scope><name>operator==</name></member>
      <member refid="class_game_1_1_m_p___param_1ad1ec9489e7f1959f468e459c881cd63d" prot="protected" virt="non-virtual"><scope>Game::IP_Param</scope><name>Q</name></member>
      <member refid="class_game_1_1_i_p___param_1a93830476669f3c32cf5110d922c848bf" prot="public" virt="non-virtual"><scope>Game::IP_Param</scope><name>set</name></member>
      <member refid="class_game_1_1_i_p___param_1a4ea31e1116d154a29c2938e8c649e13c" prot="public" virt="non-virtual"><scope>Game::IP_Param</scope><name>set</name></member>
      <member refid="class_game_1_1_i_p___param_1a14166f25a9e6bc6efe69ad9592fb44ff" prot="public" virt="non-virtual"><scope>Game::IP_Param</scope><name>set</name></member>
      <member refid="class_game_1_1_i_p___param_1afbec7b4bbb15bd16298eb80fd65f9747" prot="public" virt="non-virtual"><scope>Game::IP_Param</scope><name>set</name></member>
      <member refid="class_game_1_1_i_p___param_1a97d7a955cb93ff14144bdce152e906b6" prot="private" virt="non-virtual"><scope>Game::IP_Param</scope><name>set</name></member>
      <member refid="class_game_1_1_i_p___param_1a4ba89f81adc04cf5e21478f8a7f7748f" prot="private" virt="non-virtual"><scope>Game::IP_Param</scope><name>set</name></member>
      <member refid="class_game_1_1_i_p___param_1aca00f56e28145a26a763a8ea0b90b2f3" prot="private" virt="non-virtual"><scope>Game::IP_Param</scope><name>set</name></member>
      <member refid="class_game_1_1_i_p___param_1a068537c1f3d09c882d6d797e45bdc8e1" prot="private" virt="non-virtual"><scope>Game::IP_Param</scope><name>set</name></member>
      <member refid="class_game_1_1_m_p___param_1a97d7a955cb93ff14144bdce152e906b6" prot="public" virt="virtual" ambiguityscope="Game::MP_Param::"><scope>Game::IP_Param</scope><name>set</name></member>
      <member refid="class_game_1_1_m_p___param_1a4ba89f81adc04cf5e21478f8a7f7748f" prot="public" virt="virtual" ambiguityscope="Game::MP_Param::"><scope>Game::IP_Param</scope><name>set</name></member>
      <member refid="class_game_1_1_m_p___param_1aca00f56e28145a26a763a8ea0b90b2f3" prot="public" virt="virtual" ambiguityscope="Game::MP_Param::"><scope>Game::IP_Param</scope><name>set</name></member>
      <member refid="class_game_1_1_m_p___param_1a068537c1f3d09c882d6d797e45bdc8e1" prot="public" virt="virtual" ambiguityscope="Game::MP_Param::"><scope>Game::IP_Param</scope><name>set</name></member>
      <member refid="class_game_1_1_m_p___param_1a720cd86de42cfb6054f0d7363c371f39" prot="public" virt="non-virtual"><scope>Game::IP_Param</scope><name>setA</name></member>
      <member refid="class_game_1_1_m_p___param_1a5855ef8253dd3776b04d916e2e7f4b1b" prot="public" virt="non-virtual"><scope>Game::IP_Param</scope><name>setb</name></member>
      <member refid="class_game_1_1_m_p___param_1a16f75a8bb8525cd80ccec416bcc57c4e" prot="public" virt="non-virtual"><scope>Game::IP_Param</scope><name>setB</name></member>
      <member refid="class_game_1_1_m_p___param_1a5d18a93a4335e8e9bed6633aa095b5d1" prot="public" virt="non-virtual"><scope>Game::IP_Param</scope><name>setc</name></member>
      <member refid="class_game_1_1_m_p___param_1af28bfbe4728fdd28e44f71e29ff3974d" prot="public" virt="non-virtual"><scope>Game::IP_Param</scope><name>setC</name></member>
      <member refid="class_game_1_1_m_p___param_1aba24e357b5034e0fe7869e1ceaa5dadf" prot="public" virt="non-virtual"><scope>Game::IP_Param</scope><name>setQ</name></member>
      <member refid="class_game_1_1_m_p___param_1aa2528bd94216c15b6c655040cecea5fe" prot="protected" virt="non-virtual"><scope>Game::IP_Param</scope><name>size</name></member>
      <member refid="class_game_1_1_i_p___param_1a170e9bf8ae4eebe9397d01887c517582" prot="public" virt="non-virtual"><scope>Game::IP_Param</scope><name>solveFixed</name></member>
      <member refid="class_game_1_1_i_p___param_1a386613a0547b8b1ab08524471394cd75" prot="public" virt="virtual"><scope>Game::IP_Param</scope><name>write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
