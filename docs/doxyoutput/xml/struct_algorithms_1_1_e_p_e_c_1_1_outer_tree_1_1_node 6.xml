<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node" kind="struct" language="C++" prot="public">
    <compoundname>Algorithms::EPEC::OuterTree::Node</compoundname>
    <includes refid="epec__outerapproximation_8h" local="no">epec_outerapproximation.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node_1ab90c17fd38684d36b70f14c042b965ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class OuterTree</definition>
        <argsstring></argsstring>
        <name>OuterTree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="19" column="5" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node_1a56e4757981a87359ba30209ac1edc64d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; unsigned int &gt;</type>
        <definition>std::vector&lt;unsigned int&gt; Algorithms::EPEC::OuterTree::Node::IdComps</definition>
        <argsstring></argsstring>
        <name>IdComps</name>
        <briefdescription>
<para>Contains the branching decisions taken at the node. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="52" column="9" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="52" bodyend="48"/>
      </memberdef>
      <memberdef kind="variable" id="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node_1a661b7461044d4e70472353a24214e6f0" prot="private" static="no" mutable="no">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt;bool&gt; Algorithms::EPEC::OuterTree::Node::Encoding</definition>
        <argsstring></argsstring>
        <name>Encoding</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An encoding of bool. True if the complementarity condition is included in the current node outer approximation, false otherwise. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="54" column="9" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node_1a214124cd22efaea8c19a8ff161036bae" prot="private" static="no" mutable="no">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt;bool&gt; Algorithms::EPEC::OuterTree::Node::AllowedBranchings</definition>
        <argsstring></argsstring>
        <name>AllowedBranchings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A vector where true means that the corresponding complementarity is a candidate for banching at the current node </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="58" column="9" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node_1a343d810708b0bae132827fb9ac296567" prot="private" static="no" mutable="no">
        <type>unsigned long int</type>
        <definition>unsigned long int Algorithms::EPEC::OuterTree::Node::Id</definition>
        <argsstring></argsstring>
        <name>Id</name>
        <briefdescription>
<para>A long int giving the numerical identifier for the node. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="62" column="9" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node_1a4c5320da1819ef6dc8a2e890ccde1fdb" prot="private" static="no" mutable="no">
        <type><ref refid="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node" kindref="compound">Node</ref> *</type>
        <definition>Node* Algorithms::EPEC::OuterTree::Node::Parent</definition>
        <argsstring></argsstring>
        <name>Parent</name>
        <briefdescription>
<para>A pointer to the parent node. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="63" column="10" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node_1a868f7a08221e99b74722b37dd1abfc10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Algorithms::EPEC::OuterTree::Node::Node</definition>
        <argsstring>(unsigned int encSize)</argsstring>
        <name>Node</name>
        <param>
          <type>unsigned int</type>
          <declname>encSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Constructor for the root node, given the encoding size, namely the number of complementarity equations</para>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="21" column="5" bodyfile="src/algorithms/EPEC/epec_outerapproximation.cpp" bodystart="971" bodyend="979"/>
      </memberdef>
      <memberdef kind="function" id="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node_1a1589c99f0c0735bb871fc1a6a75feb3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Algorithms::EPEC::OuterTree::Node::Node</definition>
        <argsstring>(Node &amp;parent, unsigned int idComp, unsigned long int id)</argsstring>
        <name>Node</name>
        <param>
          <type><ref refid="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node" kindref="compound">Node</ref> &amp;</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>idComp</declname>
        </param>
        <param>
          <type>unsigned long int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Given the parent node address<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parent</parametername>
<parametername>the</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="23" column="5" bodyfile="src/algorithms/EPEC/epec_outerapproximation.cpp" bodystart="956" bodyend="969"/>
      </memberdef>
      <memberdef kind="function" id="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node_1a08d255e4a1a35d6f3a3285545d685f0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Algorithms::EPEC::OuterTree::Node::Node</definition>
        <argsstring>(Node &amp;parent, std::vector&lt; int &gt; idComps, unsigned long int id)</argsstring>
        <name>Node</name>
        <param>
          <type><ref refid="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node" kindref="compound">Node</ref> &amp;</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt;</type>
          <declname>idComps</declname>
        </param>
        <param>
          <type>unsigned long int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Given the parent node address<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parent</parametername>
<parametername>the</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="24" column="5" bodyfile="src/algorithms/EPEC/epec_outerapproximation.cpp" bodystart="1059" bodyend="1078"/>
      </memberdef>
      <memberdef kind="function" id="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node_1a7bb7afdeba5c40adefdc51e131958940" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; unsigned int &gt;</type>
        <definition>std::vector&lt;unsigned int&gt; Algorithms::EPEC::OuterTree::Node::getIdComps</definition>
        <argsstring>() const</argsstring>
        <name>getIdComps</name>
        <briefdescription>
<para>Getter method for idComp. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="26" column="24" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node_1a08d6f2b89b3f4eb154c0a9b072a0dd83" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned long int</type>
        <definition>unsigned long int Algorithms::EPEC::OuterTree::Node::getId</definition>
        <argsstring>() const</argsstring>
        <name>getId</name>
        <briefdescription>
<para>Getter method for id. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="29" column="30" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="29" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node_1a9bcbc3d58a02ff0ddd6ca02c9c81710b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned long int</type>
        <definition>unsigned long int Algorithms::EPEC::OuterTree::Node::getCumulativeBranches</definition>
        <argsstring>() const</argsstring>
        <name>getCumulativeBranches</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the number of variables that cannot be candidate for the branching decisions, namely the ones on which a branching decision has already been taken, or for which the resulting child node is infeasible. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="32" column="30" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="32" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node_1a0d3f03f7047c1ffe6bbe0ed5534b0965" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt;bool&gt; Algorithms::EPEC::OuterTree::Node::getEncoding</definition>
        <argsstring>() const</argsstring>
        <name>getEncoding</name>
        <briefdescription>
<para>Getter method for the encoding. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="38" column="24" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="38" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node_1a32acc86fe50a0184403c1d2ce8188389" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt;bool&gt; Algorithms::EPEC::OuterTree::Node::getAllowedBranchings</definition>
        <argsstring>() const</argsstring>
        <name>getAllowedBranchings</name>
        <briefdescription>
<para>Getter method for the allowed branchings. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="42" column="24" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="42" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node_1a3ee450763243241c3c94899f2789ffea" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node" kindref="compound">Node</ref> *</type>
        <definition>Node* Algorithms::EPEC::OuterTree::Node::getParent</definition>
        <argsstring>() const</argsstring>
        <name>getParent</name>
        <briefdescription>
<para>Getter method for the parent node. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="46" column="17" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="46" bodyend="44"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>Algorithms::EPEC::OuterTree::Node</label>
        <link refid="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node"/>
        <childnode refid="1" relation="usage">
          <edgelabel>Parent</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/algorithms/EPEC/epec_outerapproximation.h" line="17" column="13" bodyfile="include/algorithms/EPEC/epec_outerapproximation.h" bodystart="17" bodyend="65"/>
    <listofallmembers>
      <member refid="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node_1a214124cd22efaea8c19a8ff161036bae" prot="private" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree::Node</scope><name>AllowedBranchings</name></member>
      <member refid="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node_1a661b7461044d4e70472353a24214e6f0" prot="private" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree::Node</scope><name>Encoding</name></member>
      <member refid="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node_1a32acc86fe50a0184403c1d2ce8188389" prot="public" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree::Node</scope><name>getAllowedBranchings</name></member>
      <member refid="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node_1a9bcbc3d58a02ff0ddd6ca02c9c81710b" prot="public" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree::Node</scope><name>getCumulativeBranches</name></member>
      <member refid="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node_1a0d3f03f7047c1ffe6bbe0ed5534b0965" prot="public" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree::Node</scope><name>getEncoding</name></member>
      <member refid="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node_1a08d6f2b89b3f4eb154c0a9b072a0dd83" prot="public" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree::Node</scope><name>getId</name></member>
      <member refid="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node_1a7bb7afdeba5c40adefdc51e131958940" prot="public" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree::Node</scope><name>getIdComps</name></member>
      <member refid="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node_1a3ee450763243241c3c94899f2789ffea" prot="public" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree::Node</scope><name>getParent</name></member>
      <member refid="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node_1a343d810708b0bae132827fb9ac296567" prot="private" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree::Node</scope><name>Id</name></member>
      <member refid="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node_1a56e4757981a87359ba30209ac1edc64d" prot="private" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree::Node</scope><name>IdComps</name></member>
      <member refid="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node_1a868f7a08221e99b74722b37dd1abfc10" prot="public" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree::Node</scope><name>Node</name></member>
      <member refid="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node_1a1589c99f0c0735bb871fc1a6a75feb3a" prot="public" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree::Node</scope><name>Node</name></member>
      <member refid="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node_1a08d255e4a1a35d6f3a3285545d685f0a" prot="public" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree::Node</scope><name>Node</name></member>
      <member refid="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node_1ab90c17fd38684d36b70f14c042b965ec" prot="public" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree::Node</scope><name>OuterTree</name></member>
      <member refid="struct_algorithms_1_1_e_p_e_c_1_1_outer_tree_1_1_node_1a4c5320da1819ef6dc8a2e890ccde1fdb" prot="private" virt="non-virtual"><scope>Algorithms::EPEC::OuterTree::Node</scope><name>Parent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
