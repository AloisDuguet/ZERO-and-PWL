<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="class_models_1_1_e_p_e_c_1_1_e_p_e_c" kind="class" language="C++" prot="public">
    <compoundname>Models::EPEC::EPEC</compoundname>
    <basecompoundref refid="class_game_1_1_e_p_e_c" prot="public" virt="non-virtual">Game::EPEC</basecompoundref>
    <includes refid="epec__models_8h" local="no">epec_models.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a69697419a0ea756dd5022dcbe1ee7de3" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_models_1_1_e_p_e_c_1_1_lead_all_par" kindref="compound">LeadAllPar</ref> &gt;</type>
        <definition>std::vector&lt;LeadAllPar&gt; Models::EPEC::EPEC::AllLeadPars</definition>
        <argsstring></argsstring>
        <name>AllLeadPars</name>
        <initializer>= {}</initializer>
        <briefdescription>
<para>The parameters of each leader in the <ref refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c" kindref="compound">EPEC</ref> game. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="208" column="13" bodyfile="include/interfaces/epec_models.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a2ccddf5a2e6c51171c6ac3d2956e12b3" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="class_math_opt_1_1_q_p___param" kindref="compound">MathOpt::QP_Param</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;MathOpt::QP_Param&gt; &gt; Models::EPEC::EPEC::MC_QP</definition>
        <argsstring></argsstring>
        <name>MC_QP</name>
        <initializer>=
			 {}</initializer>
        <briefdescription>
<para>The QP corresponding to the market clearing condition of each player. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="209" column="13" bodyfile="include/interfaces/epec_models.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1ae4a170ddb96851a3c1b776a4c6467978" prot="private" static="no" mutable="no">
        <type>arma::sp_mat</type>
        <definition>arma::sp_mat Models::EPEC::EPEC::TranspCosts</definition>
        <argsstring></argsstring>
        <name>TranspCosts</name>
        <initializer>= {}</initializer>
        <briefdescription>
<para>Transportation costs between pairs of countries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="212" column="14" bodyfile="include/interfaces/epec_models.h" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a5f3279a7696f3e2b4c23daffbd717b7a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; unsigned int &gt;</type>
        <definition>std::vector&lt;unsigned int&gt; Models::EPEC::EPEC::nImportMarkets</definition>
        <argsstring></argsstring>
        <name>nImportMarkets</name>
        <initializer>=
			 {}</initializer>
        <briefdescription>
<para>Number of countries from which the i-th country imports. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="213" column="13" bodyfile="include/interfaces/epec_models.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1af0a58c85d840088f79b601e24ab9a74f" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_models_1_1_e_p_e_c_1af533424de8789ffd456165af21ac7e02" kindref="member">LeadLocs</ref> &gt;</type>
        <definition>std::vector&lt;LeadLocs&gt; Models::EPEC::EPEC::Locations</definition>
        <argsstring></argsstring>
        <name>Locations</name>
        <initializer>= {}</initializer>
        <briefdescription>
<para>Location of variables for each country. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="215" column="13" bodyfile="include/interfaces/epec_models.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a2295d58cdcea06cd142ff9bfd6e531ae" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, unsigned int &gt;</type>
        <definition>std::map&lt;std::string, unsigned int&gt; Models::EPEC::EPEC::name2nos</definition>
        <argsstring></argsstring>
        <name>name2nos</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="217" column="10" bodyfile="include/interfaces/epec_models.h" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a11ee844677fcd746018f279d4fc611d2" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Models::EPEC::EPEC::taxVars</definition>
        <argsstring></argsstring>
        <name>taxVars</name>
        <initializer>= {0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="218" column="37" bodyfile="include/interfaces/epec_models.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a49be3a42fdf9b574ca76f628d889e0c4" prot="private" static="no" mutable="no">
        <type>std::vector&lt; arma::sp_mat &gt;</type>
        <definition>std::vector&lt;arma::sp_mat&gt; Models::EPEC::EPEC::LeadConses</definition>
        <argsstring></argsstring>
        <name>LeadConses</name>
        <initializer>{}</initializer>
        <briefdescription>
<para>Stores each leader&apos;s constraint LHS. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="219" column="23" bodyfile="include/interfaces/epec_models.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a9f80ff122ac9a8d1838f9441e89427fa" prot="private" static="no" mutable="no">
        <type>std::vector&lt; arma::vec &gt;</type>
        <definition>std::vector&lt;arma::vec&gt; Models::EPEC::EPEC::LeadRHSes</definition>
        <argsstring></argsstring>
        <name>LeadRHSes</name>
        <initializer>{}</initializer>
        <briefdescription>
<para>Stores each leader&apos;s constraint RHS. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="220" column="26" bodyfile="include/interfaces/epec_models.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1afde63c75410c93072061aed0a6eaa91b" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Models::EPEC::EPEC::quadraticTax</definition>
        <argsstring></argsstring>
        <name>quadraticTax</name>
        <initializer>= {false}</initializer>
        <briefdescription>
<para>If set to true, a term for the quadratic tax is added to each leader objective. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="270" column="6" bodyfile="include/interfaces/epec_models.h" bodystart="270" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1af9b5969ab223aee61ec00ab7be39694c" prot="private" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Models::EPEC::EPEC::makeObjectivePlayer</definition>
        <argsstring>(const unsigned int i, MathOpt::QP_Objective &amp;QP_obj) final</argsstring>
        <name>makeObjectivePlayer</name>
        <reimplements refid="class_game_1_1_e_p_e_c_1a7a0e7de74d0311d4903f97dfd21c0bab">makeObjectivePlayer</reimplements>
        <param>
          <type>const unsigned int</type>
          <declname>i</declname>
          <briefdescription><para>The location of the country whose objective is to be made </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="struct_math_opt_1_1_q_p___objective" kindref="compound">MathOpt::QP_Objective</ref> &amp;</type>
          <declname>QP_obj</declname>
          <briefdescription><para>The object where the objective parameters are to be stored. </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Makes the objective function of each country. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="196" column="6" bodyfile="src/interfaces/epec_models.cpp" bodystart="839" bodyend="892"/>
      </memberdef>
      <memberdef kind="function" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a3a25799be8d18f62c5d91d248a2bed5f" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Models::EPEC::EPEC::updateLocations</definition>
        <argsstring>() override</argsstring>
        <name>updateLocations</name>
        <reimplements refid="class_game_1_1_e_p_e_c_1a54e18b35ce3b7ce266daedf76759bef9">updateLocations</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called after <ref refid="class_game_1_1_e_p_e_c_1a66b446e508a6079805e7d8900f5db4ed" kindref="member">makePlayerQP()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="198" column="6" bodyfile="src/interfaces/epec_models.cpp" bodystart="899" bodyend="913"/>
      </memberdef>
      <memberdef kind="function" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1aa7d051d95e2c72c1250f3555c6d46cd1" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Models::EPEC::EPEC::preFinalize</definition>
        <argsstring>() override</argsstring>
        <name>preFinalize</name>
        <reimplements refid="class_game_1_1_e_p_e_c_1abea72c0ff571c5168047e9a42e4182af">preFinalize</reimplements>
        <briefdescription>
<para>Empty function - optionally re-implementable in derived class. </para>
        </briefdescription>
        <detaileddescription>
<para>This function can be optionally implemented by the derived class. Code in this class will be run <emphasis>before</emphasis> calling <ref refid="class_game_1_1_e_p_e_c_1ab32d89068adc66f100a266bbf31bf63e" kindref="member">Game::EPEC::finalize()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
<para>Does the following:<orderedlist>
<listitem><para>Adds the trade balance constraint for all leaders. i.e., total import must equal sum of import from each country</para>
</listitem><listitem><para>Stores the number of import markets for each country in <ref refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a5f3279a7696f3e2b4c23daffbd717b7a" kindref="member">Models::EPEC::EPEC::nImportMarkets</ref></para>
</listitem></orderedlist>
</para>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="200" column="6" bodyfile="src/interfaces/epec_models.cpp" bodystart="592" bodyend="614"/>
      </memberdef>
      <memberdef kind="function" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1aa05e61126be41d14b21f20da2bbfc877" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void Models::EPEC::EPEC::postFinalize</definition>
        <argsstring>() override</argsstring>
        <name>postFinalize</name>
        <reimplements refid="class_game_1_1_e_p_e_c_1aba9fd1fa8c9ee2e70afc62232ecfd6b0">postFinalize</reimplements>
        <briefdescription>
<para>Empty function - optionally reimplementable in derived class. </para>
        </briefdescription>
        <detaileddescription>
<para>This function can be optionally implemented by the derived class. Code in this class will be run <emphasis>after</emphasis> calling <ref refid="class_game_1_1_e_p_e_c_1ab32d89068adc66f100a266bbf31bf63e" kindref="member">Game::EPEC::finalize()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="202" column="6" bodyfile="include/interfaces/epec_models.h" bodystart="202" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a154b8c059d6ba5d1cc9c9e663a418ea5" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Models::EPEC::EPEC::dataCheck</definition>
        <argsstring>(bool chkAllLeadPars=true, bool chkcountriesLL=true, bool chkMC_QP=true, bool chkLeadConses=true, bool chkLeadRHSes=true, bool chknImportMarkets=true, bool chkLocations=true, bool chkLeaderLocations=true, bool chkLeadObjec=true) const</argsstring>
        <name>dataCheck</name>
        <param>
          <type>bool</type>
          <declname>chkAllLeadPars</declname>
          <defval>true</defval>
          <briefdescription><para>Checks if <ref refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a69697419a0ea756dd5022dcbe1ee7de3" kindref="member">Models::EPEC::EPEC::AllLeadPars</ref> has size <computeroutput>n</computeroutput> </para>
</briefdescription>
        </param>
        <param>
          <type>bool</type>
          <declname>chkcountriesLL</declname>
          <defval>true</defval>
          <briefdescription><para>Checks if <ref refid="class_game_1_1_e_p_e_c_1a1dc1b8bd642e450bc1e30eefe963fe13" kindref="member">Models::EPEC::EPEC::PlayersLowerLevels</ref> has size <computeroutput>n</computeroutput> </para>
</briefdescription>
        </param>
        <param>
          <type>bool</type>
          <declname>chkMC_QP</declname>
          <defval>true</defval>
          <briefdescription><para>Checks if <ref refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a2ccddf5a2e6c51171c6ac3d2956e12b3" kindref="member">Models::EPEC::EPEC::MC_QP</ref> has size <computeroutput>n</computeroutput> </para>
</briefdescription>
        </param>
        <param>
          <type>bool</type>
          <declname>chkLeadConses</declname>
          <defval>true</defval>
          <briefdescription><para>Checks if <ref refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a49be3a42fdf9b574ca76f628d889e0c4" kindref="member">Models::EPEC::EPEC::LeadConses</ref> has size <computeroutput>n</computeroutput> </para>
</briefdescription>
        </param>
        <param>
          <type>bool</type>
          <declname>chkLeadRHSes</declname>
          <defval>true</defval>
          <briefdescription><para>Checks if <ref refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a9f80ff122ac9a8d1838f9441e89427fa" kindref="member">Models::EPEC::EPEC::LeadRHSes</ref> has size <computeroutput>n</computeroutput> </para>
</briefdescription>
        </param>
        <param>
          <type>bool</type>
          <declname>chknImportMarkets</declname>
          <defval>true</defval>
          <briefdescription><para>Checks if <ref refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a5f3279a7696f3e2b4c23daffbd717b7a" kindref="member">Models::EPEC::EPEC::nImportMarkets</ref> has size <computeroutput>n</computeroutput> </para>
</briefdescription>
        </param>
        <param>
          <type>bool</type>
          <declname>chkLocations</declname>
          <defval>true</defval>
          <briefdescription><para>Checks if <ref refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1af0a58c85d840088f79b601e24ab9a74f" kindref="member">Models::EPEC::EPEC::Locations</ref> has size <computeroutput>n</computeroutput> </para>
</briefdescription>
        </param>
        <param>
          <type>bool</type>
          <declname>chkLeaderLocations</declname>
          <defval>true</defval>
          <briefdescription><para>Checks if <ref refid="class_game_1_1_e_p_e_c_1a59b0ccd12c05db259bb7ca056daf453d" kindref="member">Models::EPEC::EPEC::LeaderLocations</ref> has size <computeroutput>n</computeroutput> and <ref refid="class_game_1_1_abstract_game_1a2fd0ab6ee7cda7a9a582b79e94705bc7" kindref="member">Models::EPEC::EPEC::NumVariables</ref> is set </para>
</briefdescription>
        </param>
        <param>
          <type>bool</type>
          <declname>chkLeadObjec</declname>
          <defval>true</defval>
          <briefdescription><para>Checks if <ref refid="class_game_1_1_e_p_e_c_1a65834e121a2b29b9205ceb6a237e9e26" kindref="member">Models::EPEC::EPEC::LeaderObjective</ref> has size <computeroutput>n</computeroutput> </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks the data in <ref refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c" kindref="compound">Models::EPEC::EPEC</ref> object, based on checking flags, <computeroutput>n</computeroutput> is the number of countries in the <ref refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c" kindref="compound">Models::EPEC::EPEC</ref> object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="222" column="6" bodyfile="src/interfaces/epec_models.cpp" bodystart="754" bodyend="794"/>
      </memberdef>
      <memberdef kind="function" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1ae87273bcce3c01602cc63184a55938d9" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Models::EPEC::EPEC::ParamValid</definition>
        <argsstring>(const LeadAllPar &amp;Param) const</argsstring>
        <name>ParamValid</name>
        <param>
          <type>const <ref refid="struct_models_1_1_e_p_e_c_1_1_lead_all_par" kindref="compound">LeadAllPar</ref> &amp;</type>
          <declname>Param</declname>
          <defname>Params</defname>
          <briefdescription><para>Object whose validity is to be tested </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Checks that the parameter given to add a country is valid. Does not have obvious errors. </para>
        </briefdescription>
        <detaileddescription>
<para>Checks the Validity of <ref refid="struct_models_1_1_e_p_e_c_1_1_lead_all_par" kindref="compound">Models::EPEC::LeadAllPar</ref> object.</para>
<para>Checks the following:<itemizedlist>
<listitem><para>Size of FollowerParam.costs_lin, FollowerParam.costs_quad, FollowerParam.capacities, FollowerParam.emission_costs are all equal to <computeroutput>Params.n_followers</computeroutput> - <computeroutput>DemandParam.alpha</computeroutput> and <computeroutput>DemandParam.beta</computeroutput> are greater than zero - <computeroutput>name</computeroutput> is not empty - <computeroutput>name</computeroutput> does not match with the name of any other existing countries in the <ref refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c" kindref="compound">EPEC</ref> object. </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="235" column="6" bodyfile="src/interfaces/epec_models.cpp" bodystart="156" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a122117d4c57bee405be243a8bd5b3900" prot="private" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Models::EPEC::EPEC::make_LL_QP</definition>
        <argsstring>(const LeadAllPar &amp;Params, const unsigned int follower, MathOpt::QP_Param *Foll, const LeadLocs &amp;Loc) noexcept</argsstring>
        <name>make_LL_QP</name>
        <param>
          <type>const <ref refid="struct_models_1_1_e_p_e_c_1_1_lead_all_par" kindref="compound">LeadAllPar</ref> &amp;</type>
          <declname>Params</declname>
          <briefdescription><para>The Parameters object </para>
</briefdescription>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>follower</declname>
          <briefdescription><para>Which follower&apos;s QP has to be made? </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="class_math_opt_1_1_q_p___param" kindref="compound">MathOpt::QP_Param</ref> *</type>
          <declname>Foll</declname>
          <briefdescription><para>Non-owning pointer to the Follower QP_Param object </para>
</briefdescription>
        </param>
        <param>
          <type>const <ref refid="namespace_models_1_1_e_p_e_c_1af533424de8789ffd456165af21ac7e02" kindref="member">LeadLocs</ref> &amp;</type>
          <declname>Loc</declname>
          <briefdescription><para>LeadLocs object for accessing different leader locations. </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Makes the lower level quadratic program object for each follower. </para>
        </briefdescription>
        <detaileddescription>
<para>Makes Lower Level Quadratic Programs.</para>
<para>Sets the constraints and objective for the lower level problem (i.e., the follower) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="238" column="6" bodyfile="src/interfaces/epec_models.cpp" bodystart="189" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a6d6ce5abcdff2aaaf4642280a2ef8c28" prot="private" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Models::EPEC::EPEC::make_LL_LeadCons</definition>
        <argsstring>(arma::sp_mat &amp;LeadCons, arma::vec &amp;LeadRHS, const LeadAllPar &amp;Param, const Models::EPEC::LeadLocs &amp;Loc={}, const unsigned int import_lim_cons=1, const unsigned int export_lim_cons=1, const unsigned int price_lim_cons=1, const unsigned int activeTaxCaps=0) const noexcept</argsstring>
        <name>make_LL_LeadCons</name>
        <param>
          <type>arma::sp_mat &amp;</type>
          <declname>LeadCons</declname>
          <briefdescription><para>The LHS matrix of leader constraints (for output) </para>
</briefdescription>
        </param>
        <param>
          <type>arma::vec &amp;</type>
          <declname>LeadRHS</declname>
          <briefdescription><para>RHS vector for leader constraints (for output) </para>
</briefdescription>
        </param>
        <param>
          <type>const <ref refid="struct_models_1_1_e_p_e_c_1_1_lead_all_par" kindref="compound">LeadAllPar</ref> &amp;</type>
          <declname>Param</declname>
          <defname>Params</defname>
          <briefdescription><para>All country specific parameters </para>
</briefdescription>
        </param>
        <param>
          <type>const <ref refid="namespace_models_1_1_e_p_e_c_1af533424de8789ffd456165af21ac7e02" kindref="member">Models::EPEC::LeadLocs</ref> &amp;</type>
          <declname>Loc</declname>
          <defval>{}</defval>
          <briefdescription><para>Location of variables </para>
</briefdescription>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>import_lim_cons</declname>
          <defval>1</defval>
          <briefdescription><para>Does a constraint on import limit exist or no limit? </para>
</briefdescription>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>export_lim_cons</declname>
          <defval>1</defval>
          <briefdescription><para>Does a constraint on export limit exist or no limit? </para>
</briefdescription>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>price_lim_cons</declname>
          <defval>1</defval>
          <briefdescription><para>Does a constraint on price limit exist or no limit? </para>
</briefdescription>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>activeTaxCaps</declname>
          <defval>0</defval>
          <briefdescription><para>Number of active Tax Caps constraints. If strictly positive, tax cap constraint(s) will be enforced </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Makes the leader constraint matrix and RHS. </para>
        </briefdescription>
        <detaileddescription>
<para>Makes the leader level constraints for a country. The constraints added are as follows: <formula id="14">\begin{eqnarray} t_i^{I} &amp;\leq&amp; \bar{t_i^{I}}\\ q^{import} - q^{export} &amp;\leq&amp; \bar{q^{import}}\\ q^{export} - q^{import} &amp;\leq&amp; \bar{q^{export}}\\ \alpha - \beta\left(q^{import} - q^{export} + \sum_i q_i \right) &amp;\leq&amp; *\bar{\pi}\\ q^{export} &amp;\leq&amp; \sum_i q_i +q^{import} \end{eqnarray}</formula> Here <formula id="15">$\bar{q^{import}}$</formula> and <formula id="16">$\bar{q^{export}}$</formula> denote the net import limit and export limit respectively. <formula id="17">$\bar\pi$</formula> is the maximum local price that the government desires to have.</para>
<para>The first two constraints above limit net imports and exports respectively. The third constraint limits local price. These constraints are added only if the RHS parameters are given as non-negative value. A default value of -1 to any of these parameters (given in <ref refid="struct_models_1_1_e_p_e_c_1_1_lead_all_par" kindref="compound">Models::EPEC::LeadAllPar</ref> <computeroutput>Params</computeroutput> object) ensures that these constraints are not added. The last constraint is <emphasis>always</emphasis> added. It ensures that the country does not export more than what it has produced + imported! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="244" column="6" bodyfile="src/interfaces/epec_models.cpp" bodystart="245" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a7acddde752207371fc45b45aa7e50051" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Models::EPEC::EPEC::add_Leaders_tradebalance_constraints</definition>
        <argsstring>(const unsigned int i)</argsstring>
        <name>add_Leaders_tradebalance_constraints</name>
        <param>
          <type>const unsigned int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Adds leaders&apos; trade balance constraints for import-exports. </para>
        </briefdescription>
        <detaileddescription>
<para>Does the following job:<itemizedlist>
<listitem><para>Counts the number of import markets for the country <computeroutput>i</computeroutput> to store in <ref refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a5f3279a7696f3e2b4c23daffbd717b7a" kindref="member">Models::EPEC::EPEC::nImportMarkets</ref> - Adds the trade balance constraint. Total quantity imported by country <computeroutput>i</computeroutput> = Sum of Total quantity exported by each country to country i. - Updates the LeadLocs in Models::EPEC::EPEC::Locations.at(i) </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="253" column="6" bodyfile="src/interfaces/epec_models.cpp" bodystart="616" bodyend="662"/>
      </memberdef>
      <memberdef kind="function" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a635714c3f1ec34be9a065b3dd038d7e0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Models::EPEC::EPEC::make_MC_leader</definition>
        <argsstring>(const unsigned int i)</argsstring>
        <name>make_MC_leader</name>
        <param>
          <type>const unsigned int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Makes the market clearing constraint for country <computeroutput>i</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Writes the market clearing constraint as a <ref refid="class_math_opt_1_1_q_p___param" kindref="compound">MathOpt::QP_Param</ref> and stores it in <ref refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a2ccddf5a2e6c51171c6ac3d2956e12b3" kindref="member">Models::EPEC::EPEC::MC_QP</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="255" column="6" bodyfile="src/interfaces/epec_models.cpp" bodystart="700" bodyend="752"/>
      </memberdef>
      <memberdef kind="function" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a57ed71a45cb81cc4535077b226e29cd3" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Models::EPEC::EPEC::makeMCConstraints</definition>
        <argsstring>(arma::sp_mat &amp;MCLHS, arma::vec &amp;MCRHS) const override</argsstring>
        <name>makeMCConstraints</name>
        <reimplements refid="class_game_1_1_e_p_e_c_1abd1f66626593e9f02132467bec62573c">makeMCConstraints</reimplements>
        <param>
          <type>arma::sp_mat &amp;</type>
          <declname>MCLHS</declname>
        </param>
        <param>
          <type>arma::vec &amp;</type>
          <declname>MCRHS</declname>
        </param>
        <briefdescription>
<para>Returns leader&apos;s Market clearing constraints in matrix form. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="257" column="6" bodyfile="src/interfaces/epec_models.cpp" bodystart="664" bodyend="698"/>
      </memberdef>
      <memberdef kind="function" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1ad6ecc1d83f7bf33da132c565c02e5607" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Models::EPEC::EPEC::WriteCountry</definition>
        <argsstring>(const unsigned int i, const std::string filename, const arma::vec x, const bool append=true) const</argsstring>
        <name>WriteCountry</name>
        <param>
          <type>const unsigned int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const arma::vec</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>append</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="259" column="6" bodyfile="src/interfaces/epec_models.cpp" bodystart="1355" bodyend="1417"/>
      </memberdef>
      <memberdef kind="function" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a20a5f242a9dd5978bd870e513f8c5d0b" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Models::EPEC::EPEC::WriteFollower</definition>
        <argsstring>(const unsigned int i, const unsigned int j, const std::string filename, const arma::vec x) const</argsstring>
        <name>WriteFollower</name>
        <param>
          <type>const unsigned int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const arma::vec</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="264" column="6" bodyfile="src/interfaces/epec_models.cpp" bodystart="1419" bodyend="1488"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1ae10e18bed4eac1c033eed3be039845f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Models::EPEC::EPEC::EPEC</definition>
        <argsstring>()=delete</argsstring>
        <name>EPEC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="275" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a960798d05fd3e8859898849f15313c8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Models::EPEC::EPEC::EPEC</definition>
        <argsstring>(GRBEnv *env, arma::sp_mat TranspCosts={})</argsstring>
        <name>EPEC</name>
        <param>
          <type>GRBEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>arma::sp_mat</type>
          <declname>TranspCosts</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="277" column="1" bodyfile="include/interfaces/epec_models.h" bodystart="277" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a8a8cff4155357f72cb79e0e20fee2b15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c" kindref="compound">EPEC</ref> &amp;</type>
        <definition>Models::EPEC::EPEC &amp; Models::EPEC::EPEC::addCountry</definition>
        <argsstring>(LeadAllPar Params, const unsigned int addnlLeadVars=0)</argsstring>
        <name>addCountry</name>
        <param>
          <type><ref refid="struct_models_1_1_e_p_e_c_1_1_lead_all_par" kindref="compound">LeadAllPar</ref></type>
          <declname>Params</declname>
          <briefdescription><para>The Parameter structure for the leader </para>
</briefdescription>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>addnlLeadVars</declname>
          <defval>0</defval>
          <briefdescription><para>Create columns with 0s in it. To handle additional dummy leader variables. </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Models a Standard Nash-Cournot game within a country </para>
        </briefdescription>
        <detaileddescription>
<para>A Nash cournot game is played among the followers, for the leader-decided values of import export, caps and taxations on all players. The total quantity used in the demand equation is the sum of quantity produced by all followers + any import - any export.</para>
<para>Use <formula id="18">$l_i$</formula> to denote the <formula id="19">$i$</formula>-th element in <computeroutput>costs_lin</computeroutput> and <formula id="20">$q_i$</formula> for the <formula id="19">$i$</formula>-th element in <computeroutput>costs_quad</computeroutput>. Then to produce quantity <formula id="21">$x_i$</formula>, the <formula id="19">$i$</formula>-th producer&apos;s cost will be <formula id="22">\[ l_ix_i + \frac{1}{2}q_ix_i^2 \]</formula> In addition to this, the leader may impose &quot;tax&quot;, which could increase <formula id="18">$l_i$</formula> for each player.</para>
<para>Total quantity in the market is given by sum of quantities produced by all producers adjusted by imports and exports <formula id="23">\[{Total\quad Quantity} = \sum_i x_i + x_{imp} - x_{exp} \]</formula> The demand curve in the market is given by <formula id="24">\[{Price} = a-b({Total\quad Quantity})\]</formula></para>
<para>Each follower is also constrained by a maximum production capacity her infrastructure allows. And each follower is constrained by a cap on their production, that is imposed by the leader.</para>
<para>Each follower decides <formula id="21">$x_i$</formula> noncooperatively maximizing profits.</para>
<para>The leader decides quantity imported <formula id="25">$q_{imp}$</formula>, quantity exported <formula id="26">$q_{exp}$</formula>, cap on each player, <formula id="27">$\tilde{x_i}$</formula>, and the tax for each player <formula id="28">$t_i$</formula>.</para>
<para>The leader is also constrained to not export or import anything more than the limits set by <computeroutput>export_limit</computeroutput> and <computeroutput>import_limit</computeroutput>. A negative value to these input variables imply that there is no such limit.</para>
<para>Similarly the leader cannot also impose tax on any player greater than what is dictated by the input variable <computeroutput>max_tax</computeroutput>.</para>
<para><simplesect kind="return"><para>Pointer to LCP object dynamically created using <computeroutput>new</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="281" column="6" bodyfile="src/interfaces/epec_models.cpp" bodystart="382" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a26d79f1a96b8af1db717230d13e2745d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c" kindref="compound">EPEC</ref> &amp;</type>
        <definition>Models::EPEC::EPEC &amp; Models::EPEC::EPEC::addTranspCosts</definition>
        <argsstring>(const arma::sp_mat &amp;costs)</argsstring>
        <name>addTranspCosts</name>
        <param>
          <type>const arma::sp_mat &amp;</type>
          <declname>costs</declname>
          <briefdescription><para>The transportation cost matrix </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Adds intercountry transportation costs matrix. </para>
        </briefdescription>
        <detaileddescription>
<para>Adds the transportation cost matrix. Entry in row i and column j of this matrix corresponds to the unit transportation costs for sending fuel from country i to country j. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="288" column="6" bodyfile="src/interfaces/epec_models.cpp" bodystart="565" bodyend="590"/>
      </memberdef>
      <memberdef kind="function" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a849ce1188daf628c3f38e36f1a62d560" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int Models::EPEC::EPEC::getPosition</definition>
        <argsstring>(const unsigned int countryCount, const LeaderVars var=LeaderVars::FollowerStart) const</argsstring>
        <name>getPosition</name>
        <param>
          <type>const unsigned int</type>
          <declname>countryCount</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_models_1_1_e_p_e_c_1a20f448e9e7eadf005b6576ee74af0b5f" kindref="member">LeaderVars</ref></type>
          <declname>var</declname>
          <defval><ref refid="namespace_models_1_1_e_p_e_c_1a20f448e9e7eadf005b6576ee74af0b5faf2dcda11a77f92f3c0cd7e08f37ce122" kindref="member">LeaderVars::FollowerStart</ref></defval>
        </param>
        <briefdescription>
<para>Gets position of a variable in a country. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="290" column="14" bodyfile="src/interfaces/epec_models.cpp" bodystart="796" bodyend="805"/>
      </memberdef>
      <memberdef kind="function" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1abf53e0176e1a6a4fde2e1dc3a8323875" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int Models::EPEC::EPEC::getPosition</definition>
        <argsstring>(const std::string &amp;countryCount, const LeaderVars var=LeaderVars::FollowerStart) const</argsstring>
        <name>getPosition</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>countryCount</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_models_1_1_e_p_e_c_1a20f448e9e7eadf005b6576ee74af0b5f" kindref="member">LeaderVars</ref></type>
          <declname>var</declname>
          <defval><ref refid="namespace_models_1_1_e_p_e_c_1a20f448e9e7eadf005b6576ee74af0b5faf2dcda11a77f92f3c0cd7e08f37ce122" kindref="member">LeaderVars::FollowerStart</ref></defval>
        </param>
        <briefdescription>
<para>Gets position of a variable in a country given the country name and the variable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="293" column="14" bodyfile="src/interfaces/epec_models.cpp" bodystart="807" bodyend="815"/>
      </memberdef>
      <memberdef kind="function" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1ac2a5f4108c8156d8cd278e3d166ddef9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c" kindref="compound">EPEC</ref> &amp;</type>
        <definition>Models::EPEC::EPEC &amp; Models::EPEC::EPEC::unlock</definition>
        <argsstring>()</argsstring>
        <name>unlock</name>
        <briefdescription>
<para>Unlocks an <ref refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c" kindref="compound">EPEC</ref> model. </para>
        </briefdescription>
        <detaileddescription>
<para>A Finalized model cannot be edited unless it is unlocked first. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="296" column="6" bodyfile="src/interfaces/epec_models.cpp" bodystart="826" bodyend="837"/>
      </memberdef>
      <memberdef kind="function" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1ae844cbd36b22ca25d746a88a3425bb6e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; GRBModel &gt;</type>
        <definition>std::unique_ptr&lt; GRBModel &gt; Models::EPEC::EPEC::Respond</definition>
        <argsstring>(const std::string name, const arma::vec &amp;x) const</argsstring>
        <name>Respond</name>
        <param>
          <type>const std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="298" column="17" bodyfile="src/interfaces/epec_models.cpp" bodystart="894" bodyend="897"/>
      </memberdef>
      <memberdef kind="function" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a35c05b8bba47be6ae9c5b65ede8730ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_game_1_1_nash_game" kindref="compound">Game::NashGame</ref> *</type>
        <definition>Game::NashGame * Models::EPEC::EPEC::get_LowerLevelNash</definition>
        <argsstring>(const unsigned int i) const</argsstring>
        <name>get_LowerLevelNash</name>
        <param>
          <type>const unsigned int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns a non-owning pointer to the <computeroutput>i</computeroutput> -th country&apos;s lower level NashGame. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="301" column="16" bodyfile="src/interfaces/epec_models.cpp" bodystart="817" bodyend="824"/>
      </memberdef>
      <memberdef kind="function" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a90dd7d8a4e173ffcc557fba0baa22397" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Models::EPEC::EPEC::write</definition>
        <argsstring>(const std::string filename, const unsigned int i, bool append=true) const</argsstring>
        <name>write</name>
        <param>
          <type>const std::string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>append</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="304" column="6" bodyfile="src/interfaces/epec_models.cpp" bodystart="1006" bodyend="1018"/>
      </memberdef>
      <memberdef kind="function" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a445a1100d51a9e39b1d4e36c9ecdcf53" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Models::EPEC::EPEC::write</definition>
        <argsstring>(const std::string filename, bool append=true) const</argsstring>
        <name>write</name>
        <param>
          <type>const std::string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>append</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="306" column="6" bodyfile="src/interfaces/epec_models.cpp" bodystart="1020" bodyend="1031"/>
      </memberdef>
      <memberdef kind="function" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a696d901ed61f65d46c722e9536d21dbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Models::EPEC::EPEC::readSolutionJSON</definition>
        <argsstring>(const std::string filename)</argsstring>
        <name>readSolutionJSON</name>
        <param>
          <type>const std::string</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Reads the solution file and load it in the current <ref refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c" kindref="compound">EPEC</ref> instance</para>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="308" column="6" bodyfile="src/interfaces/epec_models.cpp" bodystart="1105" bodyend="1137"/>
      </memberdef>
      <memberdef kind="function" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a6e7e98497395831e6c65cc7c5096839d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Models::EPEC::EPEC::writeSolutionJSON</definition>
        <argsstring>(std::string filename, const arma::vec x, const arma::vec z) const</argsstring>
        <name>writeSolutionJSON</name>
        <param>
          <type>std::string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const arma::vec</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const arma::vec</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Writes the computed Nash Equilibrium in the standard JSON solution file <computeroutput>filename</computeroutput> dictates the name of the .JSON solution file</para>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="310" column="6" bodyfile="src/interfaces/epec_models.cpp" bodystart="1033" bodyend="1103"/>
      </memberdef>
      <memberdef kind="function" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a44202edc587c0a8d03f159238e8a90cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Models::EPEC::EPEC::writeSolution</definition>
        <argsstring>(const int writeLevel, std::string filename) const</argsstring>
        <name>writeSolution</name>
        <param>
          <type>const int</type>
          <declname>writeLevel</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Writes the computed Nash Equilibrium in the <ref refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c" kindref="compound">EPEC</ref> instance <computeroutput>writeLevel</computeroutput> is an integer representing the write configuration. 0: only Json solution; 1: only human readable solution; 2:both</para>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="312" column="6" bodyfile="src/interfaces/epec_models.cpp" bodystart="1139" bodyend="1157"/>
      </memberdef>
      <memberdef kind="function" id="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a4253f88333be71b7ea62819394a9e275" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="struct_models_1_1_e_p_e_c_1_1_e_p_e_c_instance" kindref="compound">EPECInstance</ref></type>
        <definition>const EPECInstance Models::EPEC::EPEC::getInstance</definition>
        <argsstring>() const</argsstring>
        <name>getInstance</name>
        <briefdescription>
<para>Get the current <ref refid="struct_models_1_1_e_p_e_c_1_1_e_p_e_c_instance" kindref="compound">EPECInstance</ref> loaded. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="315" column="20" bodyfile="include/interfaces/epec_models.h" bodystart="315" bodyend="317"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Models::EPEC::EPEC</label>
        <link refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Game::EPEC</label>
        <link refid="class_game_1_1_e_p_e_c"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Game::AbstractGame&lt; Data::EPEC::DataObject &gt;</label>
        <link refid="class_game_1_1_abstract_game"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11">
        <label>Attr&lt; std::vector&lt; unsigned int &gt; &gt;</label>
        <link refid="class_attr"/>
      </node>
      <node id="4">
        <label>ZEROStatistics&lt; Data::EPEC::DataObject &gt;</label>
        <link refid="struct_z_e_r_o_statistics"/>
        <childnode refid="5" relation="usage">
          <edgelabel>WallClockTime</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>AlgorithmData</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>NumConstraints</edgelabel>
          <edgelabel>NumNonZero</edgelabel>
          <edgelabel>NumIterations</edgelabel>
          <edgelabel>NumVar</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>PureNashEquilibrium</edgelabel>
          <edgelabel>NumericalIssues</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>Status</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>Attr&lt; ZEROStatus &gt;</label>
        <link refid="class_attr"/>
      </node>
      <node id="1">
        <label>Models::EPEC::EPEC</label>
        <link refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>Attr&lt; int &gt;</label>
        <link refid="class_attr"/>
      </node>
      <node id="15">
        <label>Attr&lt; Data::LCP::PolyhedraStrategy &gt;</label>
        <link refid="class_attr"/>
      </node>
      <node id="14">
        <label>Attr&lt; Data::EPEC::Algorithms &gt;</label>
        <link refid="class_attr"/>
      </node>
      <node id="10">
        <label>Attr&lt; bool &gt;</label>
        <link refid="class_attr"/>
      </node>
      <node id="6">
        <label>Data::EPEC::DataObject</label>
        <link refid="class_data_1_1_e_p_e_c_1_1_data_object"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>BoundBigM</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>FeasiblePolyhedra</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>LostIntermediateEq</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>Aggressiveness</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>RecoverStrategy</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>BoundPrimals</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>Algorithm</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>PolyhedraStrategy</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>Game::EPEC</label>
        <link refid="class_game_1_1_e_p_e_c"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>Attr&lt; unsigned int &gt;</label>
        <link refid="class_attr"/>
      </node>
      <node id="5">
        <label>Attr&lt; double &gt;</label>
        <link refid="class_attr"/>
      </node>
      <node id="7">
        <label>ZEROAlgorithmData</label>
        <link refid="class_z_e_r_o_algorithm_data"/>
        <childnode refid="5" relation="usage">
          <edgelabel>DeviationTolerance</edgelabel>
          <edgelabel>TimeLimit</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>RandomSeed</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>Threads</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>PureNashEquilibrium</edgelabel>
          <edgelabel>IndicatorConstraints</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>Attr&lt; unsigned long int &gt;</label>
        <link refid="class_attr"/>
      </node>
      <node id="3">
        <label>Game::AbstractGame&lt; Data::EPEC::DataObject &gt;</label>
        <link refid="class_game_1_1_abstract_game"/>
        <childnode refid="4" relation="usage">
          <edgelabel>Stats</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>Attr&lt; Data::EPEC::RecoverStrategy &gt;</label>
        <link refid="class_attr"/>
      </node>
    </collaborationgraph>
    <location file="include/interfaces/epec_models.h" line="193" column="30" bodyfile="include/interfaces/epec_models.h" bodystart="193" bodyend="318"/>
    <listofallmembers>
      <member refid="class_game_1_1_abstract_game_1a994e78ea9cbe14be8786836082024e9a" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>AbstractGame</name></member>
      <member refid="class_game_1_1_abstract_game_1a112372b7b49c59c64538fa065fdbe54f" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>AbstractGame</name></member>
      <member refid="class_game_1_1_abstract_game_1a29232b09b7a9b7f61e5d04ce83fe8f1d" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>AbstractGame</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a7acddde752207371fc45b45aa7e50051" prot="private" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>add_Leaders_tradebalance_constraints</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a8a8cff4155357f72cb79e0e20fee2b15" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>addCountry</name></member>
      <member refid="class_game_1_1_e_p_e_c_1ae0bd0fb7910bc4735c0c6481e1ab7c60" prot="private" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>addDummyLead</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a26d79f1a96b8af1db717230d13e2745d" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>addTranspCosts</name></member>
      <member refid="class_game_1_1_e_p_e_c_1a085ac9ace1a3aef12e61c03463dee800" prot="private" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>Algorithm</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a69697419a0ea756dd5022dcbe1ee7de3" prot="private" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>AllLeadPars</name></member>
      <member refid="class_game_1_1_e_p_e_c_1afcd0018e01a696881c8da744a3a05048" prot="private" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>computeLeaderLocations</name></member>
      <member refid="class_game_1_1_e_p_e_c_1a37dca6fc0a76c12bc4bc0eac602e3633" prot="private" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>computeNashEq</name></member>
      <member refid="class_game_1_1_e_p_e_c_1afd414e30d05368455d9a2eaa166b6bfb" prot="protected" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>ConvexHullVariables</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a154b8c059d6ba5d1cc9c9e663a418ea5" prot="private" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>dataCheck</name></member>
      <member refid="class_game_1_1_abstract_game_1ad6cd844e2dcfbc9ce2b8069c6ef3e2be" prot="protected" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>Env</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1ae10e18bed4eac1c033eed3be039845f8" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>EPEC</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a960798d05fd3e8859898849f15313c8a" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>EPEC</name></member>
      <member refid="class_game_1_1_e_p_e_c_1a2323518f6af325c254eaad444cea1317" prot="public" virt="non-virtual" ambiguityscope="Game::EPEC::"><scope>Models::EPEC::EPEC</scope><name>EPEC</name></member>
      <member refid="class_game_1_1_e_p_e_c_1ab32d89068adc66f100a266bbf31bf63e" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>finalize</name></member>
      <member refid="class_game_1_1_e_p_e_c_1a9e4f44f67e4a2956673398847e5db614" prot="protected" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>Finalized</name></member>
      <member refid="class_game_1_1_e_p_e_c_1a0ccc0813ba049fed45db48d398b04c6e" prot="public" virt="virtual"><scope>Models::EPEC::EPEC</scope><name>findNashEq</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a35c05b8bba47be6ae9c5b65ede8730ca" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>get_LowerLevelNash</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a4253f88333be71b7ea62819394a9e275" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>getInstance</name></member>
      <member refid="class_game_1_1_e_p_e_c_1ad22d714e49ed16225baa3ff71abf27b1" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>getLCPDescription</name></member>
      <member refid="class_game_1_1_e_p_e_c_1af4ba9e089745932ff3bf24897af53e5f" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>getLCPModel</name></member>
      <member refid="class_game_1_1_abstract_game_1a6a84032e333484d0313064cfee3ba46c" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>getNumPlayers</name></member>
      <member refid="class_game_1_1_abstract_game_1ad3f7c02e978d71834bc13b74162571f4" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>getNumVar</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a849ce1188daf628c3f38e36f1a62d560" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>getPosition</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1abf53e0176e1a6a4fde2e1dc3a8323875" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>getPosition</name></member>
      <member refid="class_game_1_1_e_p_e_c_1a0bf1c7483795c1f08baabf2426ca933d" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>getPositionLeadFoll</name></member>
      <member refid="class_game_1_1_e_p_e_c_1aec1b59c633f797063362b0ae4323f8ea" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>getPositionLeadLead</name></member>
      <member refid="class_game_1_1_abstract_game_1a8db787260e01e0a9004d00f2a19fcf5a" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>getStatistics</name></member>
      <member refid="class_game_1_1_e_p_e_c_1a723c245afbc41788c993566aca9f238c" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>getValLeadFoll</name></member>
      <member refid="class_game_1_1_e_p_e_c_1a24faf8f9033094c380f38fe3f6609a27" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>getValLeadLead</name></member>
      <member refid="class_game_1_1_e_p_e_c_1aacb304f764e52114fdedef15a0a90558" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>getX</name></member>
      <member refid="class_game_1_1_e_p_e_c_1a03f5dc3947750c69b9c3bfdf675ab394" prot="private" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>getXMinusI</name></member>
      <member refid="class_game_1_1_e_p_e_c_1a6f84ee2018f9bb85d0b1b53e65ff85e4" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>getXofI</name></member>
      <member refid="class_game_1_1_e_p_e_c_1aa20feaa35c98de9e134190579a400cf7" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>getXWithoutHull</name></member>
      <member refid="class_game_1_1_e_p_e_c_1aaaca9d7917b658c77e2fe048bf7a7214" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>getZ</name></member>
      <member refid="class_game_1_1_abstract_game_1a6d06c8b5fe1f191283a9926b30d6b1d0" prot="protected" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>InitTime</name></member>
      <member refid="class_game_1_1_e_p_e_c_1aace867d4b45457e8758741ed9db7b349" prot="public" virt="virtual"><scope>Models::EPEC::EPEC</scope><name>isPureStrategy</name></member>
      <member refid="class_game_1_1_e_p_e_c_1aee023f968cf0b8587a5150c52fe3368c" prot="public" virt="virtual"><scope>Models::EPEC::EPEC</scope><name>isSolved</name></member>
      <member refid="class_game_1_1_e_p_e_c_1a38b32268297c5cdf5334853d3ee2ba82" prot="private" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>LCPModel</name></member>
      <member refid="class_game_1_1_e_p_e_c_1ada0cf8c4cefee9d0e3f6fcd29aa4fac0" prot="private" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>LCPModelBase</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a49be3a42fdf9b574ca76f628d889e0c4" prot="private" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>LeadConses</name></member>
      <member refid="class_game_1_1_e_p_e_c_1a59b0ccd12c05db259bb7ca056daf453d" prot="protected" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>LeaderLocations</name></member>
      <member refid="class_game_1_1_e_p_e_c_1a65834e121a2b29b9205ceb6a237e9e26" prot="protected" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>LeaderObjective</name></member>
      <member refid="class_game_1_1_e_p_e_c_1af5076cedacee25f93af12fa10dc78c26" prot="protected" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>LeaderObjectiveConvexHull</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a9f80ff122ac9a8d1838f9441e89427fa" prot="private" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>LeadRHSes</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1af0a58c85d840088f79b601e24ab9a74f" prot="private" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>Locations</name></member>
      <member refid="class_game_1_1_e_p_e_c_1a618f3df2c40a9d456f9ceaf00802967c" prot="protected" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>LocEnds</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a6d6ce5abcdff2aaaf4642280a2ef8c28" prot="private" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>make_LL_LeadCons</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a122117d4c57bee405be243a8bd5b3900" prot="private" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>make_LL_QP</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a635714c3f1ec34be9a065b3dd038d7e0" prot="private" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>make_MC_leader</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a57ed71a45cb81cc4535077b226e29cd3" prot="private" virt="virtual"><scope>Models::EPEC::EPEC</scope><name>makeMCConstraints</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1af9b5969ab223aee61ec00ab7be39694c" prot="private" virt="virtual"><scope>Models::EPEC::EPEC</scope><name>makeObjectivePlayer</name></member>
      <member refid="class_game_1_1_e_p_e_c_1a66b446e508a6079805e7d8900f5db4ed" prot="private" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>makePlayerQP</name></member>
      <member refid="class_game_1_1_e_p_e_c_1a5db4c964c3d451ab55a5630e565753d0" prot="private" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>makePlayersQPs</name></member>
      <member refid="class_game_1_1_e_p_e_c_1a4d84d3af33242733ec32b89f91d49158" prot="private" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>makeTheLCP</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a2ccddf5a2e6c51171c6ac3d2956e12b3" prot="private" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>MC_QP</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a2295d58cdcea06cd142ff9bfd6e531ae" prot="private" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>name2nos</name></member>
      <member refid="class_game_1_1_abstract_game_1ab8f814c2c71542d1aa73bd66ef93befc" prot="protected" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>NashEquilibrium</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a5f3279a7696f3e2b4c23daffbd717b7a" prot="private" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>nImportMarkets</name></member>
      <member refid="class_game_1_1_e_p_e_c_1aacadd9d4fb3fd17d2f142db8758f1be9" prot="protected" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>numMCVariables</name></member>
      <member refid="class_game_1_1_abstract_game_1a01da21edfe49ed5771a9eed714b87418" prot="protected" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>NumPlayers</name></member>
      <member refid="class_game_1_1_abstract_game_1a2fd0ab6ee7cda7a9a582b79e94705bc7" prot="protected" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>NumVariables</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1ae87273bcce3c01602cc63184a55938d9" prot="private" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>ParamValid</name></member>
      <member refid="class_game_1_1_e_p_e_c_1a5301b68b3b37d23c444784282f9c9c9c" prot="protected" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>PlayersLCP</name></member>
      <member refid="class_game_1_1_e_p_e_c_1a1dc1b8bd642e450bc1e30eefe963fe13" prot="protected" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>PlayersLowerLevels</name></member>
      <member refid="class_game_1_1_e_p_e_c_1a6ea789c5d7ad13d9874038b605a98137" prot="protected" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>PlayersQP</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1aa05e61126be41d14b21f20da2bbfc877" prot="private" virt="virtual"><scope>Models::EPEC::EPEC</scope><name>postFinalize</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1aa7d051d95e2c72c1250f3555c6d46cd1" prot="private" virt="virtual"><scope>Models::EPEC::EPEC</scope><name>preFinalize</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1afde63c75410c93072061aed0a6eaa91b" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>quadraticTax</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a696d901ed61f65d46c722e9536d21dbf" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>readSolutionJSON</name></member>
      <member refid="class_game_1_1_e_p_e_c_1ad53ac72b21e5d73db9e552aa23fb2fec" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>reset</name></member>
      <member refid="class_game_1_1_e_p_e_c_1a6dc4295a2c585a695ca5c1b54f8a7883" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>respond</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1ae844cbd36b22ca25d746a88a3425bb6e" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>Respond</name></member>
      <member refid="class_game_1_1_e_p_e_c_1a3fcda0d435da9c183b73df244ac863a0" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>respondSol</name></member>
      <member refid="class_game_1_1_e_p_e_c_1a73bc0d776af3885481aafab39cff90d9" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>setAddPolyMethod</name></member>
      <member refid="class_game_1_1_e_p_e_c_1a3425d5ca9abea1e5ab18f5e53bf91bd5" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>setAggressiveness</name></member>
      <member refid="class_game_1_1_e_p_e_c_1acbc098323dd83d07fa249630c8a56536" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>setAlgorithm</name></member>
      <member refid="class_game_1_1_e_p_e_c_1aab6e24f25d193a514b2c97681a5d2df8" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>setBoundBigM</name></member>
      <member refid="class_game_1_1_e_p_e_c_1a4b6238b4052069f2fd7122f327bb70c5" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>setBoundPrimals</name></member>
      <member refid="class_game_1_1_abstract_game_1a4b5301f753b2f1dacdb354971d2511ee" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>setDeviationTolerance</name></member>
      <member refid="class_game_1_1_abstract_game_1af08964bd9ddff0910b3e3f7d4c91ba95" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>setIndicators</name></member>
      <member refid="class_game_1_1_abstract_game_1a8b891e54ad22f7364e8f164c37848aa8" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>setNumThreads</name></member>
      <member refid="class_game_1_1_abstract_game_1ab3f40775d56c9ca540961b99ce646960" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>setPureNashEquilibrium</name></member>
      <member refid="class_game_1_1_abstract_game_1a8f9d5a9d366c2604993c3e3df4e69b6a" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>setRandomSeed</name></member>
      <member refid="class_game_1_1_e_p_e_c_1ac14487f892f9d94d7d783e874fe4b5d9" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>setRecoverStrategy</name></member>
      <member refid="class_game_1_1_abstract_game_1a44346c2909132d7977b6fb4ac4852723" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>setTimeLimit</name></member>
      <member refid="class_game_1_1_e_p_e_c_1ad0c30f87298df78ec8b2275fc272745f" prot="private" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>SizesWithoutHull</name></member>
      <member refid="class_game_1_1_e_p_e_c_1ac897450f8b0afb2346e872de2fbc82eb" prot="protected" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>SolutionX</name></member>
      <member refid="class_game_1_1_e_p_e_c_1aa1a2f0e5df60ca00ccad7b9a8a4f1c8a" prot="protected" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>SolutionZ</name></member>
      <member refid="class_game_1_1_abstract_game_1a5ecc6e6433baef6b13f35d7bb45856ce" prot="protected" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>Stats</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a11ee844677fcd746018f279d4fc611d2" prot="private" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>taxVars</name></member>
      <member refid="class_game_1_1_e_p_e_c_1a81fe60e0415d65cf8d300c2aa4050cc5" prot="private" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>TheLCP</name></member>
      <member refid="class_game_1_1_e_p_e_c_1a92ad8e8ed1ff48bcd5509dcbf893c185" prot="protected" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>TheNashGame</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1ae4a170ddb96851a3c1b776a4c6467978" prot="private" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>TranspCosts</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1ac2a5f4108c8156d8cd278e3d166ddef9" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>unlock</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a3a25799be8d18f62c5d91d248a2bed5f" prot="private" virt="virtual"><scope>Models::EPEC::EPEC</scope><name>updateLocations</name></member>
      <member refid="class_game_1_1_e_p_e_c_1a219d10c724c0165cc0d8a1a7d613580d" prot="protected" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>warmstart</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a90dd7d8a4e173ffcc557fba0baa22397" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>write</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a445a1100d51a9e39b1d4e36c9ecdcf53" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>write</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1ad6ecc1d83f7bf33da132c565c02e5607" prot="private" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>WriteCountry</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a20a5f242a9dd5978bd870e513f8c5d0b" prot="private" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>WriteFollower</name></member>
      <member refid="class_game_1_1_e_p_e_c_1a37fed0d5194d7d4a25953e117593b3a4" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>writeLCPModel</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a44202edc587c0a8d03f159238e8a90cf" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>writeSolution</name></member>
      <member refid="class_models_1_1_e_p_e_c_1_1_e_p_e_c_1a6e7e98497395831e6c65cc7c5096839d" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>writeSolutionJSON</name></member>
      <member refid="class_game_1_1_abstract_game_1a1c50cfa3e8b728eebb8662ed184b206a" prot="public" virt="non-virtual"><scope>Models::EPEC::EPEC</scope><name>~AbstractGame</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
