<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="class_algorithms_1_1_algorithm" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>Algorithms::Algorithm</compoundname>
    <derivedcompoundref refid="class_algorithms_1_1_outer_approximation" prot="public" virt="non-virtual">Algorithms::OuterApproximation</derivedcompoundref>
    <derivedcompoundref refid="class_algorithms_1_1_poly_base" prot="public" virt="non-virtual">Algorithms::PolyBase</derivedcompoundref>
    <includes refid="algorithms_8h" local="no">algorithms.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_algorithms_1_1_algorithm_1a6dcf349b10b8a08d7c54b4df3e599264" prot="protected" static="no" mutable="no">
        <type>GRBEnv *</type>
        <definition>GRBEnv* Algorithms::Algorithm::Env</definition>
        <argsstring></argsstring>
        <name>Env</name>
        <briefdescription>
<para>This abstract class is the base type that every algorithm inherits. </para>
        </briefdescription>
        <detaileddescription>
<para>A pointer to the Gurobi Environment </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/algorithms.h" line="22" column="10" bodyfile="include/algorithms/algorithms.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_algorithms_1_1_algorithm_1afaa849a6223a6abd701d4715cc55708c" prot="protected" static="no" mutable="no">
        <type><ref refid="class_game_1_1_e_p_e_c" kindref="compound">Game::EPEC</ref> *</type>
        <definition>Game::EPEC* Algorithms::Algorithm::EPECObject</definition>
        <argsstring></argsstring>
        <name>EPECObject</name>
        <briefdescription>
<para>A pointer to the original LCP object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/algorithms.h" line="23" column="14" bodyfile="include/algorithms/algorithms.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_algorithms_1_1_algorithm_1ae1259794a607355e05218dccc00b8cba" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Algorithms::Algorithm::postSolving</definition>
        <argsstring>()=0</argsstring>
        <name>postSolving</name>
        <reimplementedby refid="class_algorithms_1_1_poly_base_1a66e196274f52293e5d442a3c1e44220e">postSolving</reimplementedby>
        <reimplementedby refid="class_algorithms_1_1_outer_approximation_1af2c96b2ed6fdf2d742527809c5f162e4">postSolving</reimplementedby>
        <briefdescription>
<para>A protected method to be called after solving the EPEC. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/algorithms.h" line="25" column="3"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_algorithms_1_1_algorithm_1af1b96485ef86b1004228ffdfe6adaedf" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Algorithms::Algorithm::solve</definition>
        <argsstring>()=0</argsstring>
        <name>solve</name>
        <reimplementedby refid="class_algorithms_1_1_full_enumeration_1a89e0fef5d595f696274a4a2cb8ba1928">solve</reimplementedby>
        <reimplementedby refid="class_algorithms_1_1_inner_approximation_1a838bbec8e360092ca82d0cee4c3848eb">solve</reimplementedby>
        <reimplementedby refid="class_algorithms_1_1_combinatorial_p_n_e_1a292a9864abda3879b6870e56f740bede">solve</reimplementedby>
        <reimplementedby refid="class_algorithms_1_1_outer_approximation_1aa9dd85578ba5a76cd1aff09df7f5b532">solve</reimplementedby>
        <briefdescription>
<para>A method to solve the EPEC. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/algorithms.h" line="28" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_algorithms_1_1_algorithm_1abb0cd9edc4ad90b96499bce47475b4d7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool Algorithms::Algorithm::isSolved</definition>
        <argsstring>(double tol=-1) const =0</argsstring>
        <name>isSolved</name>
        <reimplementedby refid="class_algorithms_1_1_poly_base_1ac27d78674528f933621deccc71f66501">isSolved</reimplementedby>
        <reimplementedby refid="class_algorithms_1_1_outer_approximation_1aa9cdf5883a0b9f2f56985ed35a22b37d">isSolved</reimplementedby>
        <param>
          <type>double</type>
          <declname>tol</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A method to check whether the EPEC is solved or not, given a numerical tolerance </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/algorithms.h" line="29" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_algorithms_1_1_algorithm_1a96cdcca66c77e71c02092b58b52a8f6b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool Algorithms::Algorithm::isPureStrategy</definition>
        <argsstring>(double tol=-1) const =0</argsstring>
        <name>isPureStrategy</name>
        <reimplementedby refid="class_algorithms_1_1_outer_approximation_1abab0fa5a604365d3917bbc94dc5ed638">isPureStrategy</reimplementedby>
        <reimplementedby refid="class_algorithms_1_1_poly_base_1a7bf62bee2c06bc6b3de5f4a1bbacf716">isPureStrategy</reimplementedby>
        <param>
          <type>double</type>
          <declname>tol</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A method to check whether the EPEC solution is a pure equilibrium or not, given a numerical tolerance </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/algorithms/algorithms.h" line="32" column="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The namespace <ref refid="namespace_algorithms" kindref="compound">Algorithms</ref> is responsible for the management of the algorithms that solve EPECs. Generally, the namespace is organized with multiple-level inheritances. The basic class is <ref refid="class_algorithms_1_1_algorithm" kindref="compound">Algorithm</ref>, which implements some basic capabilities that all algorithms are sharing. Then, <ref refid="class_algorithms_1_1_poly_base" kindref="compound">PolyBase</ref> managed the algorithm that either inner-approximate or full-enumerate the feasible region of each EPEC&apos;s player (3rd level inheritors: e.g., Algorithm-&gt;PolyBase-&gt;<ref refid="class_algorithms_1_1_full_enumeration" kindref="compound">FullEnumeration</ref>). The <ref refid="class_algorithms_1_1_outer_approximation" kindref="compound">OuterApproximation</ref> class (2nd level inheritance) manages the outer approximation. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>Algorithms::PolyBase</label>
        <link refid="class_algorithms_1_1_poly_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>Algorithms::InnerApproximation</label>
        <link refid="class_algorithms_1_1_inner_approximation"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Algorithms::OuterApproximation</label>
        <link refid="class_algorithms_1_1_outer_approximation"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Algorithms::FullEnumeration</label>
        <link refid="class_algorithms_1_1_full_enumeration"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Algorithms::Algorithm</label>
        <link refid="class_algorithms_1_1_algorithm"/>
      </node>
      <node id="4">
        <label>Algorithms::CombinatorialPNE</label>
        <link refid="class_algorithms_1_1_combinatorial_p_n_e"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>Game::EPECStatistics</label>
        <link refid="struct_game_1_1_e_p_e_c_statistics"/>
        <childnode refid="4" relation="usage">
          <edgelabel>AlgorithmParam</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>Game::EPECAlgorithmParams</label>
        <link refid="struct_game_1_1_e_p_e_c_algorithm_params"/>
      </node>
      <node id="2">
        <label>Game::EPEC</label>
        <link refid="class_game_1_1_e_p_e_c"/>
        <childnode refid="3" relation="usage">
          <edgelabel>Stats</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>Algorithms::Algorithm</label>
        <link refid="class_algorithms_1_1_algorithm"/>
        <childnode refid="2" relation="usage">
          <edgelabel>EPECObject</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/algorithms/algorithms.h" line="16" column="16" bodyfile="include/algorithms/algorithms.h" bodystart="16" bodyend="35"/>
    <listofallmembers>
      <member refid="class_algorithms_1_1_algorithm_1a6dcf349b10b8a08d7c54b4df3e599264" prot="protected" virt="non-virtual"><scope>Algorithms::Algorithm</scope><name>Env</name></member>
      <member refid="class_algorithms_1_1_algorithm_1afaa849a6223a6abd701d4715cc55708c" prot="protected" virt="non-virtual"><scope>Algorithms::Algorithm</scope><name>EPECObject</name></member>
      <member refid="class_algorithms_1_1_algorithm_1a96cdcca66c77e71c02092b58b52a8f6b" prot="public" virt="pure-virtual"><scope>Algorithms::Algorithm</scope><name>isPureStrategy</name></member>
      <member refid="class_algorithms_1_1_algorithm_1abb0cd9edc4ad90b96499bce47475b4d7" prot="public" virt="pure-virtual"><scope>Algorithms::Algorithm</scope><name>isSolved</name></member>
      <member refid="class_algorithms_1_1_algorithm_1ae1259794a607355e05218dccc00b8cba" prot="protected" virt="pure-virtual"><scope>Algorithms::Algorithm</scope><name>postSolving</name></member>
      <member refid="class_algorithms_1_1_algorithm_1af1b96485ef86b1004228ffdfe6adaedf" prot="public" virt="pure-virtual"><scope>Algorithms::Algorithm</scope><name>solve</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
