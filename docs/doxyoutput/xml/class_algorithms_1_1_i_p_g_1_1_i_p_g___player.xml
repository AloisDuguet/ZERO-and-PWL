<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="class_algorithms_1_1_i_p_g_1_1_i_p_g___player" kind="class" language="C++" prot="public">
    <compoundname>Algorithms::IPG::IPG_Player</compoundname>
    <includes refid="ipg__oracle_8h" local="no">ipg_oracle.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1a84836887d30b770869453f4943bdbfe2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Algorithms::IPG::Oracle</definition>
        <argsstring></argsstring>
        <name>Algorithms::IPG::Oracle</name>
        <briefdescription>
<para>This structures manages the <ref refid="namespace_algorithms_1_1_i_p_g" kindref="compound">IPG</ref> data for each player of the game, given the Oracle.It inherits a GRBCallback to handle Gurobi callback. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/algorithms/IPG/ipg_oracle.h" line="33" column="1" bodyfile="include/games/algorithms/IPG/ipg_oracle.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1a6e8254c30f352093fa6350fc8db563bb" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; GRBModel &gt;</type>
        <definition>std::unique_ptr&lt;GRBModel&gt; Algorithms::IPG::IPG_Player::Model</definition>
        <argsstring></argsstring>
        <name>Model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/algorithms/IPG/ipg_oracle.h" line="47" column="17" bodyfile="include/games/algorithms/IPG/ipg_oracle.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1a398ed920aeb477c77538dadef1ef33b8" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; GRBModel &gt;</type>
        <definition>std::unique_ptr&lt;GRBModel&gt; Algorithms::IPG::IPG_Player::MembershipLP</definition>
        <argsstring></argsstring>
        <name>MembershipLP</name>
        <briefdescription>
<para>The model approximating the feasible region with vertices and rays. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/algorithms/IPG/ipg_oracle.h" line="51" column="2" bodyfile="include/games/algorithms/IPG/ipg_oracle.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1a5b65eb80d5d0e5a3f6b1432a35d01224" prot="protected" static="no" mutable="no">
        <type>arma::sp_mat</type>
        <definition>arma::sp_mat Algorithms::IPG::IPG_Player::V</definition>
        <argsstring></argsstring>
        <name>V</name>
        <initializer>= {}</initializer>
        <briefdescription>
<para>This object stores an array of points <ndash/> for each player <ndash/> that are descriptor for the convex-hull of the integer programming game. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/algorithms/IPG/ipg_oracle.h" line="52" column="14" bodyfile="include/games/algorithms/IPG/ipg_oracle.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1aea720c4309cef88548398e920e71a904" prot="protected" static="no" mutable="no">
        <type>arma::sp_mat</type>
        <definition>arma::sp_mat Algorithms::IPG::IPG_Player::R</definition>
        <argsstring></argsstring>
        <name>R</name>
        <initializer>= {}</initializer>
        <briefdescription>
<para>As in V, but for rays. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/algorithms/IPG/ipg_oracle.h" line="54" column="14" bodyfile="include/games/algorithms/IPG/ipg_oracle.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1aef57ff8821ab83f94d9c0e0b87d637a7" prot="protected" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Algorithms::IPG::IPG_Player::VertexCounter</definition>
        <argsstring></argsstring>
        <name>VertexCounter</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>The number of Vertices in the membership LP. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/algorithms/IPG/ipg_oracle.h" line="55" column="14" bodyfile="include/games/algorithms/IPG/ipg_oracle.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1a25b389df8596b50a64191cac6000f783" prot="protected" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Algorithms::IPG::IPG_Player::RayCounter</definition>
        <argsstring></argsstring>
        <name>RayCounter</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>The number or Rays in the membership LP. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/algorithms/IPG/ipg_oracle.h" line="56" column="14" bodyfile="include/games/algorithms/IPG/ipg_oracle.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1a2b91a7f9164abb1f10d188d6a561932e" prot="protected" static="no" mutable="no">
        <type>arma::sp_mat</type>
        <definition>arma::sp_mat Algorithms::IPG::IPG_Player::CutPool_A</definition>
        <argsstring></argsstring>
        <name>CutPool_A</name>
        <initializer>=
			 {}</initializer>
        <briefdescription>
<para>Stores the LHS of the valids cuts for the convex hull of the player&apos;s <ref refid="namespace_algorithms_1_1_i_p_g" kindref="compound">IPG</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/algorithms/IPG/ipg_oracle.h" line="57" column="14" bodyfile="include/games/algorithms/IPG/ipg_oracle.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1a3cf7e5a53a2680b0ae7ff706fb83e5a7" prot="protected" static="no" mutable="no">
        <type>arma::vec</type>
        <definition>arma::vec Algorithms::IPG::IPG_Player::CutPool_b</definition>
        <argsstring></argsstring>
        <name>CutPool_b</name>
        <initializer>=
			 {}</initializer>
        <briefdescription>
<para>Stores the RHS of the valids cuts for the convex hull of the player&apos;s <ref refid="namespace_algorithms_1_1_i_p_g" kindref="compound">IPG</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/algorithms/IPG/ipg_oracle.h" line="59" column="11" bodyfile="include/games/algorithms/IPG/ipg_oracle.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1a3fdbed53232ff46305161fa54a90443d" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Algorithms::IPG::IPG_Player::Tolerance</definition>
        <argsstring></argsstring>
        <name>Tolerance</name>
        <initializer>= 1e-6</initializer>
        <briefdescription>
<para>Numerical tolerance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/algorithms/IPG/ipg_oracle.h" line="61" column="11" bodyfile="include/games/algorithms/IPG/ipg_oracle.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1a16b2bd1139fafc77cf5c8939fff68a4b" prot="protected" static="no" mutable="no">
        <type>arma::vec</type>
        <definition>arma::vec Algorithms::IPG::IPG_Player::Incumbent</definition>
        <argsstring></argsstring>
        <name>Incumbent</name>
        <briefdescription>
<para>Stores the current strategy of the player at a given iteration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/algorithms/IPG/ipg_oracle.h" line="62" column="11" bodyfile="include/games/algorithms/IPG/ipg_oracle.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1aaf2a399c6a31b7facf0d126d64e656ef" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Algorithms::IPG::IPG_Player::Payoff</definition>
        <argsstring></argsstring>
        <name>Payoff</name>
        <briefdescription>
<para>Stores the current payof. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/algorithms/IPG/ipg_oracle.h" line="63" column="11" bodyfile="include/games/algorithms/IPG/ipg_oracle.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1a6d6bc1314ea29425f1c912e0c8ebd1bd" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Algorithms::IPG::IPG_Player::Pure</definition>
        <argsstring></argsstring>
        <name>Pure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/algorithms/IPG/ipg_oracle.h" line="64" column="11" bodyfile="include/games/algorithms/IPG/ipg_oracle.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1ab3310ec7c7a9695692297f51bea13f1d" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Algorithms::IPG::IPG_Player::Feasible</definition>
        <argsstring></argsstring>
        <name>Feasible</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/algorithms/IPG/ipg_oracle.h" line="65" column="11" bodyfile="include/games/algorithms/IPG/ipg_oracle.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1a9b63af05c7eaf1155aabb9093c270e43" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Algorithms::IPG::IPG_Player::IPG_Player</definition>
        <argsstring>(GRBEnv e, unsigned int incumbentSize, std::shared_ptr&lt; GRBModel &gt; model, double tol)</argsstring>
        <name>IPG_Player</name>
        <param>
          <type>GRBEnv</type>
          <declname>e</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>incumbentSize</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; GRBModel &gt;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Given the <computeroutput>e</computeroutput> as the Gurobi environment, the size of the player&apos;s own decision variables <computeroutput>incumentSize</computeroutput>, and the pointer <computeroutput>model</computeroutput> to the original IP model, initializes the data structure.</para>
        </inbodydescription>
        <location file="include/games/algorithms/IPG/ipg_oracle.h" line="34" column="1" bodyfile="include/games/algorithms/IPG/ipg_oracle.h" bodystart="34" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1a15c7dd2c56366421b381137bc946c8fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Algorithms::IPG::IPG_Player::addVertex</definition>
        <argsstring>(const arma::vec vertex, const bool checkDuplicate=true)</argsstring>
        <name>addVertex</name>
        <param>
          <type>const arma::vec</type>
          <declname>vertex</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>checkDuplicate</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Given <computeroutput>vertex</computeroutput>, it adds a vertex to the field R. If <computeroutput>checkDuplicate</computeroutput> is true, it will check whether the vertex is already contained in the bool. <simplesect kind="return"><para>true if the vertex is added.</para>
</simplesect>
</para>
        </inbodydescription>
        <location file="include/games/algorithms/IPG/ipg_oracle.h" line="68" column="6" bodyfile="src/games/algorithms/IPG/ipg_oracle.cpp" bodystart="36" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1a007c148aa0174f9aea1785ae466d1874" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Algorithms::IPG::IPG_Player::addRay</definition>
        <argsstring>(const arma::vec ray, const bool checkDuplicate=true)</argsstring>
        <name>addRay</name>
        <param>
          <type>const arma::vec</type>
          <declname>ray</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>checkDuplicate</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Given <computeroutput>ray</computeroutput>, it adds a ray to the field R. If <computeroutput>checkDuplicate</computeroutput> is true, it will check whether the ray is already contained in the bool. <simplesect kind="return"><para>true if the ray is added.</para>
</simplesect>
</para>
        </inbodydescription>
        <location file="include/games/algorithms/IPG/ipg_oracle.h" line="70" column="6" bodyfile="src/games/algorithms/IPG/ipg_oracle.cpp" bodystart="76" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1a3f55c6dbb6be3356752680663ee52c8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Algorithms::IPG::IPG_Player::addCut</definition>
        <argsstring>(const arma::vec LHS, const double b, const bool checkDuplicate=true)</argsstring>
        <name>addCut</name>
        <param>
          <type>const arma::vec</type>
          <declname>LHS</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>checkDuplicate</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Given <computeroutput>LHS</computeroutput>, <computeroutput>b</computeroutput>, it adds the inequality to the field CutPool_A and b. If <computeroutput>checkDuplicate</computeroutput> is true, it will check whether the inequality is already contained in the bool. <simplesect kind="return"><para>true if the inequality is added.</para>
</simplesect>
</para>
        </inbodydescription>
        <location file="include/games/algorithms/IPG/ipg_oracle.h" line="72" column="6" bodyfile="src/games/algorithms/IPG/ipg_oracle.cpp" bodystart="53" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1ae72b1a293f7f009a042beb4192e04939" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const double</type>
        <definition>const double Algorithms::IPG::IPG_Player::getPayoff</definition>
        <argsstring>()</argsstring>
        <name>getPayoff</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/algorithms/IPG/ipg_oracle.h" line="74" column="14" bodyfile="include/games/algorithms/IPG/ipg_oracle.h" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1a80cd7126850dffe3aa820062d2bcf1e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const arma::sp_mat</type>
        <definition>const arma::sp_mat Algorithms::IPG::IPG_Player::getCutPoolA</definition>
        <argsstring>()</argsstring>
        <name>getCutPoolA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/algorithms/IPG/ipg_oracle.h" line="76" column="20" bodyfile="include/games/algorithms/IPG/ipg_oracle.h" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1a2c9bc848b39e027271c4856ceb168fe1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const arma::vec</type>
        <definition>const arma::vec Algorithms::IPG::IPG_Player::getCutPoolb</definition>
        <argsstring>()</argsstring>
        <name>getCutPoolb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/algorithms/IPG/ipg_oracle.h" line="77" column="20" bodyfile="include/games/algorithms/IPG/ipg_oracle.h" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1a25459199d67614abfa84874a8fb311b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Algorithms::IPG::IPG_Player::updateIPModel</definition>
        <argsstring>(std::unique_ptr&lt; GRBModel &gt; IPmodel)</argsstring>
        <name>updateIPModel</name>
        <param>
          <type>std::unique_ptr&lt; GRBModel &gt;</type>
          <declname>IPmodel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Gets the model in IPModel, and adds the known cuts from the current pool</para>
        </inbodydescription>
        <location file="include/games/algorithms/IPG/ipg_oracle.h" line="79" column="6" bodyfile="src/games/algorithms/IPG/ipg_oracle.cpp" bodystart="21" bodyend="34"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/games/algorithms/IPG/ipg_oracle.h" line="28" column="18" bodyfile="include/games/algorithms/IPG/ipg_oracle.h" bodystart="28" bodyend="80"/>
    <listofallmembers>
      <member refid="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1a3f55c6dbb6be3356752680663ee52c8b" prot="public" virt="non-virtual"><scope>Algorithms::IPG::IPG_Player</scope><name>addCut</name></member>
      <member refid="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1a007c148aa0174f9aea1785ae466d1874" prot="public" virt="non-virtual"><scope>Algorithms::IPG::IPG_Player</scope><name>addRay</name></member>
      <member refid="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1a15c7dd2c56366421b381137bc946c8fb" prot="public" virt="non-virtual"><scope>Algorithms::IPG::IPG_Player</scope><name>addVertex</name></member>
      <member refid="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1a84836887d30b770869453f4943bdbfe2" prot="public" virt="non-virtual"><scope>Algorithms::IPG::IPG_Player</scope><name>Algorithms::IPG::Oracle</name></member>
      <member refid="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1a2b91a7f9164abb1f10d188d6a561932e" prot="protected" virt="non-virtual"><scope>Algorithms::IPG::IPG_Player</scope><name>CutPool_A</name></member>
      <member refid="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1a3cf7e5a53a2680b0ae7ff706fb83e5a7" prot="protected" virt="non-virtual"><scope>Algorithms::IPG::IPG_Player</scope><name>CutPool_b</name></member>
      <member refid="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1ab3310ec7c7a9695692297f51bea13f1d" prot="protected" virt="non-virtual"><scope>Algorithms::IPG::IPG_Player</scope><name>Feasible</name></member>
      <member refid="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1a80cd7126850dffe3aa820062d2bcf1e9" prot="public" virt="non-virtual"><scope>Algorithms::IPG::IPG_Player</scope><name>getCutPoolA</name></member>
      <member refid="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1a2c9bc848b39e027271c4856ceb168fe1" prot="public" virt="non-virtual"><scope>Algorithms::IPG::IPG_Player</scope><name>getCutPoolb</name></member>
      <member refid="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1ae72b1a293f7f009a042beb4192e04939" prot="public" virt="non-virtual"><scope>Algorithms::IPG::IPG_Player</scope><name>getPayoff</name></member>
      <member refid="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1a16b2bd1139fafc77cf5c8939fff68a4b" prot="protected" virt="non-virtual"><scope>Algorithms::IPG::IPG_Player</scope><name>Incumbent</name></member>
      <member refid="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1a9b63af05c7eaf1155aabb9093c270e43" prot="public" virt="non-virtual"><scope>Algorithms::IPG::IPG_Player</scope><name>IPG_Player</name></member>
      <member refid="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1a398ed920aeb477c77538dadef1ef33b8" prot="protected" virt="non-virtual"><scope>Algorithms::IPG::IPG_Player</scope><name>MembershipLP</name></member>
      <member refid="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1a6e8254c30f352093fa6350fc8db563bb" prot="private" virt="non-virtual"><scope>Algorithms::IPG::IPG_Player</scope><name>Model</name></member>
      <member refid="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1aaf2a399c6a31b7facf0d126d64e656ef" prot="protected" virt="non-virtual"><scope>Algorithms::IPG::IPG_Player</scope><name>Payoff</name></member>
      <member refid="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1a6d6bc1314ea29425f1c912e0c8ebd1bd" prot="protected" virt="non-virtual"><scope>Algorithms::IPG::IPG_Player</scope><name>Pure</name></member>
      <member refid="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1aea720c4309cef88548398e920e71a904" prot="protected" virt="non-virtual"><scope>Algorithms::IPG::IPG_Player</scope><name>R</name></member>
      <member refid="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1a25b389df8596b50a64191cac6000f783" prot="protected" virt="non-virtual"><scope>Algorithms::IPG::IPG_Player</scope><name>RayCounter</name></member>
      <member refid="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1a3fdbed53232ff46305161fa54a90443d" prot="protected" virt="non-virtual"><scope>Algorithms::IPG::IPG_Player</scope><name>Tolerance</name></member>
      <member refid="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1a25459199d67614abfa84874a8fb311b7" prot="public" virt="non-virtual"><scope>Algorithms::IPG::IPG_Player</scope><name>updateIPModel</name></member>
      <member refid="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1a5b65eb80d5d0e5a3f6b1432a35d01224" prot="protected" virt="non-virtual"><scope>Algorithms::IPG::IPG_Player</scope><name>V</name></member>
      <member refid="class_algorithms_1_1_i_p_g_1_1_i_p_g___player_1aef57ff8821ab83f94d9c0e0b87d637a7" prot="protected" virt="non-virtual"><scope>Algorithms::IPG::IPG_Player</scope><name>VertexCounter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
