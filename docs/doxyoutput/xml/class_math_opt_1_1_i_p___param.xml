<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="class_math_opt_1_1_i_p___param" kind="class" language="C++" prot="public">
    <compoundname>MathOpt::IP_Param</compoundname>
    <basecompoundref refid="class_math_opt_1_1_m_p___param" prot="public" virt="non-virtual">MathOpt::MP_Param</basecompoundref>
    <includes refid="ip__param_8h" local="no">ip_param.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_math_opt_1_1_i_p___param_1a380c60da09ec270dda7a013d8a952f24" prot="private" static="no" mutable="no">
        <type>GRBEnv *</type>
        <definition>GRBEnv* MathOpt::IP_Param::Env</definition>
        <argsstring></argsstring>
        <name>Env</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/ip_param.h" line="47" column="13" bodyfile="include/mathopt/mp_param/ip_param.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_math_opt_1_1_i_p___param_1a63062903806f710f9707dcb941aff195" prot="private" static="no" mutable="no">
        <type>GRBModel</type>
        <definition>GRBModel MathOpt::IP_Param::IPModel</definition>
        <argsstring></argsstring>
        <name>IPModel</name>
        <briefdescription>
<para>Stores the IP model associated with the object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/ip_param.h" line="48" column="14" bodyfile="include/mathopt/mp_param/ip_param.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_math_opt_1_1_i_p___param_1ac349565f8febfdf47dc0db3b252ebe15" prot="private" static="no" mutable="no">
        <type>GRBQuadExpr</type>
        <definition>GRBQuadExpr MathOpt::IP_Param::Objective_c</definition>
        <argsstring></argsstring>
        <name>Objective_c</name>
        <briefdescription>
<para>Stores the objective part relative to c^Ty. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/ip_param.h" line="49" column="14" bodyfile="include/mathopt/mp_param/ip_param.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_math_opt_1_1_i_p___param_1a2036320e64735f1814e8e8349e3a7245" prot="private" static="no" mutable="no">
        <type>arma::vec</type>
        <definition>arma::vec MathOpt::IP_Param::bounds</definition>
        <argsstring></argsstring>
        <name>bounds</name>
        <briefdescription>
<para>Stores the explicit bounds on variables. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/ip_param.h" line="50" column="14" bodyfile="include/mathopt/mp_param/ip_param.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_math_opt_1_1_i_p___param_1a4236364f917ce6e9e7c957aca00168dc" prot="private" static="no" mutable="no">
        <type>arma::vec</type>
        <definition>arma::vec MathOpt::IP_Param::integers</definition>
        <argsstring></argsstring>
        <name>integers</name>
        <briefdescription>
<para>Stores the indexes of integer variables. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/ip_param.h" line="51" column="14" bodyfile="include/mathopt/mp_param/ip_param.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_math_opt_1_1_i_p___param_1a032027557ecff64721133fa11cb38a80" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool MathOpt::IP_Param::finalized</definition>
        <argsstring></argsstring>
        <name>finalized</name>
        <initializer>{false}</initializer>
        <briefdescription>
<para>True if the model has been made and constraints cannot be changed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/ip_param.h" line="52" column="7" bodyfile="include/mathopt/mp_param/ip_param.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_math_opt_1_1_i_p___param_1a3462b6f8f73d14cdaf8e6ced0c1dc5da" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MathOpt::IP_Param::IP_Param</definition>
        <argsstring>(GRBEnv *env=nullptr)</argsstring>
        <name>IP_Param</name>
        <param>
          <type>GRBEnv *</type>
          <declname>env</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Initialize only the size. Everything else is empty (can be updated later) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/ip_param.h" line="60" column="11" bodyfile="include/mathopt/mp_param/ip_param.h" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_i_p___param_1abcccf3e9856fa07d2ba3fc7fdf1c65cc" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MathOpt::IP_Param::IP_Param</definition>
        <argsstring>(arma::sp_mat C, arma::sp_mat B, arma::vec b, arma::vec c, arma::vec bounds, arma::vec integers, GRBEnv *env=nullptr)</argsstring>
        <name>IP_Param</name>
        <param>
          <type>arma::sp_mat</type>
          <declname>C</declname>
        </param>
        <param>
          <type>arma::sp_mat</type>
          <declname>B</declname>
        </param>
        <param>
          <type>arma::vec</type>
          <declname>b</declname>
        </param>
        <param>
          <type>arma::vec</type>
          <declname>c</declname>
        </param>
        <param>
          <type>arma::vec</type>
          <declname>bounds</declname>
        </param>
        <param>
          <type>arma::vec</type>
          <declname>integers</declname>
        </param>
        <param>
          <type>GRBEnv *</type>
          <declname>env</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Set data at construct time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/ip_param.h" line="63" column="11" bodyfile="include/mathopt/mp_param/ip_param.h" bodystart="63" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_i_p___param_1ab6737563695f1be14be71ae09619a5a6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>arma::vec</type>
        <definition>arma::vec MathOpt::IP_Param::getIntegers</definition>
        <argsstring>() const</argsstring>
        <name>getIntegers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/ip_param.h" line="80" column="12" bodyfile="include/mathopt/mp_param/ip_param.h" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_i_p___param_1a7ff09814850d66b2f0183df879b412c2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>arma::vec</type>
        <definition>arma::vec MathOpt::IP_Param::getBounds</definition>
        <argsstring>() const</argsstring>
        <name>getBounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/ip_param.h" line="82" column="12" bodyfile="include/mathopt/mp_param/ip_param.h" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_i_p___param_1a551cbd1d23a9dee94d55144f3149a9ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool MathOpt::IP_Param::finalize</definition>
        <argsstring>() override</argsstring>
        <name>finalize</name>
        <reimplements refid="class_math_opt_1_1_m_p___param_1a77c1f71200e55ee2fe1abe3c9eb13005">finalize</reimplements>
        <briefdescription>
<para>Finalize the <ref refid="class_math_opt_1_1_m_p___param" kindref="compound">MP_Param</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>This method creates the (mixed)-integer program for the game, where the objective omits the bilinear part. The flag finalized in the object is then set to true.</para>
        </inbodydescription>
        <location file="include/mathopt/mp_param/ip_param.h" line="84" column="7" bodyfile="src/mathopt/mp_param/ip_param.cpp" bodystart="48" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_i_p___param_1a8be970f7d412fd15877e2fc17616bfbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MathOpt::IP_Param::addConstraints</definition>
        <argsstring>(const arma::sp_mat A, const arma::vec b)</argsstring>
        <name>addConstraints</name>
        <param>
          <type>const arma::sp_mat</type>
          <declname>A</declname>
          <briefdescription><para>The LHSs of the added cuts </para>
</briefdescription>
        </param>
        <param>
          <type>const arma::vec</type>
          <declname>b</declname>
          <briefdescription><para>The RHSs of the added cuts </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>This method stores a description of the new cuts of <computeroutput>Ain</computeroutput> (and RHS <computeroutput>bin</computeroutput>) in B and b, respectively. This works also when the <ref refid="class_math_opt_1_1_i_p___param" kindref="compound">IP_Param</ref> is finalized.</para>
        </inbodydescription>
        <location file="include/mathopt/mp_param/ip_param.h" line="86" column="7" bodyfile="src/mathopt/mp_param/ip_param.cpp" bodystart="249" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_i_p___param_1a5b3c69e1aaf283425fd1164355e53bdc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MathOpt::IP_Param::IP_Param</definition>
        <argsstring>(const IP_Param &amp;ipg)</argsstring>
        <name>IP_Param</name>
        <param>
          <type>const <ref refid="class_math_opt_1_1_i_p___param" kindref="compound">IP_Param</ref> &amp;</type>
          <declname>ipg</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/ip_param.h" line="89" column="2" bodyfile="include/mathopt/mp_param/ip_param.h" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_i_p___param_1ad88739b3e708a90212f9b4e2deef9602" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void MathOpt::IP_Param::setEnv</definition>
        <argsstring>(GRBEnv *env)</argsstring>
        <name>setEnv</name>
        <param>
          <type>GRBEnv *</type>
          <declname>env</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/ip_param.h" line="93" column="7" bodyfile="include/mathopt/mp_param/ip_param.h" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_i_p___param_1a15338aa42e6a2d00ba0e8818562c7b60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_math_opt_1_1_i_p___param" kindref="compound">IP_Param</ref> &amp;</type>
        <definition>MathOpt::IP_Param &amp; MathOpt::IP_Param::set</definition>
        <argsstring>(const arma::sp_mat &amp;C, const arma::sp_mat &amp;B, const arma::vec &amp;b, const arma::vec &amp;c, const arma::vec &amp;bounds, const arma::vec &amp;integers)</argsstring>
        <name>set</name>
        <param>
          <type>const arma::sp_mat &amp;</type>
          <declname>C</declname>
        </param>
        <param>
          <type>const arma::sp_mat &amp;</type>
          <declname>B</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>bounds</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>integers</declname>
        </param>
        <briefdescription>
<para>Setting the data, while keeping the input objects intact. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/ip_param.h" line="96" column="11" bodyfile="src/mathopt/mp_param/ip_param.cpp" bodystart="143" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_i_p___param_1a2090df6b8aa1b63334432208ff8cc9b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_math_opt_1_1_i_p___param" kindref="compound">IP_Param</ref> &amp;</type>
        <definition>MathOpt::IP_Param &amp; MathOpt::IP_Param::set</definition>
        <argsstring>(arma::sp_mat &amp;C, arma::sp_mat &amp;&amp;B, arma::vec &amp;&amp;b, arma::vec &amp;&amp;c, arma::vec &amp;&amp;bounds, arma::vec &amp;&amp;integers)</argsstring>
        <name>set</name>
        <param>
          <type>arma::sp_mat &amp;</type>
          <declname>C</declname>
        </param>
        <param>
          <type>arma::sp_mat &amp;&amp;</type>
          <declname>B</declname>
        </param>
        <param>
          <type>arma::vec &amp;&amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>arma::vec &amp;&amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>arma::vec &amp;&amp;</type>
          <declname>bounds</declname>
        </param>
        <param>
          <type>arma::vec &amp;&amp;</type>
          <declname>integers</declname>
        </param>
        <briefdescription>
<para>Faster means to set data. But the input objects might be corrupted now. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/ip_param.h" line="102" column="11" bodyfile="src/mathopt/mp_param/ip_param.cpp" bodystart="159" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_i_p___param_1a31d5eb35213c2af4718e28e3ceafea8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_math_opt_1_1_i_p___param" kindref="compound">IP_Param</ref> &amp;</type>
        <definition>MathOpt::IP_Param &amp; MathOpt::IP_Param::set</definition>
        <argsstring>(const QP_Objective &amp;obj, const QP_Constraints &amp;cons, const arma::vec &amp;bounds={}, const arma::vec &amp;integers={})</argsstring>
        <name>set</name>
        <param>
          <type>const <ref refid="struct_math_opt_1_1_q_p___objective" kindref="compound">QP_Objective</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const <ref refid="struct_math_opt_1_1_q_p___constraints" kindref="compound">QP_Constraints</ref> &amp;</type>
          <declname>cons</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>bounds</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>integers</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/ip_param.h" line="109" column="11" bodyfile="src/mathopt/mp_param/ip_param.cpp" bodystart="195" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_i_p___param_1abcc0f5b3570052bd57d1a6ee5c195681" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_math_opt_1_1_i_p___param" kindref="compound">IP_Param</ref> &amp;</type>
        <definition>MathOpt::IP_Param &amp; MathOpt::IP_Param::set</definition>
        <argsstring>(QP_Objective &amp;&amp;obj, QP_Constraints &amp;&amp;cons, arma::vec &amp;&amp;bounds={}, arma::vec &amp;&amp;integers={})</argsstring>
        <name>set</name>
        <param>
          <type><ref refid="struct_math_opt_1_1_q_p___objective" kindref="compound">QP_Objective</ref> &amp;&amp;</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="struct_math_opt_1_1_q_p___constraints" kindref="compound">QP_Constraints</ref> &amp;&amp;</type>
          <declname>cons</declname>
        </param>
        <param>
          <type>arma::vec &amp;&amp;</type>
          <declname>bounds</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>arma::vec &amp;&amp;</type>
          <declname>integers</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Setting the data with the inputs being a struct <ref refid="struct_math_opt_1_1_q_p___objective" kindref="compound">MathOpt::QP_Objective</ref> and struct <ref refid="struct_math_opt_1_1_q_p___constraints" kindref="compound">MathOpt::QP_Constraints</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/ip_param.h" line="114" column="11" bodyfile="src/mathopt/mp_param/ip_param.cpp" bodystart="172" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_i_p___param_1a9f8d5f79b5329bbfec6d0c4618f1bbee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MathOpt::IP_Param::operator==</definition>
        <argsstring>(const IP_Param &amp;IPG2) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_math_opt_1_1_i_p___param" kindref="compound">IP_Param</ref> &amp;</type>
          <declname>IPG2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/ip_param.h" line="119" column="7" bodyfile="src/mathopt/mp_param/ip_param.cpp" bodystart="32" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_i_p___param_1a19f85599f566f4bf679d6e4c85730ae2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; GRBModel &gt;</type>
        <definition>std::unique_ptr&lt; GRBModel &gt; MathOpt::IP_Param::solveFixed</definition>
        <argsstring>(arma::vec x, bool solve)</argsstring>
        <name>solveFixed</name>
        <param>
          <type>arma::vec</type>
          <declname>x</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>solve</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Given a value for the parameters <formula id="35">$x$</formula> in the definition of <ref refid="class_math_opt_1_1_i_p___param" kindref="compound">IP_Param</ref>, solve the parameterized MIP program to optimality. Note that the method <simplesect kind="return"><para>a pointer to a copy of the model. In this way, valid cuts and cut pools are kept each time the method is invoked.</para>
</simplesect>
In terms of game theory, this can be viewed as <emphasis>the best response</emphasis> for a set of decisions by other players. <computeroutput>solve</computeroutput> decides whether the model has to be optimized or not </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/ip_param.h" line="121" column="18" bodyfile="src/mathopt/mp_param/ip_param.cpp" bodystart="117" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_i_p___param_1a45ab3e761fba334e064bee33c06c5ec6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double MathOpt::IP_Param::computeObjective</definition>
        <argsstring>(const arma::vec &amp;y, const arma::vec &amp;x, bool checkFeas=true, double tol=1e-6) const</argsstring>
        <name>computeObjective</name>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>checkFeas</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>double</type>
          <declname>tol</declname>
          <defval>1e-6</defval>
        </param>
        <briefdescription>
<para>Computes the objective value, given a vector <computeroutput>y</computeroutput> and a parameterizing vector <computeroutput>x</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Computes <formula id="37">$(Cx)^Ty + c^Ty$</formula> given the input values <computeroutput>y</computeroutput> and <computeroutput>x</computeroutput>. <computeroutput>checkFeas</computeroutput> if <computeroutput>true</computeroutput>, checks if the given <formula id="38">$(x,y)$</formula> satisfies the constraints of the problem, namely <formula id="39">$Ax + By \leq b$</formula>.</para>
        </inbodydescription>
        <location file="include/mathopt/mp_param/ip_param.h" line="125" column="9" bodyfile="src/mathopt/mp_param/ip_param.cpp" bodystart="212" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_i_p___param_1a1e7437399eedd12036eb3709c48e7ca0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool MathOpt::IP_Param::isPlayable</definition>
        <argsstring>(const IP_Param &amp;P) const</argsstring>
        <name>isPlayable</name>
        <param>
          <type>const <ref refid="class_math_opt_1_1_i_p___param" kindref="compound">IP_Param</ref> &amp;</type>
          <declname>P</declname>
        </param>
        <briefdescription>
<para>Checks if the current object can play a game with another <ref refid="class_math_opt_1_1_i_p___param" kindref="compound">MathOpt::IP_Param</ref> object <computeroutput>P</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/ip_param.h" line="130" column="14" bodyfile="include/mathopt/mp_param/ip_param.h" bodystart="130" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_i_p___param_1a4ab6392b44a5b6a7cb2b481267f5a83e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void MathOpt::IP_Param::write</definition>
        <argsstring>(const std::string &amp;filename, bool append) const override</argsstring>
        <name>write</name>
        <reimplements refid="class_math_opt_1_1_m_p___param_1a68ac30e9ab415719ab7be25357899617">write</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>append</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/ip_param.h" line="141" column="7" bodyfile="src/mathopt/mp_param/ip_param.cpp" bodystart="319" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_i_p___param_1a5bf559b27b9291c61aa692239e3b96ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long int MathOpt::IP_Param::load</definition>
        <argsstring>(const std::string &amp;filename, long pos=0)</argsstring>
        <name>load</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>long</type>
          <declname>pos</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Before calling this function, use the constructor <ref refid="class_math_opt_1_1_i_p___param_1a3462b6f8f73d14cdaf8e6ced0c1dc5da" kindref="member">IP_Param::IP_Param(GRBEnv *Env)</ref> to initialize.</para>
<para>Example usage: <programlisting filename=".cpp"><codeline><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="shells_2epec_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GRBEnv<sp/><ref refid="class_math_opt_1_1_i_p___param_1a380c60da09ec270dda7a013d8a952f24" kindref="member">Env</ref>;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_math_opt_1_1_i_p___param" kindref="compound">MathOpt::IP_Param</ref><sp/>ip(&amp;<ref refid="class_math_opt_1_1_i_p___param_1a380c60da09ec270dda7a013d8a952f24" kindref="member">Env</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip.load(</highlight><highlight class="stringliteral">&quot;./dat/q1data.dat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;ip&lt;&lt;</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
        </inbodydescription>
        <location file="include/mathopt/mp_param/ip_param.h" line="142" column="7" bodyfile="src/mathopt/mp_param/ip_param.cpp" bodystart="280" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_i_p___param_1a6cf36efa0134f74b75d485135314a498" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double MathOpt::IP_Param::computeObjectiveWithoutOthers</definition>
        <argsstring>(const arma::vec &amp;y) const</argsstring>
        <name>computeObjectiveWithoutOthers</name>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Computes <formula id="40">$c^Ty $</formula> given the input values <computeroutput>y</computeroutput>;</para>
        </inbodydescription>
        <location file="include/mathopt/mp_param/ip_param.h" line="144" column="9" bodyfile="src/mathopt/mp_param/ip_param.cpp" bodystart="239" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_i_p___param_1a17cda9a634b46017b7d7579eb9a8f8c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>arma::vec</type>
        <definition>arma::vec MathOpt::IP_Param::getConstraintViolations</definition>
        <argsstring>(const arma::vec y, double tol)</argsstring>
        <name>getConstraintViolations</name>
        <param>
          <type>const arma::vec</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/ip_param.h" line="146" column="12" bodyfile="src/mathopt/mp_param/ip_param.cpp" bodystart="202" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_i_p___param_1ae80499b37080521e2d12b6c944fa23e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MathOpt::IP_Param::forceDataCheck</definition>
        <argsstring>()</argsstring>
        <name>forceDataCheck</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/ip_param.h" line="148" column="7" bodyfile="src/mathopt/mp_param/ip_param.cpp" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_i_p___param_1ada1ae3f91dbdf6deb185dc9bde677e7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MathOpt::IP_Param::updateModelObjective</definition>
        <argsstring>(const arma::vec x)</argsstring>
        <name>updateModelObjective</name>
        <param>
          <type>const arma::vec</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>This method updates the model objective by setting x to <computeroutput>x</computeroutput> </para>
        </inbodydescription>
        <location file="include/mathopt/mp_param/ip_param.h" line="150" column="7" bodyfile="src/mathopt/mp_param/ip_param.cpp" bodystart="91" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_i_p___param_1afe0b4bb6151ac00f2c77a3edec9fee1f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; GRBModel &gt;</type>
        <definition>std::shared_ptr&lt;GRBModel&gt; MathOpt::IP_Param::getIPModel</definition>
        <argsstring>()</argsstring>
        <name>getIPModel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/ip_param.h" line="152" column="18" bodyfile="include/mathopt/mp_param/ip_param.h" bodystart="152" bodyend="152"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_math_opt_1_1_i_p___param_1ad78a4a1bd3566acdcc5c61feedca9f8a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_math_opt_1_1_m_p___param" kindref="compound">MP_Param</ref> &amp;</type>
        <definition>MathOpt::MP_Param &amp; MathOpt::MP_Param::set</definition>
        <argsstring>(const arma::sp_mat &amp;Q, const arma::sp_mat &amp;C, const arma::sp_mat &amp;A, const arma::sp_mat &amp;B, const arma::vec &amp;c, const arma::vec &amp;b)</argsstring>
        <name>set</name>
        <briefdescription>
<para>Setting the data, while keeping the input objects intact. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/ip_param.h" line="56" column="2" bodyfile="src/mathopt/mp_param/mp_param.cpp" bodystart="122" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_i_p___param_1af8b3e3a4717541860fcb72634e1723ab" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_math_opt_1_1_m_p___param" kindref="compound">MP_Param</ref> &amp;</type>
        <definition>MathOpt::MP_Param &amp; MathOpt::MP_Param::set</definition>
        <argsstring>(arma::sp_mat &amp;&amp;Q, arma::sp_mat &amp;&amp;C, arma::sp_mat &amp;&amp;A, arma::sp_mat &amp;&amp;B, arma::vec &amp;&amp;c, arma::vec &amp;&amp;b)</argsstring>
        <name>set</name>
        <briefdescription>
<para>Faster means to set data. But the input objects might be corrupted now. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/ip_param.h" line="56" column="2" bodyfile="src/mathopt/mp_param/mp_param.cpp" bodystart="141" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_i_p___param_1ae632d6f5348fc84bebe05ab01288e448" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_math_opt_1_1_m_p___param" kindref="compound">MP_Param</ref> &amp;</type>
        <definition>MathOpt::MP_Param &amp; MathOpt::MP_Param::set</definition>
        <argsstring>(const QP_Objective &amp;obj, const QP_Constraints &amp;cons)</argsstring>
        <name>set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/ip_param.h" line="56" column="2" bodyfile="src/mathopt/mp_param/mp_param.cpp" bodystart="160" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="class_math_opt_1_1_i_p___param_1ae0389084bac5b495c773cf647b7e9bff" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_math_opt_1_1_m_p___param" kindref="compound">MP_Param</ref> &amp;</type>
        <definition>MathOpt::MP_Param &amp; MathOpt::MP_Param::set</definition>
        <argsstring>(QP_Objective &amp;&amp;obj, QP_Constraints &amp;&amp;cons)</argsstring>
        <name>set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/mathopt/mp_param/ip_param.h" line="56" column="2" bodyfile="src/mathopt/mp_param/mp_param.cpp" bodystart="164" bodyend="166"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class handles parametrized integer programs. </para>
    </briefdescription>
    <detaileddescription>
<para>Represents a Parameterized QP as <formula id="2">\[ \min_y c^Ty + (Cx)^T y \]</formula> Subject to <formula id="3">\begin{eqnarray} Ay &amp;\leq&amp; b \\ y &amp;\geq&amp; 0 \\ y_i &amp;\in&amp; &amp;\mathbb{Z}&amp;^{z_i} &amp;\forall&amp; i &amp;\in&amp; I \end{eqnarray}</formula> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>MathOpt::IP_Param</label>
        <link refid="class_math_opt_1_1_i_p___param"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>MathOpt::MP_Param</label>
        <link refid="class_math_opt_1_1_m_p___param"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>MathOpt::IP_Param</label>
        <link refid="class_math_opt_1_1_i_p___param"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>MathOpt::MP_Param</label>
        <link refid="class_math_opt_1_1_m_p___param"/>
      </node>
    </collaborationgraph>
    <location file="include/mathopt/mp_param/ip_param.h" line="44" column="1" bodyfile="include/mathopt/mp_param/ip_param.h" bodystart="31" bodyend="153"/>
    <listofallmembers>
      <member refid="class_math_opt_1_1_m_p___param_1a69e39bfe4a58e5c43dbcb7ac16be3fe5" prot="protected" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>A</name></member>
      <member refid="class_math_opt_1_1_i_p___param_1a8be970f7d412fd15877e2fc17616bfbd" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>addConstraints</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a802628bc47d8e985d77e6184440af534" prot="public" virt="virtual"><scope>MathOpt::IP_Param</scope><name>addDummy</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1adb541edcb7083da9bde8e6615063acd3" prot="protected" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>B</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1af6e726c09d1d43359c2dad586b0fb4d5" prot="protected" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>b</name></member>
      <member refid="class_math_opt_1_1_i_p___param_1a2036320e64735f1814e8e8349e3a7245" prot="private" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>bounds</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a270fad22decf1dbdc2227ff9a4875e34" prot="protected" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>c</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a13727398531ec805acd474fa5da89056" prot="protected" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>C</name></member>
      <member refid="class_math_opt_1_1_i_p___param_1a45ab3e761fba334e064bee33c06c5ec6" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>computeObjective</name></member>
      <member refid="class_math_opt_1_1_i_p___param_1a6cf36efa0134f74b75d485135314a498" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>computeObjectiveWithoutOthers</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1aff8f3f085bd5938a352874c020f8ef23" prot="protected" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>dataCheck</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1af137f454eef5ef1e9ef3edd7c7b16261" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>dataCheck</name></member>
      <member refid="class_math_opt_1_1_i_p___param_1a380c60da09ec270dda7a013d8a952f24" prot="private" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>Env</name></member>
      <member refid="class_math_opt_1_1_i_p___param_1a551cbd1d23a9dee94d55144f3149a9ac" prot="public" virt="virtual"><scope>MathOpt::IP_Param</scope><name>finalize</name></member>
      <member refid="class_math_opt_1_1_i_p___param_1a032027557ecff64721133fa11cb38a80" prot="private" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>finalized</name></member>
      <member refid="class_math_opt_1_1_i_p___param_1ae80499b37080521e2d12b6c944fa23e2" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>forceDataCheck</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a40fff25cfb814374938f83ce9b3786de" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>getA</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1af9a8eaa4d0d2034f3bc221757ebba7e2" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>getB</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a1f0114c151fc557843e39364bca6e1a7" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>getb</name></member>
      <member refid="class_math_opt_1_1_i_p___param_1a7ff09814850d66b2f0183df879b412c2" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>getBounds</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1ab6633d7091d1e470230773cfbe53bf3d" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>getC</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a5e6b2cba9aee0d780957a2e0c7329e02" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>getc</name></member>
      <member refid="class_math_opt_1_1_i_p___param_1a17cda9a634b46017b7d7579eb9a8f8c7" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>getConstraintViolations</name></member>
      <member refid="class_math_opt_1_1_i_p___param_1ab6737563695f1be14be71ae09619a5a6" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>getIntegers</name></member>
      <member refid="class_math_opt_1_1_i_p___param_1afe0b4bb6151ac00f2c77a3edec9fee1f" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>getIPModel</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a202eba6a77a560f6db64104eccc34d00" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>getNx</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1af1070c3cbcafa07a86aa96f4e015a361" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>getNy</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a0f1cc247264404e29747200c7ddfc1ab" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>getQ</name></member>
      <member refid="class_math_opt_1_1_i_p___param_1a4236364f917ce6e9e7c957aca00168dc" prot="private" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>integers</name></member>
      <member refid="class_math_opt_1_1_i_p___param_1a3462b6f8f73d14cdaf8e6ced0c1dc5da" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>IP_Param</name></member>
      <member refid="class_math_opt_1_1_i_p___param_1abcccf3e9856fa07d2ba3fc7fdf1c65cc" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>IP_Param</name></member>
      <member refid="class_math_opt_1_1_i_p___param_1a5b3c69e1aaf283425fd1164355e53bdc" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>IP_Param</name></member>
      <member refid="class_math_opt_1_1_i_p___param_1a63062903806f710f9707dcb941aff195" prot="private" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>IPModel</name></member>
      <member refid="class_math_opt_1_1_i_p___param_1a1e7437399eedd12036eb3709c48e7ca0" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>isPlayable</name></member>
      <member refid="class_math_opt_1_1_i_p___param_1a5bf559b27b9291c61aa692239e3b96ce" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>load</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1af1d48cd18c52aaab1e99e11dfa4cce67" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>MP_Param</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a2593388bfb462f7a5e36708f8c6f9770" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>MP_Param</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a5c20eb5e9dac543042b9888e012ab99b" prot="protected" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>Ncons</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1ab74a22bf304936286282f869cb646873" prot="protected" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>Nx</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a1a69f24fcb92ebf76ea29c9407859f0a" prot="protected" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>Ny</name></member>
      <member refid="class_math_opt_1_1_i_p___param_1ac349565f8febfdf47dc0db3b252ebe15" prot="private" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>Objective_c</name></member>
      <member refid="class_math_opt_1_1_i_p___param_1a9f8d5f79b5329bbfec6d0c4618f1bbee" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>operator==</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1aae8144b23a29ea99d5ef793729438feb" prot="protected" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>Q</name></member>
      <member refid="class_math_opt_1_1_i_p___param_1a15338aa42e6a2d00ba0e8818562c7b60" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>set</name></member>
      <member refid="class_math_opt_1_1_i_p___param_1a2090df6b8aa1b63334432208ff8cc9b5" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>set</name></member>
      <member refid="class_math_opt_1_1_i_p___param_1a31d5eb35213c2af4718e28e3ceafea8e" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>set</name></member>
      <member refid="class_math_opt_1_1_i_p___param_1abcc0f5b3570052bd57d1a6ee5c195681" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>set</name></member>
      <member refid="class_math_opt_1_1_i_p___param_1ad78a4a1bd3566acdcc5c61feedca9f8a" prot="private" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>set</name></member>
      <member refid="class_math_opt_1_1_i_p___param_1af8b3e3a4717541860fcb72634e1723ab" prot="private" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>set</name></member>
      <member refid="class_math_opt_1_1_i_p___param_1ae632d6f5348fc84bebe05ab01288e448" prot="private" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>set</name></member>
      <member refid="class_math_opt_1_1_i_p___param_1ae0389084bac5b495c773cf647b7e9bff" prot="private" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>set</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1ad78a4a1bd3566acdcc5c61feedca9f8a" prot="public" virt="virtual" ambiguityscope="MathOpt::MP_Param::"><scope>MathOpt::IP_Param</scope><name>set</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1af8b3e3a4717541860fcb72634e1723ab" prot="public" virt="virtual" ambiguityscope="MathOpt::MP_Param::"><scope>MathOpt::IP_Param</scope><name>set</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1ae632d6f5348fc84bebe05ab01288e448" prot="public" virt="virtual" ambiguityscope="MathOpt::MP_Param::"><scope>MathOpt::IP_Param</scope><name>set</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1ae0389084bac5b495c773cf647b7e9bff" prot="public" virt="virtual" ambiguityscope="MathOpt::MP_Param::"><scope>MathOpt::IP_Param</scope><name>set</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1ade7514774a87da1d741203de23084141" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>setA</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1acf30858c84ca9134645bfdc00e5c3c01" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>setb</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a3d1cfea15e1d90c8d599b7f43fbce99e" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>setB</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1aef703db3b2617b1e7f2918c98742ebae" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>setc</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a371da389ffb48698912345747dcc74b4" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>setC</name></member>
      <member refid="class_math_opt_1_1_i_p___param_1ad88739b3e708a90212f9b4e2deef9602" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>setEnv</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1aa91dd679cf1572f215d95ecfbeaff20f" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>setQ</name></member>
      <member refid="class_math_opt_1_1_m_p___param_1a70400a4046b1ab099f6c2ebbdceab6d5" prot="protected" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>size</name></member>
      <member refid="class_math_opt_1_1_i_p___param_1a19f85599f566f4bf679d6e4c85730ae2" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>solveFixed</name></member>
      <member refid="class_math_opt_1_1_i_p___param_1ada1ae3f91dbdf6deb185dc9bde677e7f" prot="public" virt="non-virtual"><scope>MathOpt::IP_Param</scope><name>updateModelObjective</name></member>
      <member refid="class_math_opt_1_1_i_p___param_1a4ab6392b44a5b6a7cb2b481267f5a83e" prot="public" virt="virtual"><scope>MathOpt::IP_Param</scope><name>write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
