<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="outerapproximation_8h" kind="file" language="C++">
    <compoundname>outerapproximation.h</compoundname>
    <includes refid="algorithms_8h" local="yes">algorithms.h</includes>
    <includes refid="epecsolve_8h" local="yes">epecsolve.h</includes>
    <includes local="no">armadillo</includes>
    <includes local="no">gurobi_c++.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">memory</includes>
    <includes local="no">set</includes>
    <includes local="no">string</includes>
    <includedby refid="_outer_approximation_8cpp" local="yes">src/algorithms/OuterApproximation.cpp</includedby>
    <includedby refid="_games_8cpp" local="yes">src/Games.cpp</includedby>
    <incdepgraph>
      <node id="9">
        <label>games.h</label>
        <link refid="games_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>string</label>
      </node>
      <node id="1">
        <label>include/algorithms/outerapproximation.h</label>
        <link refid="outerapproximation_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>map</label>
      </node>
      <node id="16">
        <label>utils.h</label>
        <link refid="utils_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>lcp/outerlcp.h</label>
        <link refid="outerlcp_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>armadillo</label>
      </node>
      <node id="17">
        <label>fstream</label>
      </node>
      <node id="2">
        <label>algorithms.h</label>
        <link refid="algorithms_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>lcp/lcp.h</label>
        <link refid="lcp_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
      <node id="15">
        <label>lcp/polylcp.h</label>
        <link refid="polylcp_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>iostream</label>
      </node>
      <node id="3">
        <label>epecsolve.h</label>
        <link refid="epecsolve_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>gurobi_c++.h</label>
      </node>
      <node id="11">
        <label>set</label>
      </node>
      <node id="18">
        <label>version.h</label>
      </node>
      <node id="7">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>include/algorithms/outerapproximation.h</label>
        <link refid="outerapproximation_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/algorithms/OuterApproximation.cpp</label>
        <link refid="_outer_approximation_8cpp"/>
      </node>
      <node id="3">
        <label>src/Games.cpp</label>
        <link refid="_games_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_outer_tree" prot="public">OuterTree</innerclass>
    <innerclass refid="struct_outer_tree_1_1_node" prot="public">OuterTree::Node</innerclass>
    <innerclass refid="class_algorithms_1_1_outer_approximation" prot="public">Algorithms::OuterApproximation</innerclass>
    <innernamespace refid="namespace_algorithms">Algorithms</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="algorithms_8h" kindref="compound">algorithms.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="epecsolve_8h" kindref="compound">epecsolve.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;armadillo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gurobi_c++.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="class_outer_tree" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_outer_tree" kindref="compound">OuterTree</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="14" refid="struct_outer_tree_1_1_node" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_outer_tree_1_1_node" kindref="compound">Node</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16" refid="struct_outer_tree_1_1_node_1ab90c17fd38684d36b70f14c042b965ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_outer_tree" kindref="compound">OuterTree</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_outer_tree_1_1_node_1a0303e6139674aaf9f272291624ab8bd2" kindref="member">Node</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>encSize);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_outer_tree_1_1_node_1a0303e6139674aaf9f272291624ab8bd2" kindref="member">Node</ref>(<ref refid="struct_outer_tree_1_1_node" kindref="compound">Node</ref><sp/>&amp;parent,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idComp,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_outer_tree_1_1_node_1a0303e6139674aaf9f272291624ab8bd2" kindref="member">Node</ref>(<ref refid="struct_outer_tree_1_1_node" kindref="compound">Node</ref><sp/>&amp;parent,<sp/>std::vector&lt;int&gt;<sp/>idComps,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="struct_outer_tree_1_1_node_1aea8017659a4644a92b33153e535b9b99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::vector&lt;unsigned<sp/>int&gt;<sp/><ref refid="struct_outer_tree_1_1_node_1aea8017659a4644a92b33153e535b9b99" kindref="member">getIdComps</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="struct_outer_tree_1_1_node_1ad3bfb2aeb16592e1ae87221bdb3c6096" kindref="member">IdComps</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="26" refid="struct_outer_tree_1_1_node_1aeed8f2d351d5e87ae39836adb3ceca01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_outer_tree_1_1_node_1aeed8f2d351d5e87ae39836adb3ceca01" kindref="member">getId</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="struct_outer_tree_1_1_node_1a231e8ac4cf7d5197f4f38e7ce313c54d" kindref="member">Id</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="29" refid="struct_outer_tree_1_1_node_1ad975104a0e0066c47cb2a0ea3d8a8293" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_outer_tree_1_1_node_1ad975104a0e0066c47cb2a0ea3d8a8293" kindref="member">getCumulativeBranches</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::count(this-&gt;<ref refid="struct_outer_tree_1_1_node_1a4ec286519c30965b25a38a474b28d894" kindref="member">AllowedBranchings</ref>.begin(),</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="struct_outer_tree_1_1_node_1a4ec286519c30965b25a38a474b28d894" kindref="member">AllowedBranchings</ref>.end(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::vector&lt;bool&gt;<sp/><ref refid="struct_outer_tree_1_1_node_1abea1c8ee07d6fef2eb7f49bd4a548e43" kindref="member">getEncoding</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="struct_outer_tree_1_1_node_1aecc18c9073e79cd203fa0aa5fe9923ca" kindref="member">Encoding</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="struct_outer_tree_1_1_node_1a874b8f73c20e3296898b6bdb643be388" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::vector&lt;bool&gt;<sp/><ref refid="struct_outer_tree_1_1_node_1a874b8f73c20e3296898b6bdb643be388" kindref="member">getAllowedBranchings</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="struct_outer_tree_1_1_node_1a4ec286519c30965b25a38a474b28d894" kindref="member">AllowedBranchings</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="struct_outer_tree_1_1_node_1a8d5f4e448e5185a0b446fe3cf204bb48" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_outer_tree_1_1_node" kindref="compound">Node</ref><sp/>*<ref refid="struct_outer_tree_1_1_node_1a8d5f4e448e5185a0b446fe3cf204bb48" kindref="member">getParent</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="struct_outer_tree_1_1_node_1af2edbf96d36d36d43de199663d41b1ce" kindref="member">Parent</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;unsigned<sp/>int&gt;</highlight></codeline>
<codeline lineno="50" refid="struct_outer_tree_1_1_node_1ad3bfb2aeb16592e1ae87221bdb3c6096" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_outer_tree_1_1_node_1ad3bfb2aeb16592e1ae87221bdb3c6096" kindref="member">IdComps</ref>;<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;bool&gt;</highlight></codeline>
<codeline lineno="52" refid="struct_outer_tree_1_1_node_1aecc18c9073e79cd203fa0aa5fe9923ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_outer_tree_1_1_node_1aecc18c9073e79cd203fa0aa5fe9923ca" kindref="member">Encoding</ref>;<sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;bool&gt;</highlight></codeline>
<codeline lineno="56" refid="struct_outer_tree_1_1_node_1a4ec286519c30965b25a38a474b28d894" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_outer_tree_1_1_node_1a4ec286519c30965b25a38a474b28d894" kindref="member">AllowedBranchings</ref>;<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="struct_outer_tree_1_1_node_1a231e8ac4cf7d5197f4f38e7ce313c54d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_outer_tree_1_1_node_1a231e8ac4cf7d5197f4f38e7ce313c54d" kindref="member">Id</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61" refid="struct_outer_tree_1_1_node_1af2edbf96d36d36d43de199663d41b1ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_outer_tree_1_1_node" kindref="compound">Node</ref><sp/>*<ref refid="struct_outer_tree_1_1_node_1af2edbf96d36d36d43de199663d41b1ce" kindref="member">Parent</ref>;<sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="65" refid="class_outer_tree_1a53df69238da5f9539ccad7ad4a161854" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_outer_tree_1_1_node" kindref="compound">Node</ref><sp/><ref refid="class_outer_tree_1a53df69238da5f9539ccad7ad4a161854" kindref="member">Root</ref><sp/>=<sp/><ref refid="struct_outer_tree_1_1_node" kindref="compound">Node</ref>(0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66" refid="class_outer_tree_1ada109de4ffbba1cf61173c2ec7b2b037" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_outer_tree_1ada109de4ffbba1cf61173c2ec7b2b037" kindref="member">EncodingSize</ref><sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_outer_tree_1aee21139e81a4634cc0b14ab41c8beeae" kindref="member">NodeCounter</ref><sp/>=<sp/>1;<sp/><sp/></highlight></codeline>
<codeline lineno="69" refid="class_outer_tree_1a2531c94f622a9eac9a2f6288001b9f95" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;Node&gt;<sp/><ref refid="class_outer_tree_1a2531c94f622a9eac9a2f6288001b9f95" kindref="member">Nodes</ref>{};<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70" refid="class_outer_tree_1a1a6dec5e19409718b57ffb4443699acc" refkind="member"><highlight class="normal"><sp/><sp/>arma::sp_mat<sp/><ref refid="class_outer_tree_1a1a6dec5e19409718b57ffb4443699acc" kindref="member">V</ref>{};<sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>arma::sp_mat</highlight></codeline>
<codeline lineno="75" refid="class_outer_tree_1a07065fb0a850c32f4b33327de4aa181a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_outer_tree_1a07065fb0a850c32f4b33327de4aa181a" kindref="member">R</ref>{};<sp/></highlight></codeline>
<codeline lineno="76" refid="class_outer_tree_1a9d11ad9cb025ab160cabce18c0e9c0db" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_outer_tree_1a9d11ad9cb025ab160cabce18c0e9c0db" kindref="member">VertexCounter</ref><sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="77" refid="class_outer_tree_1a72354a8e0c2e6a3dca2aec0a6ca04659" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_outer_tree_1a72354a8e0c2e6a3dca2aec0a6ca04659" kindref="member">RayCounter</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78" refid="class_outer_tree_1ad6d173ba61e058edfc0bcdc34a1c3c05" refkind="member"><highlight class="normal"><sp/><sp/>GRBModel<sp/>*<ref refid="class_outer_tree_1ad6d173ba61e058edfc0bcdc34a1c3c05" kindref="member">MembershipLP</ref>;<sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_outer_tree_1aa5a62bc96b1cbe44c4c65c20fcfb244a" kindref="member">MembershipInit</ref>{</highlight><highlight class="keyword">false</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="81" refid="class_outer_tree_1aeed76662f492e43a3e7d31906af2d1f0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_outer_tree_1aeed76662f492e43a3e7d31906af2d1f0" kindref="member">isPure</ref>{</highlight><highlight class="keyword">false</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="82" refid="class_outer_tree_1a2e2c18329d8df030590757b58f29a66e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_outer_tree_1a2e2c18329d8df030590757b58f29a66e" kindref="member">isFeasible</ref>{</highlight><highlight class="keyword">false</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="class_outer_tree_1a279efab5d68b82a41e96bd4a1eb1f81a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_outer_tree_1a279efab5d68b82a41e96bd4a1eb1f81a" kindref="member">nextIdentifier</ref>()<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;NodeCounter++;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(this-&gt;NodeCounter<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="90" refid="class_outer_tree_1adb4f22de5ac9024ace9f2e8934a2872c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_outer_tree_1adb4f22de5ac9024ace9f2e8934a2872c" kindref="member">OuterTree</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>encSize,<sp/>GRBEnv<sp/>*env)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_outer_tree_1ad6d173ba61e058edfc0bcdc34a1c3c05" kindref="member">MembershipLP</ref>(new<sp/>GRBModel(*env))<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;Root<sp/>=<sp/><ref refid="struct_outer_tree_1_1_node" kindref="compound">Node</ref>(encSize);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;EncodingSize<sp/>=<sp/>encSize;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_outer_tree_1a2531c94f622a9eac9a2f6288001b9f95" kindref="member">Nodes</ref>.push_back(this-&gt;Root);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="class_outer_tree_1a1921d4c2e6b95e4ec6fe3ac764df2dd4" refkind="member"><highlight class="normal"><sp/><sp/>GRBModel<sp/>*<ref refid="class_outer_tree_1a1921d4c2e6b95e4ec6fe3ac764df2dd4" kindref="member">getMembershipLP</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_outer_tree_1ad6d173ba61e058edfc0bcdc34a1c3c05" kindref="member">MembershipLP</ref>;<sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="class_outer_tree_1abca17db7a75835d7b249d5d0459ac1a7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_outer_tree_1abca17db7a75835d7b249d5d0459ac1a7" kindref="member">getMembershipInit</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_outer_tree_1aa5a62bc96b1cbe44c4c65c20fcfb244a" kindref="member">MembershipInit</ref>;<sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="class_outer_tree_1a58af7c6606496b04d1a9890e2d0c3bdc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_outer_tree_1a58af7c6606496b04d1a9890e2d0c3bdc" kindref="member">setMembershipInit</ref>()<sp/>{<sp/>this-&gt;<ref refid="class_outer_tree_1aa5a62bc96b1cbe44c4c65c20fcfb244a" kindref="member">MembershipInit</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="class_outer_tree_1a9fe6a75d06c2e566ea53760fe77d731a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_outer_tree_1a9fe6a75d06c2e566ea53760fe77d731a" kindref="member">resetFeasibility</ref>()<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_outer_tree_1aeed76662f492e43a3e7d31906af2d1f0" kindref="member">isPure</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_outer_tree_1a2e2c18329d8df030590757b58f29a66e" kindref="member">isFeasible</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="class_outer_tree_1a340e298b0d305c0a0a0bbeb7ba5be42e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_outer_tree_1a340e298b0d305c0a0a0bbeb7ba5be42e" kindref="member">getPure</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_outer_tree_1aeed76662f492e43a3e7d31906af2d1f0" kindref="member">isPure</ref>;<sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="class_outer_tree_1af9064bccf6ced8cadd1b909261ab4c1d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_outer_tree_1af9064bccf6ced8cadd1b909261ab4c1d" kindref="member">setFeasible</ref>()<sp/>{<sp/>this-&gt;<ref refid="class_outer_tree_1a2e2c18329d8df030590757b58f29a66e" kindref="member">isFeasible</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="class_outer_tree_1a0a496414017621f69dbd9f362c0282d0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_outer_tree_1a0a496414017621f69dbd9f362c0282d0" kindref="member">setPure</ref>()<sp/>{<sp/>this-&gt;<ref refid="class_outer_tree_1aeed76662f492e43a3e7d31906af2d1f0" kindref="member">isPure</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="class_outer_tree_1a6445ef85cea32cc71c4da074a5ad6c8c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_outer_tree_1a6445ef85cea32cc71c4da074a5ad6c8c" kindref="member">getEncodingSize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_outer_tree_1ada109de4ffbba1cf61173c2ec7b2b037" kindref="member">EncodingSize</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="class_outer_tree_1a8705be45ce9161e71fa6b29495b3d4fd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::sp_mat<sp/>*<ref refid="class_outer_tree_1a8705be45ce9161e71fa6b29495b3d4fd" kindref="member">getV</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;this-&gt;<ref refid="class_outer_tree_1a1a6dec5e19409718b57ffb4443699acc" kindref="member">V</ref>;<sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="class_outer_tree_1ad96b67ad9d94129bca3fbbcc27d0eca5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::sp_mat<sp/>*<ref refid="class_outer_tree_1ad96b67ad9d94129bca3fbbcc27d0eca5" kindref="member">getR</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;this-&gt;<ref refid="class_outer_tree_1a07065fb0a850c32f4b33327de4aa181a" kindref="member">R</ref>;<sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="class_outer_tree_1a894c759176eb2874aa32551f286aba36" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_outer_tree_1a894c759176eb2874aa32551f286aba36" kindref="member">incrementVertices</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>increment)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;VertexCounter<sp/>+=<sp/>increment;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125" refid="class_outer_tree_1a18cec5e7790e856af0443c5640f71027" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_outer_tree_1a18cec5e7790e856af0443c5640f71027" kindref="member">incrementRays</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>increment)<sp/>{<sp/>this-&gt;RayCounter<sp/>+=<sp/>increment;<sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="class_outer_tree_1ae9e7270e38c6304f1c4f2578661e69a6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_outer_tree_1ae9e7270e38c6304f1c4f2578661e69a6" kindref="member">getVertexCount</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_outer_tree_1a9d11ad9cb025ab160cabce18c0e9c0db" kindref="member">VertexCounter</ref>;<sp/>}</highlight></codeline>
<codeline lineno="128" refid="class_outer_tree_1adf061a6f68cba5d59668bc281a75b8a6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_outer_tree_1adf061a6f68cba5d59668bc281a75b8a6" kindref="member">getRayCount</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_outer_tree_1a72354a8e0c2e6a3dca2aec0a6ca04659" kindref="member">RayCounter</ref>;<sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="class_outer_tree_1a6235111a9ce71685c155e2d10026a3ed" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_outer_tree_1a6235111a9ce71685c155e2d10026a3ed" kindref="member">getNodeCount</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_outer_tree_1aee21139e81a4634cc0b14ab41c8beeae" kindref="member">NodeCounter</ref>;<sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="class_outer_tree_1aa690cf8bf68f5519f57bef9243b01d41" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_outer_tree_1aa690cf8bf68f5519f57bef9243b01d41" kindref="member">addVertex</ref>(arma::vec<sp/>vertex)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_outer_tree_1a1a6dec5e19409718b57ffb4443699acc" kindref="member">V</ref><sp/>=<sp/>arma::join_cols(this-&gt;<ref refid="class_outer_tree_1a1a6dec5e19409718b57ffb4443699acc" kindref="member">V</ref>,<sp/>arma::sp_mat{vertex.t()});</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="class_outer_tree_1abbd11ce625de7660ad1117335260abf9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_outer_tree_1abbd11ce625de7660ad1117335260abf9" kindref="member">addRay</ref>(arma::vec<sp/>ray)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_outer_tree_1a07065fb0a850c32f4b33327de4aa181a" kindref="member">R</ref><sp/>=<sp/>arma::join_cols(this-&gt;<ref refid="class_outer_tree_1a07065fb0a850c32f4b33327de4aa181a" kindref="member">R</ref>,<sp/>arma::sp_mat{ray.t()});</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="class_outer_tree_1a2e4de48ca2dbdc666f002441d64907e9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_outer_tree_1a2e4de48ca2dbdc666f002441d64907e9" kindref="member">containsRay</ref>(arma::vec<sp/>ray,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ray.size()<sp/>!=<sp/>this-&gt;<ref refid="class_outer_tree_1a07065fb0a850c32f4b33327de4aa181a" kindref="member">R</ref>.n_cols)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>this-&gt;<ref refid="class_outer_tree_1a07065fb0a850c32f4b33327de4aa181a" kindref="member">R</ref>.n_rows;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>res<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>this-&gt;<ref refid="class_outer_tree_1a07065fb0a850c32f4b33327de4aa181a" kindref="member">R</ref>.n_cols;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::abs(ray.at(j)<sp/>-<sp/>this-&gt;<ref refid="class_outer_tree_1a07065fb0a850c32f4b33327de4aa181a" kindref="member">R</ref>.row(i).at(j))<sp/>&gt;<sp/>1e-5)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="class_outer_tree_1a0ff14517323237510b8afde3aecd8c7e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_outer_tree_1a0ff14517323237510b8afde3aecd8c7e" kindref="member">containsVertex</ref>(arma::vec<sp/>vertex,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vertex.size()<sp/>!=<sp/>this-&gt;<ref refid="class_outer_tree_1a1a6dec5e19409718b57ffb4443699acc" kindref="member">V</ref>.n_cols)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>this-&gt;<ref refid="class_outer_tree_1a1a6dec5e19409718b57ffb4443699acc" kindref="member">V</ref>.n_rows;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>res<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>this-&gt;<ref refid="class_outer_tree_1a1a6dec5e19409718b57ffb4443699acc" kindref="member">V</ref>.n_cols;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::abs(vertex.at(j)<sp/>-<sp/>this-&gt;<ref refid="class_outer_tree_1a1a6dec5e19409718b57ffb4443699acc" kindref="member">V</ref>.row(i).at(j))<sp/>&gt;<sp/>tol)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="class_outer_tree_1aac4829646fb93b6d8423006b9b4e6588" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_outer_tree_1_1_node" kindref="compound">Node</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_outer_tree_1aac4829646fb93b6d8423006b9b4e6588" kindref="member">getRoot</ref>()<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;this-&gt;<ref refid="class_outer_tree_1a53df69238da5f9539ccad7ad4a161854" kindref="member">Root</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="class_outer_tree_1ac36e9007b6ae51d896bf19a983069d6e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::vector&lt;Node&gt;<sp/>*<ref refid="class_outer_tree_1ac36e9007b6ae51d896bf19a983069d6e" kindref="member">getNodes</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;this-&gt;<ref refid="class_outer_tree_1a2531c94f622a9eac9a2f6288001b9f95" kindref="member">Nodes</ref>;<sp/>};</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_outer_tree_1a400465cf62bc782c7056662dfd37fff0" kindref="member">denyBranchingLocation</ref>(Node<sp/>&amp;node,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;location);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_outer_tree_1a0e3500def2dd1502d0fb65d5c6e1263d" kindref="member">denyBranchingLocations</ref>(Node<sp/>&amp;node,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;<sp/>&amp;locations);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>std::vector&lt;long<sp/>int&gt;<sp/><ref refid="class_outer_tree_1a499be54d3ac8186dc735b81d0507d913" kindref="member">singleBranch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idComp,<sp/>Node<sp/>&amp;t);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>std::vector&lt;long<sp/>int&gt;<sp/><ref refid="class_outer_tree_1a2c7384ad0adb74734f7a06e1b33a99e4" kindref="member">multipleBranch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;<sp/>idsComp,<sp/>Node<sp/>&amp;t);</highlight></codeline>
<codeline lineno="186"><highlight class="normal">};</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_algorithms" kindref="compound">Algorithms</ref><sp/>{</highlight></codeline>
<codeline lineno="190" refid="class_algorithms_1_1_outer_approximation" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_algorithms_1_1_outer_approximation" kindref="compound">OuterApproximation</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_algorithms_1_1_algorithm" kindref="compound">Algorithm</ref><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="192" refid="class_algorithms_1_1_outer_approximation_1a1fbf9b00496e8c364ff7b0ad68be73f7" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;std::shared_ptr&lt;Game::OuterLCP&gt;&gt;<sp/><ref refid="class_algorithms_1_1_outer_approximation_1a1fbf9b00496e8c364ff7b0ad68be73f7" kindref="member">outerLCP</ref>{};</highlight></codeline>
<codeline lineno="193" refid="class_algorithms_1_1_outer_approximation_1a9ad8c68a6d328c12d3750c40e2341c4a" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;OuterTree<sp/>*&gt;<sp/><ref refid="class_algorithms_1_1_outer_approximation_1a9ad8c68a6d328c12d3750c40e2341c4a" kindref="member">Trees</ref>;</highlight></codeline>
<codeline lineno="194" refid="class_algorithms_1_1_outer_approximation_1ae0338eaf5d6aa11f142810dbb321b8f6" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;OuterTree::Node<sp/>*&gt;<sp/><ref refid="class_algorithms_1_1_outer_approximation_1ae0338eaf5d6aa11f142810dbb321b8f6" kindref="member">Incumbent</ref>;</highlight></codeline>
<codeline lineno="195" refid="class_algorithms_1_1_outer_approximation_1a7b120186f79398ef1dd4fea9a1c95478" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_algorithms_1_1_outer_approximation_1a7b120186f79398ef1dd4fea9a1c95478" kindref="member">Feasible</ref>{</highlight><highlight class="keyword">false</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="196" refid="class_algorithms_1_1_outer_approximation_1ab4167f9f998bc17fe47ea95368b6368e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_algorithms_1_1_outer_approximation_1ab4167f9f998bc17fe47ea95368b6368e" kindref="member">Tolerance</ref><sp/>=<sp/>1e-6;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="199" refid="class_algorithms_1_1_outer_approximation_1aba316c78980f13d56739b9a1775af08b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_algorithms_1_1_outer_approximation_1aba316c78980f13d56739b9a1775af08b" kindref="member">getTol</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_algorithms_1_1_outer_approximation_1ab4167f9f998bc17fe47ea95368b6368e" kindref="member">Tolerance</ref>;<sp/>}</highlight></codeline>
<codeline lineno="200" refid="class_algorithms_1_1_outer_approximation_1a8609c6993fdb66a859ca2326f4c32d78" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_algorithms_1_1_outer_approximation_1a8609c6993fdb66a859ca2326f4c32d78" kindref="member">setTol</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol)<sp/>{<sp/>this-&gt;Tolerance<sp/>=<sp/>tol;<sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/><ref refid="class_algorithms_1_1_outer_approximation_1a2d8367bc28a43866bae2db6bf602f2e4" kindref="member">getNextBranchLocation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>player,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_outer_tree_1_1_node" kindref="compound">OuterTree::Node</ref><sp/>*node);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_algorithms_1_1_outer_approximation_1abfe0f86eb83e5eea9683d9149d05fa35" kindref="member">getFirstBranchLocation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>player,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_outer_tree_1_1_node" kindref="compound">OuterTree::Node</ref><sp/>*node);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="209" refid="class_algorithms_1_1_outer_approximation_1af2c96b2ed6fdf2d742527809c5f162e4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_algorithms_1_1_outer_approximation_1af2c96b2ed6fdf2d742527809c5f162e4" kindref="member">postSolving</ref>()</highlight><highlight class="keyword"><sp/>override</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//@todo<sp/>implement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="class_algorithms_1_1_outer_approximation_1a712eb86672657b93353bc877398bbe92" refkind="member"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_algorithms_1_1_outer_approximation_1a712eb86672657b93353bc877398bbe92" kindref="member">EPEC</ref>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="class_algorithms_1_1_outer_approximation_1a1bddaf4f742fd559ad1ee21fb32022ff" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_algorithms_1_1_outer_approximation_1a1bddaf4f742fd559ad1ee21fb32022ff" kindref="member">OuterApproximation</ref>(GRBEnv<sp/>*env,<sp/><ref refid="class_game_1_1_e_p_e_c" kindref="compound">Game::EPEC</ref><sp/>*EpecObj)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_algorithms_1_1_algorithm_1afaa849a6223a6abd701d4715cc55708c" kindref="member">EPECObject</ref><sp/>=<sp/>EpecObj;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_algorithms_1_1_algorithm_1a6dcf349b10b8a08d7c54b4df3e599264" kindref="member">Env</ref><sp/>=<sp/>env;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>The<sp/>constructor<sp/>re-builds<sp/>the<sp/>LCP<sp/>fields<sp/>in<sp/>the<sp/>EPEC<sp/>object<sp/>as<sp/>new</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>OuterLCP<sp/>objects</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_algorithms_1_1_algorithm_1afaa849a6223a6abd701d4715cc55708c" kindref="member">EPECObject</ref>-&gt;<ref refid="class_game_1_1_e_p_e_c_1a827a90f6d6c14f8e6d61694f9a63f450" kindref="member">Stats</ref>.<ref refid="struct_game_1_1_e_p_e_c_statistics_1ad12b580fddf7f8b31363521ac46fd75c" kindref="member">AlgorithmParam</ref>.<ref refid="struct_game_1_1_e_p_e_c_algorithm_params_1a683c9950a5584e5c63dc8abff9251b28" kindref="member">PolyLcp</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_algorithms_1_1_outer_approximation_1a1fbf9b00496e8c364ff7b0ad68be73f7" kindref="member">outerLCP</ref><sp/>=</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::shared_ptr&lt;Game::OuterLCP&gt;&gt;(<ref refid="class_algorithms_1_1_algorithm_1afaa849a6223a6abd701d4715cc55708c" kindref="member">EPECObject</ref>-&gt;<ref refid="class_game_1_1_e_p_e_c_1a8e4aa5e6b5baa41c7a977b3b66cdfdf2" kindref="member">NumPlayers</ref>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_algorithms_1_1_algorithm_1afaa849a6223a6abd701d4715cc55708c" kindref="member">EPECObject</ref>-&gt;<ref refid="class_game_1_1_e_p_e_c_1a8e4aa5e6b5baa41c7a977b3b66cdfdf2" kindref="member">NumPlayers</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_algorithms_1_1_outer_approximation_1a1fbf9b00496e8c364ff7b0ad68be73f7" kindref="member">outerLCP</ref>.at(i)<sp/>=<sp/>std::shared_ptr&lt;Game::OuterLCP&gt;(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_game_1_1_outer_l_c_p" kindref="compound">Game::OuterLCP</ref>(</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_algorithms_1_1_algorithm_1a6dcf349b10b8a08d7c54b4df3e599264" kindref="member">Env</ref>,<sp/>*<ref refid="class_algorithms_1_1_algorithm_1afaa849a6223a6abd701d4715cc55708c" kindref="member">EPECObject</ref>-&gt;<ref refid="class_game_1_1_e_p_e_c_1a1dc1b8bd642e450bc1e30eefe963fe13" kindref="member">PlayersLowerLevels</ref>.at(i).get()));</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_algorithms_1_1_algorithm_1afaa849a6223a6abd701d4715cc55708c" kindref="member">EPECObject</ref>-&gt;<ref refid="class_game_1_1_e_p_e_c_1ae133b3254fa8258788d60f994d1f8e9f" kindref="member">PlayersLCP</ref>.at(i)<sp/>=<sp/>this-&gt;<ref refid="class_algorithms_1_1_outer_approximation_1a1fbf9b00496e8c364ff7b0ad68be73f7" kindref="member">outerLCP</ref>.at(i);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>};<sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_algorithms_1_1_outer_approximation_1aa9dd85578ba5a76cd1aff09df7f5b532" kindref="member">solve</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//@todo<sp/>define<sp/>these<sp/>for<sp/>the<sp/>outer<sp/>approximation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_algorithms_1_1_outer_approximation_1aa9cdf5883a0b9f2f56985ed35a22b37d" kindref="member">isSolved</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>1e-4)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_algorithms_1_1_outer_approximation_1af718588244659c760c198baad364b43d" kindref="member">isFeasible</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;addedCuts,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>1e-4);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_algorithms_1_1_outer_approximation_1abab0fa5a604365d3917bbc94dc5ed638" kindref="member">isPureStrategy</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>1e-4)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_algorithms_1_1_outer_approximation_1a173b46816b43b026f571f5af3bfd5e24" kindref="member">printCurrentApprox</ref>();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_algorithms_1_1_outer_approximation_1a183e4315e12141c9cbaf7284fad800ba" kindref="member">hybridBranching</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>player,<sp/><ref refid="struct_outer_tree_1_1_node" kindref="compound">OuterTree::Node</ref><sp/>*node);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_algorithms_1_1_outer_approximation_1a3e0825a15112d26d02f206f799cab1e4" kindref="member">infeasibleBranching</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>player,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_outer_tree_1_1_node" kindref="compound">OuterTree::Node</ref><sp/>*node);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_algorithms_1_1_outer_approximation_1a61fd419296449987c67d9530cdd52ac6" kindref="member">deviationBranching</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>player,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_outer_tree_1_1_node" kindref="compound">OuterTree::Node</ref><sp/>*node);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_algorithms_1_1_outer_approximation_1a1fffd19679d4256e77ce68db210ffcfc" kindref="member">printBranchingLog</ref>(std::vector&lt;int&gt;<sp/>vector);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;GRBModel&gt;<sp/><ref refid="class_algorithms_1_1_outer_approximation_1a67b98d9d96dcedae74fe5b3ef08a9c73" kindref="member">getFeasQP</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>player,<sp/>arma::vec<sp/>x);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_algorithms_1_1_outer_approximation_1a554d7f90e0cc398ee9a588a2843a1c6b" kindref="member">addValueCut</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>player,<sp/>arma::vec<sp/>xOfIBestResponse,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec<sp/>xMinusI);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_algorithms_1_1_outer_approximation_1ad494ac92286a93181bf9cc8972a1f344" kindref="member">separationOracle</ref>(arma::vec<sp/>&amp;xOfI,<sp/>arma::vec<sp/>&amp;x,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>player,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>budget,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;addedCuts);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>GRBModel<sp/>*<ref refid="class_algorithms_1_1_outer_approximation_1a978e06ba908c925ed1d5de6401aa27f8" kindref="member">getDualMembershipLP</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>player,<sp/>arma::vec<sp/>vertex,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>normalization<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>arma::vec<sp/><ref refid="class_algorithms_1_1_outer_approximation_1a66d46894f2e1857b28832edbc509a8b4" kindref="member">normalizeRay</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec<sp/>ray);</highlight></codeline>
<codeline lineno="256"><highlight class="normal">};</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Algorithms</highlight></codeline>
    </programlisting>
    <location file="include/algorithms/outerapproximation.h"/>
  </compounddef>
</doxygen>
