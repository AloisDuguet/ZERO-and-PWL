<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="class_z_e_r_o_exception" kind="class" language="C++" prot="public">
    <compoundname>ZEROException</compoundname>
    <basecompoundref prot="public" virt="virtual">exception</basecompoundref>
    <includes refid="codes_8h" local="no">codes.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_z_e_r_o_exception_1a4bbadb4a87a695516306d365eb7b7b10" prot="protected" static="no" mutable="no">
        <type><ref refid="codes_8h_1aec3f6d9705d82787080ef99b37b7efea" kindref="member">ZEROErrorCode</ref></type>
        <definition>ZEROErrorCode ZEROException::error_code</definition>
        <argsstring></argsstring>
        <name>error_code</name>
        <briefdescription>
<para>This class manages the errors thrown by ZERO. </para>
        </briefdescription>
        <detaileddescription>
<para>Error code for the thrown exception </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/support/codes.h" line="104" column="17" bodyfile="include/support/codes.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_z_e_r_o_exception_1a1abf46fb8f32d04ecbb6ab5c7cd2daf8" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string ZEROException::error_additional</definition>
        <argsstring></argsstring>
        <name>error_additional</name>
        <initializer>= &quot;-&quot;</initializer>
        <briefdescription>
<para>Additional information about the error. This may be empty. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/support/codes.h" line="105" column="15" bodyfile="include/support/codes.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_z_e_r_o_exception_1a4b4c3c1b30831c01e3e258fc81a469a1" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ZEROException::ZEROException</definition>
        <argsstring>(ZEROErrorCode code)</argsstring>
        <name>ZEROException</name>
        <param>
          <type><ref refid="codes_8h_1aec3f6d9705d82787080ef99b37b7efea" kindref="member">ZEROErrorCode</ref></type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/support/codes.h" line="108" column="12" bodyfile="include/support/codes.h" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_z_e_r_o_exception_1aaea08717edb351f5820d0c5d85254341" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ZEROException::ZEROException</definition>
        <argsstring>(ZEROErrorCode code, const std::string &amp;more)</argsstring>
        <name>ZEROException</name>
        <param>
          <type><ref refid="codes_8h_1aec3f6d9705d82787080ef99b37b7efea" kindref="member">ZEROErrorCode</ref></type>
          <declname>code</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>more</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/support/codes.h" line="109" column="12" bodyfile="include/support/codes.h" bodystart="109" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="class_z_e_r_o_exception_1a4ffd7c11521237ebd7c54855f126d562" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ZEROException::ZEROException</definition>
        <argsstring>(GRBException &amp;e)</argsstring>
        <name>ZEROException</name>
        <param>
          <type>GRBException &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/support/codes.h" line="111" column="3" bodyfile="include/support/codes.h" bodystart="111" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_z_e_r_o_exception_1ac5f6924f0c605e060c600d0047b2efb3" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>ZEROException::~ZEROException</definition>
        <argsstring>() noexcept override=default</argsstring>
        <name>~ZEROException</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/support/codes.h" line="114" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_z_e_r_o_exception_1a973ee1191c22fba9c485db7ef53b65fe" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ZEROException::what</definition>
        <argsstring>() const noexcept override</argsstring>
        <name>what</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/support/codes.h" line="115" column="14" bodyfile="include/support/codes.h" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_z_e_r_o_exception_1a78ae78050e01b904c3161e8f08ec0c5d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="virtual">
        <type><ref refid="codes_8h_1aec3f6d9705d82787080ef99b37b7efea" kindref="member">ZEROErrorCode</ref></type>
        <definition>virtual ZEROErrorCode ZEROException::which</definition>
        <argsstring>() const noexcept</argsstring>
        <name>which</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/support/codes.h" line="116" column="25" bodyfile="include/support/codes.h" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_z_e_r_o_exception_1abe1e8fb3f63fe8db3a1c357a9684e29d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ZEROException::more</definition>
        <argsstring>() const noexcept</argsstring>
        <name>more</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/support/codes.h" line="117" column="24" bodyfile="include/support/codes.h" bodystart="117" bodyend="117"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>ZEROException</label>
        <link refid="class_z_e_r_o_exception"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::exception</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>ZEROException</label>
        <link refid="class_z_e_r_o_exception"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::exception</label>
      </node>
    </collaborationgraph>
    <location file="include/support/codes.h" line="98" column="50" bodyfile="include/support/codes.h" bodystart="98" bodyend="118"/>
    <listofallmembers>
      <member refid="class_z_e_r_o_exception_1a1abf46fb8f32d04ecbb6ab5c7cd2daf8" prot="protected" virt="non-virtual"><scope>ZEROException</scope><name>error_additional</name></member>
      <member refid="class_z_e_r_o_exception_1a4bbadb4a87a695516306d365eb7b7b10" prot="protected" virt="non-virtual"><scope>ZEROException</scope><name>error_code</name></member>
      <member refid="class_z_e_r_o_exception_1abe1e8fb3f63fe8db3a1c357a9684e29d" prot="public" virt="non-virtual"><scope>ZEROException</scope><name>more</name></member>
      <member refid="class_z_e_r_o_exception_1a973ee1191c22fba9c485db7ef53b65fe" prot="public" virt="non-virtual"><scope>ZEROException</scope><name>what</name></member>
      <member refid="class_z_e_r_o_exception_1a78ae78050e01b904c3161e8f08ec0c5d" prot="public" virt="virtual"><scope>ZEROException</scope><name>which</name></member>
      <member refid="class_z_e_r_o_exception_1a4b4c3c1b30831c01e3e258fc81a469a1" prot="public" virt="non-virtual"><scope>ZEROException</scope><name>ZEROException</name></member>
      <member refid="class_z_e_r_o_exception_1aaea08717edb351f5820d0c5d85254341" prot="public" virt="non-virtual"><scope>ZEROException</scope><name>ZEROException</name></member>
      <member refid="class_z_e_r_o_exception_1a4ffd7c11521237ebd7c54855f126d562" prot="public" virt="non-virtual"><scope>ZEROException</scope><name>ZEROException</name></member>
      <member refid="class_z_e_r_o_exception_1ac5f6924f0c605e060c600d0047b2efb3" prot="public" virt="non-virtual"><scope>ZEROException</scope><name>~ZEROException</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
