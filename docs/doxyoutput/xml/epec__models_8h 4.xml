<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="epec__models_8h" kind="file" language="C++">
    <compoundname>epec_models.h</compoundname>
    <includes refid="zero_8h" local="yes">zero.h</includes>
    <includes local="no">armadillo</includes>
    <includes local="no">gurobi_c++.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">memory</includes>
    <includes local="no">utility</includes>
    <includedby refid="epec__models_8cpp" local="yes">src/interfaces/epec_models.cpp</includedby>
    <includedby refid="shells_2epec_8cpp" local="yes">src/shells/epec.cpp</includedby>
    <incdepgraph>
      <node id="12">
        <label>support/utils.h</label>
        <link refid="utils_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>games/nash.h</label>
        <link refid="nash_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>support/codes.h</label>
        <link refid="codes_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="5">
        <label>map</label>
      </node>
      <node id="20">
        <label>games/games.h</label>
        <link refid="games_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>armadillo</label>
      </node>
      <node id="10">
        <label>exception</label>
      </node>
      <node id="13">
        <label>fstream</label>
      </node>
      <node id="1">
        <label>include/interfaces/epec_models.h</label>
        <link refid="epec__models_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>lcp/outer_lcp.h</label>
        <link refid="outer__lcp_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>lcp/poly_lcp.h</label>
        <link refid="poly__lcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>games/qpmp.h</label>
        <link refid="qpmp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>zero.h</label>
        <link refid="zero_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
      <node id="23">
        <label>utility</label>
      </node>
      <node id="15">
        <label>support/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>lcp/lcp.h</label>
        <link refid="lcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>games/EPEC_test.h</label>
        <link refid="_e_p_e_c__test_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>iostream</label>
      </node>
      <node id="11">
        <label>gurobi_c++.h</label>
      </node>
      <node id="14">
        <label>set</label>
      </node>
      <node id="6">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>include/interfaces/epec_models.h</label>
        <link refid="epec__models_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/shells/epec.cpp</label>
        <link refid="shells_2epec_8cpp"/>
      </node>
      <node id="2">
        <label>src/interfaces/epec_models.cpp</label>
        <link refid="epec__models_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_models_1_1_foll_par" prot="public">Models::FollPar</innerclass>
    <innerclass refid="struct_models_1_1_dem_par" prot="public">Models::DemPar</innerclass>
    <innerclass refid="struct_models_1_1_lead_par" prot="public">Models::LeadPar</innerclass>
    <innerclass refid="struct_models_1_1_lead_all_par" prot="public">Models::LeadAllPar</innerclass>
    <innerclass refid="struct_models_1_1_e_p_e_c_instance" prot="public">Models::EPECInstance</innerclass>
    <innerclass refid="class_models_1_1_e_p_e_c" prot="public">Models::EPEC</innerclass>
    <innernamespace refid="namespace_models">Models</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="epec__models_8h_1a0cb07b2258983336a21ed1a2cdaffd9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string to_string</definition>
        <argsstring>(const GRBVar &amp;var)</argsstring>
        <name>to_string</name>
        <param>
          <type>const GRBVar &amp;</type>
          <declname>var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="305" column="13" bodyfile="src/interfaces/epec_models.cpp" bodystart="1054" bodyend="1057" declfile="include/interfaces/epec_models.h" declline="305" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="epec__models_8h_1a5a58b1d925b1f8570e1a81372a7869f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string to_string</definition>
        <argsstring>(const GRBConstr &amp;cons, const GRBModel &amp;model)</argsstring>
        <name>to_string</name>
        <param>
          <type>const GRBConstr &amp;</type>
          <declname>cons</declname>
        </param>
        <param>
          <type>const GRBModel &amp;</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="307" column="13" bodyfile="src/interfaces/epec_models.cpp" bodystart="1035" bodyend="1052" declfile="include/interfaces/epec_models.h" declline="307" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="epec__models_8h_1a068bbe67e10741d18e41e9390ecd95b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_models_1_1_foll_par" kindref="compound">Models::FollPar</ref></type>
        <definition>Models::FollPar operator+</definition>
        <argsstring>(const Models::FollPar &amp;F1, const Models::FollPar &amp;F2)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="struct_models_1_1_foll_par" kindref="compound">Models::FollPar</ref> &amp;</type>
          <declname>F1</declname>
        </param>
        <param>
          <type>const <ref refid="struct_models_1_1_foll_par" kindref="compound">Models::FollPar</ref> &amp;</type>
          <declname>F2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interfaces/epec_models.h" line="309" column="17" bodyfile="src/interfaces/epec_models.cpp" bodystart="1006" bodyend="1030" declfile="include/interfaces/epec_models.h" declline="309" declcolumn="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="zero_8h" kindref="compound">zero.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;armadillo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gurobi_c++.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="namespace_models" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_models" kindref="compound">Models</ref><sp/>{</highlight></codeline>
<codeline lineno="17" refid="namespace_models_1a75c15ea53b50caf905986359bbc23cab" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_models_1_1_foll_par" kindref="compound">FollPar</ref><sp/><ref refid="struct_models_1_1_foll_par" kindref="compound">FollPar</ref>;</highlight></codeline>
<codeline lineno="18" refid="namespace_models_1ac928cbc777ce5f362354f5f3ae42d5d7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_models_1_1_dem_par" kindref="compound">DemPar</ref><sp/><ref refid="struct_models_1_1_dem_par" kindref="compound">DemPar</ref>;</highlight></codeline>
<codeline lineno="19" refid="namespace_models_1a14e4af73d28e599c41f07e8ae3edac52" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_models_1_1_lead_par" kindref="compound">LeadPar</ref><sp/><ref refid="struct_models_1_1_lead_par" kindref="compound">LeadPar</ref>;</highlight></codeline>
<codeline lineno="20" refid="namespace_models_1ad7371f9c9faadf542226ce85ac1cb596" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_models_1_1_lead_all_par" kindref="compound">LeadAllPar</ref><sp/><ref refid="struct_models_1_1_lead_all_par" kindref="compound">LeadAllPar</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="namespace_models_1a8fcea6b0a4c8c1403d8151c8a85f02c4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespace_models_1a8fcea6b0a4c8c1403d8151c8a85f02c4" kindref="member">TaxType</ref><sp/>{<sp/><ref refid="namespace_models_1a8fcea6b0a4c8c1403d8151c8a85f02c4a6cf964532157ab0f02d24e287a383f67" kindref="member">StandardTax</ref>,<sp/><ref refid="namespace_models_1a8fcea6b0a4c8c1403d8151c8a85f02c4ab73afec7571c480b11f1a595a161a2bf" kindref="member">SingleTax</ref>,<sp/><ref refid="namespace_models_1a8fcea6b0a4c8c1403d8151c8a85f02c4a3836ce10651ef6e6f12d27e27f257f41" kindref="member">CarbonTax</ref><sp/>};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="struct_models_1_1_foll_par" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_models_1_1_foll_par" kindref="compound">FollPar</ref><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="struct_models_1_1_foll_par_1ad460e71610da45ad9e267820374c0a17" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="struct_models_1_1_foll_par_1ad460e71610da45ad9e267820374c0a17" kindref="member">costs_quad</ref><sp/>=</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{};<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="struct_models_1_1_foll_par_1a28ab4749fcbce704060cd859c1b5bb87" kindref="member">costs_lin</ref><sp/>=</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{};<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="struct_models_1_1_foll_par_1a717a560bd0298a462aaf9f0493b7bb84" kindref="member">capacities</ref><sp/>=</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{};<sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="struct_models_1_1_foll_par_1a3b94162d1b65ef8c7d6ab77d4ba22c82" kindref="member">emission_costs</ref><sp/>=</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{};<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="struct_models_1_1_foll_par_1adc4cbeeec17377c3d52e056b940ade99" kindref="member">tax_caps</ref><sp/>=<sp/>{};<sp/></highlight></codeline>
<codeline lineno="40" refid="struct_models_1_1_foll_par_1aaafe051ffea4e71c3744ab655e0109a9" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="struct_models_1_1_foll_par_1aaafe051ffea4e71c3744ab655e0109a9" kindref="member">names</ref><sp/>=<sp/>{};<sp/></highlight></codeline>
<codeline lineno="41" refid="struct_models_1_1_foll_par_1aee58264b73959ba267ed181829c6ab97" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_models_1_1_foll_par_1aee58264b73959ba267ed181829c6ab97" kindref="member">FollPar</ref>(std::vector&lt;double&gt;<sp/>costs_quad_<sp/>=<sp/>{},</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>costs_lin_<sp/>=<sp/>{},</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>capacities_<sp/>=<sp/>{},</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>emission_costs_<sp/>=<sp/>{},</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>tax_caps_<sp/>=<sp/>{},</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>names_<sp/>=<sp/>{})</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="struct_models_1_1_foll_par_1ad460e71610da45ad9e267820374c0a17" kindref="member">costs_quad</ref>{costs_quad_},<sp/><ref refid="struct_models_1_1_foll_par_1a28ab4749fcbce704060cd859c1b5bb87" kindref="member">costs_lin</ref>{costs_lin_},<sp/><ref refid="struct_models_1_1_foll_par_1a717a560bd0298a462aaf9f0493b7bb84" kindref="member">capacities</ref>{capacities_},</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_models_1_1_foll_par_1a3b94162d1b65ef8c7d6ab77d4ba22c82" kindref="member">emission_costs</ref>{emission_costs_},<sp/><ref refid="struct_models_1_1_foll_par_1adc4cbeeec17377c3d52e056b940ade99" kindref="member">tax_caps</ref>(tax_caps_),<sp/><ref refid="struct_models_1_1_foll_par_1aaafe051ffea4e71c3744ab655e0109a9" kindref="member">names</ref>{names_}<sp/>{}</highlight></codeline>
<codeline lineno="49"><highlight class="normal">};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="struct_models_1_1_dem_par" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_models_1_1_dem_par" kindref="compound">DemPar</ref><sp/>{</highlight></codeline>
<codeline lineno="53" refid="struct_models_1_1_dem_par_1a698f9479dec96509d9623d450e207d10" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_models_1_1_dem_par_1a698f9479dec96509d9623d450e207d10" kindref="member">alpha</ref><sp/>=<sp/>100;<sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_models_1_1_dem_par_1a3b366b018a89e5affe7a1cc46edcaff4" kindref="member">beta</ref><sp/>=<sp/>2;<sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="struct_models_1_1_dem_par_1a7430025a1817fde9953404cba115397e" kindref="member">DemPar</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_models_1_1_dem_par_1a698f9479dec96509d9623d450e207d10" kindref="member">alpha</ref><sp/>=<sp/>100,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_models_1_1_dem_par_1a3b366b018a89e5affe7a1cc46edcaff4" kindref="member">beta</ref><sp/>=<sp/>2)<sp/>:<sp/><ref refid="struct_models_1_1_dem_par_1a698f9479dec96509d9623d450e207d10" kindref="member">alpha</ref>{<ref refid="struct_models_1_1_dem_par_1a698f9479dec96509d9623d450e207d10" kindref="member">alpha</ref>},<sp/><ref refid="struct_models_1_1_dem_par_1a3b366b018a89e5affe7a1cc46edcaff4" kindref="member">beta</ref>{<ref refid="struct_models_1_1_dem_par_1a3b366b018a89e5affe7a1cc46edcaff4" kindref="member">beta</ref>}<sp/>{};</highlight></codeline>
<codeline lineno="58"><highlight class="normal">};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="struct_models_1_1_lead_par" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_models_1_1_lead_par" kindref="compound">LeadPar</ref><sp/>{</highlight></codeline>
<codeline lineno="62" refid="struct_models_1_1_lead_par_1a5a386cd2610335a095d37ed48ac283c1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_models_1_1_lead_par_1a5a386cd2610335a095d37ed48ac283c1" kindref="member">import_limit</ref><sp/>=<sp/>-1;<sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_models_1_1_lead_par_1a2bb797f5041c71bdd70266531ebd1d0d" kindref="member">export_limit</ref><sp/>=<sp/>-1;<sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_models_1_1_lead_par_1a7b7a2d7ccc4d246c261728f347d23263" kindref="member">price_limit</ref><sp/>=</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-1;<sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="struct_models_1_1_lead_par_1ae3bef9b0949e2239fcf0b9d82e8f01fe" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespace_models_1a8fcea6b0a4c8c1403d8151c8a85f02c4" kindref="member">Models::TaxType</ref><sp/><ref refid="struct_models_1_1_lead_par_1ae3bef9b0949e2239fcf0b9d82e8f01fe" kindref="member">tax_type</ref><sp/>=</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_models_1a8fcea6b0a4c8c1403d8151c8a85f02c4a6cf964532157ab0f02d24e287a383f67" kindref="member">Models::TaxType::StandardTax</ref>;<sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_models_1_1_lead_par_1a65333bb2bb9c2060513f920f126bfe53" kindref="member">tax_revenue</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>LeadPar(double<sp/>imp_lim<sp/>=<sp/>-1,<sp/>double<sp/>exp_lim<sp/>=<sp/>-1,<sp/>double<sp/>price_limit<sp/>=<sp/>-1,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>bool<sp/>tax_revenue<sp/>=<sp/>false,<sp/>Models::TaxType<sp/>tax_type_<sp/>=</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Models::TaxType::StandardTax)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>:<sp/>import_limit{imp_lim},<sp/>export_limit{exp_lim},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>price_limit{price_limit},tax_type{tax_type_},<sp/>tax_revenue{tax_revenue}<sp/>{}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="struct_models_1_1_lead_par_1a49d19ccb406e39c14e865e2cd53f1bc5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_models_1_1_lead_par_1a49d19ccb406e39c14e865e2cd53f1bc5" kindref="member">LeadPar</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>imp_lim<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>exp_lim<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_models_1_1_lead_par_1a7b7a2d7ccc4d246c261728f347d23263" kindref="member">price_limit</ref><sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_models_1_1_lead_par_1a65333bb2bb9c2060513f920f126bfe53" kindref="member">tax_revenue</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tax_type_<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="struct_models_1_1_lead_par_1a5a386cd2610335a095d37ed48ac283c1" kindref="member">import_limit</ref>{imp_lim},<sp/><ref refid="struct_models_1_1_lead_par_1a2bb797f5041c71bdd70266531ebd1d0d" kindref="member">export_limit</ref>{exp_lim},<sp/><ref refid="struct_models_1_1_lead_par_1a7b7a2d7ccc4d246c261728f347d23263" kindref="member">price_limit</ref>{<ref refid="struct_models_1_1_lead_par_1a7b7a2d7ccc4d246c261728f347d23263" kindref="member">price_limit</ref>},</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_models_1_1_lead_par_1a65333bb2bb9c2060513f920f126bfe53" kindref="member">tax_revenue</ref>{<ref refid="struct_models_1_1_lead_par_1a65333bb2bb9c2060513f920f126bfe53" kindref="member">tax_revenue</ref>}<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(tax_type_)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_models_1_1_lead_par_1ae3bef9b0949e2239fcf0b9d82e8f01fe" kindref="member">tax_type</ref><sp/>=<sp/><ref refid="namespace_models_1a8fcea6b0a4c8c1403d8151c8a85f02c4a6cf964532157ab0f02d24e287a383f67" kindref="member">Models::TaxType::StandardTax</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_models_1_1_lead_par_1ae3bef9b0949e2239fcf0b9d82e8f01fe" kindref="member">tax_type</ref><sp/>=<sp/><ref refid="namespace_models_1a8fcea6b0a4c8c1403d8151c8a85f02c4ab73afec7571c480b11f1a595a161a2bf" kindref="member">Models::TaxType::SingleTax</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_models_1_1_lead_par_1ae3bef9b0949e2239fcf0b9d82e8f01fe" kindref="member">tax_type</ref><sp/>=<sp/><ref refid="namespace_models_1a8fcea6b0a4c8c1403d8151c8a85f02c4a3836ce10651ef6e6f12d27e27f257f41" kindref="member">Models::TaxType::CarbonTax</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_models_1_1_lead_par_1ae3bef9b0949e2239fcf0b9d82e8f01fe" kindref="member">tax_type</ref><sp/>=<sp/><ref refid="namespace_models_1a8fcea6b0a4c8c1403d8151c8a85f02c4a6cf964532157ab0f02d24e287a383f67" kindref="member">Models::TaxType::StandardTax</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal">};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="struct_models_1_1_lead_all_par" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_models_1_1_lead_all_par" kindref="compound">LeadAllPar</ref><sp/>{</highlight></codeline>
<codeline lineno="101" refid="struct_models_1_1_lead_all_par_1a50316bb42793ad51f81470ec2c75deaa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_models_1_1_lead_all_par_1a50316bb42793ad51f81470ec2c75deaa" kindref="member">n_followers</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102" refid="struct_models_1_1_lead_all_par_1a285c3f95be3345e51b85c1180b2e3e4e" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="struct_models_1_1_lead_all_par_1a285c3f95be3345e51b85c1180b2e3e4e" kindref="member">name</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103" refid="struct_models_1_1_lead_all_par_1adf8e44c2a1e3018f3393a2af5ae16ca3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_models_1_1_foll_par" kindref="compound">Models::FollPar</ref><sp/><ref refid="struct_models_1_1_lead_all_par_1adf8e44c2a1e3018f3393a2af5ae16ca3" kindref="member">FollowerParam</ref><sp/>=<sp/>{};<sp/></highlight></codeline>
<codeline lineno="104" refid="struct_models_1_1_lead_all_par_1a5e652d9a446b3d9c37d3f201ff2aec78" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_models_1_1_dem_par" kindref="compound">Models::DemPar</ref><sp/><ref refid="struct_models_1_1_lead_all_par_1a5e652d9a446b3d9c37d3f201ff2aec78" kindref="member">DemandParam</ref><sp/>=<sp/>{};<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105" refid="struct_models_1_1_lead_all_par_1a825a28d96986f5e148db46f1f6ebdfa9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_models_1_1_lead_par" kindref="compound">Models::LeadPar</ref><sp/><ref refid="struct_models_1_1_lead_all_par_1a825a28d96986f5e148db46f1f6ebdfa9" kindref="member">LeaderParam</ref><sp/>=<sp/>{};<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106" refid="struct_models_1_1_lead_all_par_1ab0e167d9b5b94d15b96d0ef4b8404659" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_models_1_1_lead_all_par_1ab0e167d9b5b94d15b96d0ef4b8404659" kindref="member">LeadAllPar</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_foll,<sp/>std::string<sp/><ref refid="struct_models_1_1_lead_all_par_1a285c3f95be3345e51b85c1180b2e3e4e" kindref="member">name</ref>,<sp/><ref refid="struct_models_1_1_foll_par" kindref="compound">Models::FollPar</ref><sp/>FP<sp/>=<sp/>{},</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_models_1_1_dem_par" kindref="compound">Models::DemPar</ref><sp/>DP<sp/>=<sp/>{},<sp/><ref refid="struct_models_1_1_lead_par" kindref="compound">Models::LeadPar</ref><sp/>LP<sp/>=<sp/>{})</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="struct_models_1_1_lead_all_par_1a50316bb42793ad51f81470ec2c75deaa" kindref="member">n_followers</ref>{n_foll},<sp/><ref refid="struct_models_1_1_lead_all_par_1a285c3f95be3345e51b85c1180b2e3e4e" kindref="member">name</ref>{std::move(<ref refid="struct_models_1_1_lead_all_par_1a285c3f95be3345e51b85c1180b2e3e4e" kindref="member">name</ref>)},<sp/><ref refid="struct_models_1_1_lead_all_par_1adf8e44c2a1e3018f3393a2af5ae16ca3" kindref="member">FollowerParam</ref>{FP},</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_models_1_1_lead_all_par_1a5e652d9a446b3d9c37d3f201ff2aec78" kindref="member">DemandParam</ref>{DP},<sp/><ref refid="struct_models_1_1_lead_all_par_1a825a28d96986f5e148db46f1f6ebdfa9" kindref="member">LeaderParam</ref>{LP}<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Nothing<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal">};</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="struct_models_1_1_e_p_e_c_instance" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_models_1_1_e_p_e_c_instance" kindref="compound">EPECInstance</ref><sp/>{</highlight></codeline>
<codeline lineno="116" refid="struct_models_1_1_e_p_e_c_instance_1ae244048e3bb0509d1ec35afa8eb97903" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;Models::LeadAllPar&gt;<sp/><ref refid="struct_models_1_1_e_p_e_c_instance_1ae244048e3bb0509d1ec35afa8eb97903" kindref="member">Countries</ref><sp/>=<sp/>{};<sp/></highlight></codeline>
<codeline lineno="117" refid="struct_models_1_1_e_p_e_c_instance_1a66f78f8fc226176952be87b1d61b32ec" refkind="member"><highlight class="normal"><sp/><sp/>arma::sp_mat<sp/><ref refid="struct_models_1_1_e_p_e_c_instance_1a66f78f8fc226176952be87b1d61b32ec" kindref="member">TransportationCosts</ref><sp/>=<sp/>{};<sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="struct_models_1_1_e_p_e_c_instance_1a3f4f3e937cc617a809040c035b8ddae0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="struct_models_1_1_e_p_e_c_instance_1a3f4f3e937cc617a809040c035b8ddae0" kindref="member">EPECInstance</ref>(std::string<sp/>filename)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="struct_models_1_1_e_p_e_c_instance_1a1224e238323bb6387cea74f8c59acefc" kindref="member">load</ref>(filename);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="122" refid="struct_models_1_1_e_p_e_c_instance_1a4dfd3b98d5ce7b325b0b6f345186169c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_models_1_1_e_p_e_c_instance_1a4dfd3b98d5ce7b325b0b6f345186169c" kindref="member">EPECInstance</ref>(std::vector&lt;Models::LeadAllPar&gt;<sp/>Countries_,<sp/>arma::sp_mat<sp/>Transp_)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="struct_models_1_1_e_p_e_c_instance_1ae244048e3bb0509d1ec35afa8eb97903" kindref="member">Countries</ref>{Countries_},<sp/><ref refid="struct_models_1_1_e_p_e_c_instance_1a66f78f8fc226176952be87b1d61b32ec" kindref="member">TransportationCosts</ref>{Transp_}<sp/>{}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_models_1_1_e_p_e_c_instance_1a1224e238323bb6387cea74f8c59acefc" kindref="member">load</ref>(std::string<sp/>filename);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_models_1_1_e_p_e_c_instance_1aa2ef90d0954b07bb4a947905aa1468c2" kindref="member">save</ref>(std::string<sp/>filename);</highlight></codeline>
<codeline lineno="131"><highlight class="normal">};</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="namespace_models_1a64b758b38a6e4004b84630ec087bf76e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespace_models_1a64b758b38a6e4004b84630ec087bf76e" kindref="member">LeaderVars</ref><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><ref refid="namespace_models_1a64b758b38a6e4004b84630ec087bf76eaf2dcda11a77f92f3c0cd7e08f37ce122" kindref="member">FollowerStart</ref>,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><ref refid="namespace_models_1a64b758b38a6e4004b84630ec087bf76eabd2f8eff3cf4fc193002ef846a45c155" kindref="member">NetImport</ref>,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><ref refid="namespace_models_1a64b758b38a6e4004b84630ec087bf76eab352c19b5ee483451acb8039d5b92edd" kindref="member">NetExport</ref>,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><ref refid="namespace_models_1a64b758b38a6e4004b84630ec087bf76eabaf050cedcda40eabc94d4a7bd5116cb" kindref="member">CountryImport</ref>,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><ref refid="namespace_models_1a64b758b38a6e4004b84630ec087bf76ea55dd587cdc4a278be6a5c37f9e539de1" kindref="member">Caps</ref>,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><ref refid="namespace_models_1a64b758b38a6e4004b84630ec087bf76ea4b78ac8eb158840e9638a3aeb26c4a9d" kindref="member">Tax</ref>,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><ref refid="namespace_models_1a64b758b38a6e4004b84630ec087bf76ea24a98047b142b17863fc0bbdde6c6321" kindref="member">TaxQuad</ref>,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><ref refid="namespace_models_1a64b758b38a6e4004b84630ec087bf76ea17d72d09ea044ac3506cece93e19f6b8" kindref="member">DualVar</ref>,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><ref refid="namespace_models_1a64b758b38a6e4004b84630ec087bf76ea2afd0bab7c35873bc8dd372c6d255448" kindref="member">ConvHullDummy</ref>,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><ref refid="namespace_models_1a64b758b38a6e4004b84630ec087bf76ea87557f11575c0ad78e4e28abedc13b6e" kindref="member">End</ref></highlight></codeline>
<codeline lineno="144"><highlight class="normal">};</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal">std::ostream<sp/>&amp;<ref refid="namespace_models_1a322ba4df5ecd2c7fbec05df2e81ae9e2" kindref="member">operator&lt;&lt;</ref>(std::ostream<sp/>&amp;ost,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_models_1a75c15ea53b50caf905986359bbc23cab" kindref="member">FollPar</ref><sp/>P);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">std::ostream<sp/>&amp;<ref refid="namespace_models_1a322ba4df5ecd2c7fbec05df2e81ae9e2" kindref="member">operator&lt;&lt;</ref>(std::ostream<sp/>&amp;ost,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_models_1ac928cbc777ce5f362354f5f3ae42d5d7" kindref="member">DemPar</ref><sp/>P);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal">std::ostream<sp/>&amp;<ref refid="namespace_models_1a322ba4df5ecd2c7fbec05df2e81ae9e2" kindref="member">operator&lt;&lt;</ref>(std::ostream<sp/>&amp;ost,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_models_1a14e4af73d28e599c41f07e8ae3edac52" kindref="member">LeadPar</ref><sp/>P);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal">std::ostream<sp/>&amp;<ref refid="namespace_models_1a322ba4df5ecd2c7fbec05df2e81ae9e2" kindref="member">operator&lt;&lt;</ref>(std::ostream<sp/>&amp;ost,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_models_1ad7371f9c9faadf542226ce85ac1cb596" kindref="member">LeadAllPar</ref><sp/>P);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal">std::ostream<sp/>&amp;<ref refid="namespace_models_1a322ba4df5ecd2c7fbec05df2e81ae9e2" kindref="member">operator&lt;&lt;</ref>(std::ostream<sp/>&amp;ost,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_models_1a64b758b38a6e4004b84630ec087bf76e" kindref="member">LeaderVars</ref><sp/>l);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal">std::ostream<sp/>&amp;<ref refid="namespace_models_1a322ba4df5ecd2c7fbec05df2e81ae9e2" kindref="member">operator&lt;&lt;</ref>(std::ostream<sp/>&amp;ost,<sp/>EPECInstance<sp/>I);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="namespace_models_1aec9f0d1d113730ec8734d5f6ab9cab9d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_models_1aec9f0d1d113730ec8734d5f6ab9cab9d" kindref="member">LeadLocs</ref><sp/>=<sp/>std::map&lt;LeaderVars,<sp/>unsigned<sp/>int&gt;;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_models_1a81197aab1f9d6801996579a891f07791" kindref="member">increaseVal</ref>(<ref refid="namespace_models_1aec9f0d1d113730ec8734d5f6ab9cab9d" kindref="member">LeadLocs</ref><sp/>&amp;L,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_models_1a64b758b38a6e4004b84630ec087bf76e" kindref="member">LeaderVars</ref><sp/>start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>startnext<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_models_1ad589f24f13f96365aa0198322e5a11dc" kindref="member">decreaseVal</ref>(<ref refid="namespace_models_1aec9f0d1d113730ec8734d5f6ab9cab9d" kindref="member">LeadLocs</ref><sp/>&amp;L,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_models_1a64b758b38a6e4004b84630ec087bf76e" kindref="member">LeaderVars</ref><sp/>start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>startnext<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_models_1a723b05bd3c4740451512f73d0c75ceb6" kindref="member">init</ref>(<ref refid="namespace_models_1aec9f0d1d113730ec8734d5f6ab9cab9d" kindref="member">LeadLocs</ref><sp/>&amp;L);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><ref refid="namespace_models_1a64b758b38a6e4004b84630ec087bf76e" kindref="member">LeaderVars</ref><sp/><ref refid="namespace_models_1ae235f93cb5c937e10ef640f9fe99cba0" kindref="member">operator+</ref>(<ref refid="namespace_models_1a64b758b38a6e4004b84630ec087bf76e" kindref="member">Models::LeaderVars</ref><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="class_models_1_1_e_p_e_c" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_models_1_1_e_p_e_c" kindref="compound">EPEC</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_game_1_1_e_p_e_c" kindref="compound">Game::EPEC</ref><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Mandatory<sp/>virtuals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_models_1_1_e_p_e_c_1a189ce1f5b375df11455f428a40738039" kindref="member">makeObjectivePlayer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_game_1_1_q_p___objective" kindref="compound">Game::QP_Objective</ref><sp/>&amp;QP_obj)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_models_1_1_e_p_e_c_1adb4f3499fa2c03522ce997f0c3f63316" kindref="member">updateLocations</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_models_1_1_e_p_e_c_1aa9dacf6f8965a70a18d47e196cb6f03f" kindref="member">preFinalize</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="class_models_1_1_e_p_e_c_1a2e38c1ac580d46b2a0bdaa36a8d46e63" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_models_1_1_e_p_e_c_1a2e38c1ac580d46b2a0bdaa36a8d46e63" kindref="member">postFinalize</ref>()</highlight><highlight class="keyword"><sp/>override</highlight><highlight class="normal">{};</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>override;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Rest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="186" refid="class_models_1_1_e_p_e_c_1abf67fd852539ed21d238381efec1affa" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;LeadAllPar&gt;<sp/><ref refid="class_models_1_1_e_p_e_c_1abf67fd852539ed21d238381efec1affa" kindref="member">AllLeadPars</ref><sp/>=</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{};<sp/></highlight></codeline>
<codeline lineno="188" refid="class_models_1_1_e_p_e_c_1adde9b8a110bf03c10b036f5004bc721e" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;std::shared_ptr&lt;Game::QP_Param&gt;&gt;<sp/><ref refid="class_models_1_1_e_p_e_c_1adde9b8a110bf03c10b036f5004bc721e" kindref="member">MC_QP</ref><sp/>=</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{};<sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>arma::sp_mat<sp/><ref refid="class_models_1_1_e_p_e_c_1afe2b46d396e7980d8336099d8d916b19" kindref="member">TranspCosts</ref><sp/>=</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{};<sp/></highlight></codeline>
<codeline lineno="193" refid="class_models_1_1_e_p_e_c_1a4de4147addd36ee7df8e0944bfa017ea" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;unsigned<sp/>int&gt;<sp/><ref refid="class_models_1_1_e_p_e_c_1a4de4147addd36ee7df8e0944bfa017ea" kindref="member">nImportMarkets</ref><sp/>=</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{};<sp/></highlight></codeline>
<codeline lineno="195" refid="class_models_1_1_e_p_e_c_1ac8aaf82d32d88e211018505a5c99907a" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;LeadLocs&gt;<sp/><ref refid="class_models_1_1_e_p_e_c_1ac8aaf82d32d88e211018505a5c99907a" kindref="member">Locations</ref><sp/>=</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{};<sp/></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="class_models_1_1_e_p_e_c_1af93e428bf0f642c3f46dc9d34641a74d" refkind="member"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>unsigned<sp/>int&gt;<sp/><ref refid="class_models_1_1_e_p_e_c_1af93e428bf0f642c3f46dc9d34641a74d" kindref="member">name2nos</ref><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="199" refid="class_models_1_1_e_p_e_c_1a90bc7510117aa20be8fb042f35351320" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_models_1_1_e_p_e_c_1a90bc7510117aa20be8fb042f35351320" kindref="member">taxVars</ref><sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>std::vector&lt;arma::sp_mat&gt;</highlight></codeline>
<codeline lineno="201" refid="class_models_1_1_e_p_e_c_1ac2c5e7306ea5ab51ea953abdf9e4447f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_models_1_1_e_p_e_c_1ac2c5e7306ea5ab51ea953abdf9e4447f" kindref="member">LeadConses</ref>{};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="202" refid="class_models_1_1_e_p_e_c_1af6b6f5d1fb8f3eb3ba888bc5fd656bc6" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;arma::vec&gt;<sp/><ref refid="class_models_1_1_e_p_e_c_1af6b6f5d1fb8f3eb3ba888bc5fd656bc6" kindref="member">LeadRHSes</ref>{};<sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_models_1_1_e_p_e_c_1a78f228dd404eb6167125d1de1df3340a" kindref="member">dataCheck</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>chkAllLeadPars<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>chkcountriesLL<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>chkMC_QP<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>chkLeadConses<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>chkLeadRHSes<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>chknImportMarkets<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>chkLocations<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>chkLeaderLocations<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>chkLeadObjec<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Super<sp/>low<sp/>level</highlight></codeline>
<codeline lineno="213"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_models_1_1_e_p_e_c_1a043aff53098136d5f60d53a839b0ed85" kindref="member">ParamValid</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_models_1_1_lead_all_par" kindref="compound">LeadAllPar</ref><sp/>&amp;Param)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_models_1_1_e_p_e_c_1afc7d4b6c72f488300b31cf51db2f81d6" kindref="member">make_LL_QP</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_models_1_1_lead_all_par" kindref="compound">LeadAllPar</ref><sp/>&amp;Params,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>follower,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_game_1_1_q_p___param" kindref="compound">Game::QP_Param</ref><sp/>*Foll,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_models_1aec9f0d1d113730ec8734d5f6ab9cab9d" kindref="member">LeadLocs</ref><sp/>&amp;Loc)<sp/>noexcept;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_models_1_1_e_p_e_c_1ac0317095ef32ba34772c9e73f26dc0ad" kindref="member">make_LL_LeadCons</ref>(arma::sp_mat<sp/>&amp;LeadCons,<sp/>arma::vec<sp/>&amp;LeadRHS,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_models_1_1_lead_all_par" kindref="compound">LeadAllPar</ref><sp/>&amp;Param,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_models_1aec9f0d1d113730ec8734d5f6ab9cab9d" kindref="member">Models::LeadLocs</ref><sp/>&amp;Loc<sp/>=<sp/>{},</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>import_lim_cons<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>export_lim_cons<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>price_lim_cons<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>activeTaxCaps<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_models_1_1_e_p_e_c_1a926d12ae3829db9068a6ce813fbbdfce" kindref="member">add_Leaders_tradebalance_constraints</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_models_1_1_e_p_e_c_1a295ae8dd8ca635a407940bc78ce8875a" kindref="member">make_MC_leader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_models_1_1_e_p_e_c_1a92ed1b673ace45b835bc07cc9b30e6ea" kindref="member">makeMCConstraints</ref>(arma::sp_mat<sp/>&amp;MCLHS,<sp/>arma::vec<sp/>&amp;MCRHS)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_models_1_1_e_p_e_c_1a8400c73da6cca24c5e7fdfd390a19838" kindref="member">WriteCountry</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>filename,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>append<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_models_1_1_e_p_e_c_1a27f68538976f6d41d93dbc51f6711166" kindref="member">WriteFollower</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>filename,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec<sp/>x)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Attributes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="class_models_1_1_e_p_e_c_1a967c713d494e56a70652d0b5aad10045" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_models_1_1_e_p_e_c_1a967c713d494e56a70652d0b5aad10045" kindref="member">quadraticTax</ref><sp/>=<sp/>{</highlight><highlight class="keyword">false</highlight><highlight class="normal">};<sp/></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>double<sp/>TimeLimit<sp/>=<sp/>{-1};<sp/>///&lt;<sp/>Controls<sp/>the<sp/>TimeLimit<sp/>(s)<sp/>for<sp/>findNashEq</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><ref refid="class_models_1_1_e_p_e_c_1ad2ed81668039c974d5710bac7c1bd8b7" kindref="member">EPEC</ref>()<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="class_models_1_1_e_p_e_c_1a05bb954912158ca39f123ec1c6cdba9a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_models_1_1_e_p_e_c_1a05bb954912158ca39f123ec1c6cdba9a" kindref="member">EPEC</ref>(GRBEnv<sp/>*env,<sp/>arma::sp_mat<sp/><ref refid="class_models_1_1_e_p_e_c_1afe2b46d396e7980d8336099d8d916b19" kindref="member">TranspCosts</ref><sp/>=<sp/>{})</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_game_1_1_e_p_e_c" kindref="compound">Game::EPEC</ref>(env),<sp/><ref refid="class_models_1_1_e_p_e_c_1afe2b46d396e7980d8336099d8d916b19" kindref="member">TranspCosts</ref>{<ref refid="class_models_1_1_e_p_e_c_1afe2b46d396e7980d8336099d8d916b19" kindref="member">TranspCosts</ref>}<sp/>{}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Unit<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_models_1_1_e_p_e_c_1ad4eddf9e6d7fa0391db41f647af25fc5" kindref="member">testLCP</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><ref refid="class_models_1_1_e_p_e_c_1ad2ed81668039c974d5710bac7c1bd8b7" kindref="member">EPEC</ref><sp/>&amp;<ref refid="class_models_1_1_e_p_e_c_1a14962535c0ee6c0f2669508d850dbfe1" kindref="member">addCountry</ref>(</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_models_1ad7371f9c9faadf542226ce85ac1cb596" kindref="member">LeadAllPar</ref><sp/>Params,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>addnlLeadVars<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><ref refid="class_models_1_1_e_p_e_c_1ad2ed81668039c974d5710bac7c1bd8b7" kindref="member">EPEC</ref><sp/>&amp;<ref refid="class_models_1_1_e_p_e_c_1ae7423f15fd8596aeebc38d31f04d03c6" kindref="member">addTranspCosts</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::sp_mat<sp/>&amp;costs);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><ref refid="class_models_1_1_e_p_e_c_1a1d74390d88d7f5236d502eba172864ca" kindref="member">getPosition</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>countryCount,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_models_1a64b758b38a6e4004b84630ec087bf76e" kindref="member">LeaderVars</ref><sp/>var<sp/>=<sp/><ref refid="namespace_models_1a64b758b38a6e4004b84630ec087bf76eaf2dcda11a77f92f3c0cd7e08f37ce122" kindref="member">LeaderVars::FollowerStart</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><ref refid="class_models_1_1_e_p_e_c_1a1d74390d88d7f5236d502eba172864ca" kindref="member">getPosition</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;countryCount,</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_models_1a64b758b38a6e4004b84630ec087bf76e" kindref="member">LeaderVars</ref><sp/>var<sp/>=<sp/><ref refid="namespace_models_1a64b758b38a6e4004b84630ec087bf76eaf2dcda11a77f92f3c0cd7e08f37ce122" kindref="member">LeaderVars::FollowerStart</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><ref refid="class_models_1_1_e_p_e_c_1ad2ed81668039c974d5710bac7c1bd8b7" kindref="member">EPEC</ref><sp/>&amp;<ref refid="class_models_1_1_e_p_e_c_1a356a22aff221fad903b911014783651f" kindref="member">unlock</ref>();</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;GRBModel&gt;<sp/><ref refid="class_models_1_1_e_p_e_c_1a536a82c1fa0aa9b3a4e9f84669b17166" kindref="member">Respond</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>name,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec<sp/>&amp;x)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Data<sp/>access<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><ref refid="class_game_1_1_nash_game" kindref="compound">Game::NashGame</ref><sp/>*<ref refid="class_models_1_1_e_p_e_c_1aea86a7ca6a2f4d0bcedd2d7a02a4db89" kindref="member">get_LowerLevelNash</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Writing<sp/>model<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_models_1_1_e_p_e_c_1a7ab042a6cac2e61ce8039f25d9a8a0db" kindref="member">write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>filename,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>append<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_models_1_1_e_p_e_c_1a7ab042a6cac2e61ce8039f25d9a8a0db" kindref="member">write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>filename,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>append<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_models_1_1_e_p_e_c_1abdfa0a37634cbecc7a0d1a953d9dae44" kindref="member">readSolutionJSON</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>filename);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_models_1_1_e_p_e_c_1a0b4f42c3d7a8bac1673ecd63faee254b" kindref="member">writeSolutionJSON</ref>(std::string<sp/>filename,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec<sp/>x,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec<sp/>z)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_models_1_1_e_p_e_c_1a52dd1bf3d61d40aa3f461403377d73de" kindref="member">writeSolution</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>writeLevel,<sp/>std::string<sp/>filename)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="class_models_1_1_e_p_e_c_1a32f76f4e828f8f7ffa6d76f889b60bc5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_models_1_1_e_p_e_c_instance" kindref="compound">EPECInstance</ref><sp/><ref refid="class_models_1_1_e_p_e_c_1a32f76f4e828f8f7ffa6d76f889b60bc5" kindref="member">getInstance</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_models_1_1_e_p_e_c_instance" kindref="compound">EPECInstance</ref>(this-&gt;AllLeadPars,<sp/>this-&gt;TranspCosts);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal">};</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="namespace_models_1a54b54aa6ddb1d9e337f9fea85a2d0ceb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespace_models_1a54b54aa6ddb1d9e337f9fea85a2d0ceb" kindref="member">prn</ref><sp/>{<sp/><ref refid="namespace_models_1a54b54aa6ddb1d9e337f9fea85a2d0cebad304ba20e96d87411588eeabac850e34" kindref="member">label</ref>,<sp/><ref refid="namespace_models_1a54b54aa6ddb1d9e337f9fea85a2d0ceba3a6d0284e743dc4a9b86f97d6dd1a3bf" kindref="member">val</ref><sp/>};</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal">std::ostream<sp/>&amp;<ref refid="namespace_models_1a322ba4df5ecd2c7fbec05df2e81ae9e2" kindref="member">operator&lt;&lt;</ref>(std::ostream<sp/>&amp;ost,<sp/><ref refid="namespace_models_1a54b54aa6ddb1d9e337f9fea85a2d0ceb" kindref="member">Models::prn</ref><sp/>l);</highlight></codeline>
<codeline lineno="302"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Models</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gurobi<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal">std::string<sp/><ref refid="epec__models_8h_1a0cb07b2258983336a21ed1a2cdaffd9e" kindref="member">to_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GRBVar<sp/>&amp;var);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal">std::string<sp/><ref refid="epec__models_8h_1a0cb07b2258983336a21ed1a2cdaffd9e" kindref="member">to_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GRBConstr<sp/>&amp;cons,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GRBModel<sp/>&amp;model);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><ref refid="struct_models_1_1_foll_par" kindref="compound">Models::FollPar</ref><sp/><ref refid="epec__models_8h_1a068bbe67e10741d18e41e9390ecd95b0" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_models_1_1_foll_par" kindref="compound">Models::FollPar</ref><sp/>&amp;F1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_models_1_1_foll_par" kindref="compound">Models::FollPar</ref><sp/>&amp;F2);</highlight></codeline>
    </programlisting>
    <location file="include/interfaces/epec_models.h"/>
  </compounddef>
</doxygen>
