<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="class_game_1_1_abstract_game" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>Game::AbstractGame</compoundname>
    <includes refid="games_8h" local="no">games.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>DataObjectType</declname>
        <defname>DataObjectType</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_game_1_1_abstract_game_1a6d06c8b5fe1f191283a9926b30d6b1d0" prot="protected" static="no" mutable="no">
        <type>std::chrono::high_resolution_clock::time_point</type>
        <definition>std::chrono::high_resolution_clock::time_point Game::AbstractGame&lt; DataObjectType &gt;::InitTime</definition>
        <argsstring></argsstring>
        <name>InitTime</name>
        <briefdescription>
<para>&lt; An abstract game implements the shared members for all derived games. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/games.h" line="26" column="49" bodyfile="include/games/games.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_game_1_1_abstract_game_1a5ecc6e6433baef6b13f35d7bb45856ce" prot="protected" static="no" mutable="no">
        <type><ref refid="struct_z_e_r_o_statistics" kindref="compound">ZEROStatistics</ref>&lt; DataObjectType &gt;</type>
        <definition>ZEROStatistics&lt;DataObjectType&gt; Game::AbstractGame&lt; DataObjectType &gt;::Stats</definition>
        <argsstring></argsstring>
        <name>Stats</name>
        <initializer>= <ref refid="struct_z_e_r_o_statistics" kindref="compound">ZEROStatistics</ref>&lt;DataObjectType&gt;(DataObjectType())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/games.h" line="27" column="17" bodyfile="include/games/games.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_game_1_1_abstract_game_1ad6cd844e2dcfbc9ce2b8069c6ef3e2be" prot="protected" static="no" mutable="no">
        <type>GRBEnv *</type>
        <definition>GRBEnv* Game::AbstractGame&lt; DataObjectType &gt;::Env</definition>
        <argsstring></argsstring>
        <name>Env</name>
        <briefdescription>
<para>Store run time information. </para>
        </briefdescription>
        <detaileddescription>
<para>The Gurobi environment </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/games.h" line="29" column="14" bodyfile="include/games/games.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_game_1_1_abstract_game_1a2fd0ab6ee7cda7a9a582b79e94705bc7" prot="protected" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Game::AbstractGame&lt; DataObjectType &gt;::NumVariables</definition>
        <argsstring></argsstring>
        <name>NumVariables</name>
        <initializer>{0}</initializer>
        <briefdescription>
<para>The number of variables in the game. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/games.h" line="30" column="15" bodyfile="include/games/games.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_game_1_1_abstract_game_1a01da21edfe49ed5771a9eed714b87418" prot="protected" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Game::AbstractGame&lt; DataObjectType &gt;::NumPlayers</definition>
        <argsstring></argsstring>
        <name>NumPlayers</name>
        <initializer>{0}</initializer>
        <briefdescription>
<para>The number of players in the game. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/games.h" line="31" column="15" bodyfile="include/games/games.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_game_1_1_abstract_game_1ab8f814c2c71542d1aa73bd66ef93befc" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Game::AbstractGame&lt; DataObjectType &gt;::NashEquilibrium</definition>
        <argsstring></argsstring>
        <name>NashEquilibrium</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>True if computeNashEq returned an equilibrium. Note that this can be the equilibrium of an approximation, and not to the original game. Refer to <ref refid="class_game_1_1_abstract_game_1af46405f6383d00abaa8320ac49d88066" kindref="member">isSolved()</ref> to get a definitive answer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/games.h" line="32" column="7" bodyfile="include/games/games.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_game_1_1_abstract_game_1a994e78ea9cbe14be8786836082024e9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Game::AbstractGame&lt; DataObjectType &gt;::AbstractGame</definition>
        <argsstring>(GRBEnv *env)</argsstring>
        <name>AbstractGame</name>
        <param>
          <type>GRBEnv *</type>
          <declname>env</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/games.h" line="36" column="2" bodyfile="include/games/games.h" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_abstract_game_1a112372b7b49c59c64538fa065fdbe54f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Game::AbstractGame&lt; DataObjectType &gt;::AbstractGame</definition>
        <argsstring>()=default</argsstring>
        <name>AbstractGame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/games.h" line="37" column="2"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_abstract_game_1a29232b09b7a9b7f61e5d04ce83fe8f1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Game::AbstractGame&lt; DataObjectType &gt;::AbstractGame</definition>
        <argsstring>(AbstractGame &amp;)=delete</argsstring>
        <name>AbstractGame</name>
        <param>
          <type><ref refid="class_game_1_1_abstract_game" kindref="compound">AbstractGame</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/games.h" line="38" column="2"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_abstract_game_1a1c50cfa3e8b728eebb8662ed184b206a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Game::AbstractGame&lt; DataObjectType &gt;::~AbstractGame</definition>
        <argsstring>()=default</argsstring>
        <name>~AbstractGame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/games.h" line="39" column="2"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_abstract_game_1a5b8636444d39891af65972566270dcc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>const void</type>
        <definition>virtual const void Game::AbstractGame&lt; DataObjectType &gt;::findNashEq</definition>
        <argsstring>()=0</argsstring>
        <name>findNashEq</name>
        <reimplementedby refid="class_game_1_1_i_p_g_1a1b2c4bee27025af5921780ca2a41fe28">findNashEq</reimplementedby>
        <reimplementedby refid="class_game_1_1_e_p_e_c_1a0ccc0813ba049fed45db48d398b04c6e">findNashEq</reimplementedby>
        <briefdescription>
<para>The main method to start the solving process. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/games.h" line="40" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_abstract_game_1af46405f6383d00abaa8320ac49d88066" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool Game::AbstractGame&lt; DataObjectType &gt;::isSolved</definition>
        <argsstring>(double tol=1e-5) const =0</argsstring>
        <name>isSolved</name>
        <reimplementedby refid="class_game_1_1_i_p_g_1ad999f9085c75eed024e09b87b3b832b4">isSolved</reimplementedby>
        <reimplementedby refid="class_game_1_1_e_p_e_c_1aee023f968cf0b8587a5150c52fe3368c">isSolved</reimplementedby>
        <param>
          <type>double</type>
          <declname>tol</declname>
          <defval>1e-5</defval>
        </param>
        <briefdescription>
<para>Return a bool true if the strategies are all pure, for any player. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/games.h" line="41" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_abstract_game_1a4efc3116423b078421949dc18cfb3e32" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool Game::AbstractGame&lt; DataObjectType &gt;::isPureStrategy</definition>
        <argsstring>(double tol=1e-5) const =0</argsstring>
        <name>isPureStrategy</name>
        <reimplementedby refid="class_game_1_1_i_p_g_1ad66d221d1f3e15ec6b7cca5cdc5ef5aa">isPureStrategy</reimplementedby>
        <reimplementedby refid="class_game_1_1_e_p_e_c_1aace867d4b45457e8758741ed9db7b349">isPureStrategy</reimplementedby>
        <param>
          <type>double</type>
          <declname>tol</declname>
          <defval>1e-5</defval>
        </param>
        <briefdescription>
<para>equilibrium is a pure strategy </para>
        </briefdescription>
        <detaileddescription>
<para>Return a bool indicating whether the </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/games.h" line="44" column="2"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_abstract_game_1a8db787260e01e0a9004d00f2a19fcf5a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_z_e_r_o_statistics" kindref="compound">ZEROStatistics</ref>&lt; DataObjectType &gt;</type>
        <definition>ZEROStatistics&lt;DataObjectType&gt; Game::AbstractGame&lt; DataObjectType &gt;::getStatistics</definition>
        <argsstring>() const</argsstring>
        <name>getStatistics</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/games.h" line="46" column="17" bodyfile="include/games/games.h" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_abstract_game_1a8b891e54ad22f7364e8f164c37848aa8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Game::AbstractGame&lt; DataObjectType &gt;::setNumThreads</definition>
        <argsstring>(unsigned int t)</argsstring>
        <name>setNumThreads</name>
        <param>
          <type>unsigned int</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/games.h" line="47" column="33" bodyfile="include/games/games.h" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_abstract_game_1a8f9d5a9d366c2604993c3e3df4e69b6a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Game::AbstractGame&lt; DataObjectType &gt;::setRandomSeed</definition>
        <argsstring>(unsigned int t)</argsstring>
        <name>setRandomSeed</name>
        <param>
          <type>unsigned int</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/games.h" line="51" column="7" bodyfile="include/games/games.h" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_abstract_game_1af08964bd9ddff0910b3e3f7d4c91ba95" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Game::AbstractGame&lt; DataObjectType &gt;::setIndicators</definition>
        <argsstring>(bool val)</argsstring>
        <name>setIndicators</name>
        <param>
          <type>bool</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/games.h" line="53" column="7" bodyfile="include/games/games.h" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_abstract_game_1ab3f40775d56c9ca540961b99ce646960" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Game::AbstractGame&lt; DataObjectType &gt;::setPureNashEquilibrium</definition>
        <argsstring>(bool val)</argsstring>
        <name>setPureNashEquilibrium</name>
        <param>
          <type>bool</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/games.h" line="55" column="7" bodyfile="include/games/games.h" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_abstract_game_1a4b5301f753b2f1dacdb354971d2511ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Game::AbstractGame&lt; DataObjectType &gt;::setDeviationTolerance</definition>
        <argsstring>(double val)</argsstring>
        <name>setDeviationTolerance</name>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/games.h" line="56" column="7" bodyfile="include/games/games.h" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_abstract_game_1a44346c2909132d7977b6fb4ac4852723" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Game::AbstractGame&lt; DataObjectType &gt;::setTimeLimit</definition>
        <argsstring>(double val)</argsstring>
        <name>setTimeLimit</name>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/games.h" line="60" column="7" bodyfile="include/games/games.h" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_abstract_game_1ad3f7c02e978d71834bc13b74162571f4" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Game::AbstractGame&lt; DataObjectType &gt;::getNumVar</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getNumVar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/games.h" line="61" column="7" bodyfile="include/games/games.h" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_game_1_1_abstract_game_1a6a84032e333484d0313064cfee3ba46c" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Game::AbstractGame&lt; DataObjectType &gt;::getNumPlayers</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getNumPlayers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/games/games.h" line="62" column="7" bodyfile="include/games/games.h" bodystart="62" bodyend="62"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/games/games.h" line="23" column="33" bodyfile="include/games/games.h" bodystart="23" bodyend="63"/>
    <listofallmembers>
      <member refid="class_game_1_1_abstract_game_1a994e78ea9cbe14be8786836082024e9a" prot="public" virt="non-virtual"><scope>Game::AbstractGame</scope><name>AbstractGame</name></member>
      <member refid="class_game_1_1_abstract_game_1a112372b7b49c59c64538fa065fdbe54f" prot="public" virt="non-virtual"><scope>Game::AbstractGame</scope><name>AbstractGame</name></member>
      <member refid="class_game_1_1_abstract_game_1a29232b09b7a9b7f61e5d04ce83fe8f1d" prot="public" virt="non-virtual"><scope>Game::AbstractGame</scope><name>AbstractGame</name></member>
      <member refid="class_game_1_1_abstract_game_1ad6cd844e2dcfbc9ce2b8069c6ef3e2be" prot="protected" virt="non-virtual"><scope>Game::AbstractGame</scope><name>Env</name></member>
      <member refid="class_game_1_1_abstract_game_1a5b8636444d39891af65972566270dcc6" prot="public" virt="pure-virtual"><scope>Game::AbstractGame</scope><name>findNashEq</name></member>
      <member refid="class_game_1_1_abstract_game_1a6a84032e333484d0313064cfee3ba46c" prot="public" virt="non-virtual"><scope>Game::AbstractGame</scope><name>getNumPlayers</name></member>
      <member refid="class_game_1_1_abstract_game_1ad3f7c02e978d71834bc13b74162571f4" prot="public" virt="non-virtual"><scope>Game::AbstractGame</scope><name>getNumVar</name></member>
      <member refid="class_game_1_1_abstract_game_1a8db787260e01e0a9004d00f2a19fcf5a" prot="public" virt="non-virtual"><scope>Game::AbstractGame</scope><name>getStatistics</name></member>
      <member refid="class_game_1_1_abstract_game_1a6d06c8b5fe1f191283a9926b30d6b1d0" prot="protected" virt="non-virtual"><scope>Game::AbstractGame</scope><name>InitTime</name></member>
      <member refid="class_game_1_1_abstract_game_1a4efc3116423b078421949dc18cfb3e32" prot="public" virt="pure-virtual"><scope>Game::AbstractGame</scope><name>isPureStrategy</name></member>
      <member refid="class_game_1_1_abstract_game_1af46405f6383d00abaa8320ac49d88066" prot="public" virt="pure-virtual"><scope>Game::AbstractGame</scope><name>isSolved</name></member>
      <member refid="class_game_1_1_abstract_game_1ab8f814c2c71542d1aa73bd66ef93befc" prot="protected" virt="non-virtual"><scope>Game::AbstractGame</scope><name>NashEquilibrium</name></member>
      <member refid="class_game_1_1_abstract_game_1a01da21edfe49ed5771a9eed714b87418" prot="protected" virt="non-virtual"><scope>Game::AbstractGame</scope><name>NumPlayers</name></member>
      <member refid="class_game_1_1_abstract_game_1a2fd0ab6ee7cda7a9a582b79e94705bc7" prot="protected" virt="non-virtual"><scope>Game::AbstractGame</scope><name>NumVariables</name></member>
      <member refid="class_game_1_1_abstract_game_1a4b5301f753b2f1dacdb354971d2511ee" prot="public" virt="non-virtual"><scope>Game::AbstractGame</scope><name>setDeviationTolerance</name></member>
      <member refid="class_game_1_1_abstract_game_1af08964bd9ddff0910b3e3f7d4c91ba95" prot="public" virt="non-virtual"><scope>Game::AbstractGame</scope><name>setIndicators</name></member>
      <member refid="class_game_1_1_abstract_game_1a8b891e54ad22f7364e8f164c37848aa8" prot="public" virt="non-virtual"><scope>Game::AbstractGame</scope><name>setNumThreads</name></member>
      <member refid="class_game_1_1_abstract_game_1ab3f40775d56c9ca540961b99ce646960" prot="public" virt="non-virtual"><scope>Game::AbstractGame</scope><name>setPureNashEquilibrium</name></member>
      <member refid="class_game_1_1_abstract_game_1a8f9d5a9d366c2604993c3e3df4e69b6a" prot="public" virt="non-virtual"><scope>Game::AbstractGame</scope><name>setRandomSeed</name></member>
      <member refid="class_game_1_1_abstract_game_1a44346c2909132d7977b6fb4ac4852723" prot="public" virt="non-virtual"><scope>Game::AbstractGame</scope><name>setTimeLimit</name></member>
      <member refid="class_game_1_1_abstract_game_1a5ecc6e6433baef6b13f35d7bb45856ce" prot="protected" virt="non-virtual"><scope>Game::AbstractGame</scope><name>Stats</name></member>
      <member refid="class_game_1_1_abstract_game_1a1c50cfa3e8b728eebb8662ed184b206a" prot="public" virt="non-virtual"><scope>Game::AbstractGame</scope><name>~AbstractGame</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
