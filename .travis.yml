os: linux
language: python
python: "3.7"


os: linux 
dist: trusty 
sudo: false

matrix:
include:
# With C++17, on Clang
    - env: UNIT_TESTS=true COMPILER=default BOOST_VERSION=default CMAKE_OPTIONS="-DCMAKE_CXX_STANDARD=17 -DCMAKE_CXX_STANDARD_REQUIRED=ON"
addons: *defaults
# With C++17, on GCC
    - env: UNIT_TESTS=true COMPILER=g++-6     BOOST_VERSION=default CMAKE_OPTIONS="-DCMAKE_CXX_STANDARD=17 -DCMAKE_CXX_STANDARD_REQUIRED=ON"
addons: { apt: { packages: ["g++-6", "valgrind"], sources: ["ubuntu-toolchain-r-test"] } }




install:
############################################################################
# All the dependencies are installed in ${HOME}/deps/
############################################################################
  - DEPS_DIR="${HOME}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}
############################################################################
# Setup default versions and override CXX set by Travis if needed
############################################################################
  - if [[ "${COMPILER}" == "default" ]]; then COMPILER=clang++-7; fi
  - if [[ "${BOOST_VERSION}" == "default" ]]; then BOOST_VERSION=1.66.0; fi
  - if [[ "${COMPILER}" != "" ]]; then export CXX=${COMPILER}; fi
  - ${CXX} --version
############################################################################
# Install a recent CMake
############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://www.cmake.org/files/v3.3/cmake-3.3.1-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    else
      brew install cmake || brew upgrade cmake
    fi
  - cmake --version
  
  
# Install conan
  - pip install conan
# Automatic detection of your arch, compiler, etc.
  - conan user
  
  
script:
# Download dependencies and build project
  - conan remote add -i 1 darcamo-bintray https://api.bintray.com/conan/darcamo/cppsim
  - conan install .
# Call your build system
  - cmake .
